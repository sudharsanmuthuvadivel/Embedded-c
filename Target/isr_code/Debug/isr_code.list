
isr_code.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001220  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000004c  080013b0  080013b0  000113b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080013fc  080013fc  00020074  2**0
                  CONTENTS
  4 .ARM          00000000  080013fc  080013fc  00020074  2**0
                  CONTENTS
  5 .preinit_array 00000000  080013fc  080013fc  00020074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080013fc  080013fc  000113fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001400  08001400  00011400  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000074  20000000  08001404  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020074  2**0
                  CONTENTS
 10 .bss          00000174  20000074  20000074  00020074  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001e8  200001e8  00020074  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020074  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  000200a4  2**0
                  CONTENTS, READONLY
 14 .debug_info   000009f4  00000000  00000000  000200e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 0000035e  00000000  00000000  00020adb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000120  00000000  00000000  00020e40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000c4  00000000  00000000  00020f60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00002c89  00000000  00000000  00021024  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00001478  00000000  00000000  00023cad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000097af  00000000  00000000  00025125  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000b24  00000000  00000000  0002e8d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000054  00000000  00000000  0002f3f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000074 	.word	0x20000074
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08001398 	.word	0x08001398

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000078 	.word	0x20000078
 80001cc:	08001398 	.word	0x08001398

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <main>:
uint32_t volatile *pEXTTIEdgeCtrlReg		= (uint32_t*) (0x40013C00 + 0x08);
uint32_t volatile *pNVICIRQEnReg 			= (uint32_t*) 0xE000E100;


int main(void)
{
 8000270:	b580      	push	{r7, lr}
 8000272:	b082      	sub	sp, #8
 8000274:	af00      	add	r7, sp, #0
	button_init();
 8000276:	f000 f839 	bl	80002ec <button_init>

	while(1)
	{
		//Disable interrupt
		*pEXTIMaskReg &= ~( 1 << 0);
 800027a:	4b17      	ldr	r3, [pc, #92]	; (80002d8 <main+0x68>)
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	681a      	ldr	r2, [r3, #0]
 8000280:	4b15      	ldr	r3, [pc, #84]	; (80002d8 <main+0x68>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	f022 0201 	bic.w	r2, r2, #1
 8000288:	601a      	str	r2, [r3, #0]

		if(g_button_pressed){
 800028a:	4b14      	ldr	r3, [pc, #80]	; (80002dc <main+0x6c>)
 800028c:	781b      	ldrb	r3, [r3, #0]
 800028e:	b2db      	uxtb	r3, r3
 8000290:	2b00      	cmp	r3, #0
 8000292:	d017      	beq.n	80002c4 <main+0x54>
			//Some delay until button debouncing gets over
			for(uint32_t volatile i=0;i<500000/2;i++);
 8000294:	2300      	movs	r3, #0
 8000296:	607b      	str	r3, [r7, #4]
 8000298:	e002      	b.n	80002a0 <main+0x30>
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	3301      	adds	r3, #1
 800029e:	607b      	str	r3, [r7, #4]
 80002a0:	687b      	ldr	r3, [r7, #4]
 80002a2:	4a0f      	ldr	r2, [pc, #60]	; (80002e0 <main+0x70>)
 80002a4:	4293      	cmp	r3, r2
 80002a6:	d9f8      	bls.n	800029a <main+0x2a>
			g_button_press_count++;
 80002a8:	4b0e      	ldr	r3, [pc, #56]	; (80002e4 <main+0x74>)
 80002aa:	681b      	ldr	r3, [r3, #0]
 80002ac:	3301      	adds	r3, #1
 80002ae:	4a0d      	ldr	r2, [pc, #52]	; (80002e4 <main+0x74>)
 80002b0:	6013      	str	r3, [r2, #0]
			printf("Button is pressed : %lu\n",g_button_press_count);
 80002b2:	4b0c      	ldr	r3, [pc, #48]	; (80002e4 <main+0x74>)
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	4619      	mov	r1, r3
 80002b8:	480b      	ldr	r0, [pc, #44]	; (80002e8 <main+0x78>)
 80002ba:	f000 f9f7 	bl	80006ac <iprintf>
			g_button_pressed = 0;
 80002be:	4b07      	ldr	r3, [pc, #28]	; (80002dc <main+0x6c>)
 80002c0:	2200      	movs	r2, #0
 80002c2:	701a      	strb	r2, [r3, #0]
		}

		//Enable interrupt
		*pEXTIMaskReg |= ( 1 << 0);
 80002c4:	4b04      	ldr	r3, [pc, #16]	; (80002d8 <main+0x68>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	681a      	ldr	r2, [r3, #0]
 80002ca:	4b03      	ldr	r3, [pc, #12]	; (80002d8 <main+0x68>)
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	f042 0201 	orr.w	r2, r2, #1
 80002d2:	601a      	str	r2, [r3, #0]
		*pEXTIMaskReg &= ~( 1 << 0);
 80002d4:	e7d1      	b.n	800027a <main+0xa>
 80002d6:	bf00      	nop
 80002d8:	2000000c 	.word	0x2000000c
 80002dc:	20000090 	.word	0x20000090
 80002e0:	0003d08f 	.word	0x0003d08f
 80002e4:	20000094 	.word	0x20000094
 80002e8:	080013b0 	.word	0x080013b0

080002ec <button_init>:

}


void button_init(void)
{
 80002ec:	b480      	push	{r7}
 80002ee:	af00      	add	r7, sp, #0

  *pClkCtrlReg |= ( 1 << 0);
 80002f0:	4b16      	ldr	r3, [pc, #88]	; (800034c <button_init+0x60>)
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	681a      	ldr	r2, [r3, #0]
 80002f6:	4b15      	ldr	r3, [pc, #84]	; (800034c <button_init+0x60>)
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	f042 0201 	orr.w	r2, r2, #1
 80002fe:	601a      	str	r2, [r3, #0]

  *pClkCtrlRegApb2 |= ( 1 << 14);
 8000300:	4b13      	ldr	r3, [pc, #76]	; (8000350 <button_init+0x64>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	681a      	ldr	r2, [r3, #0]
 8000306:	4b12      	ldr	r3, [pc, #72]	; (8000350 <button_init+0x64>)
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800030e:	601a      	str	r2, [r3, #0]

  *pEXTTIEdgeCtrlReg |= ( 1 << 0);
 8000310:	4b10      	ldr	r3, [pc, #64]	; (8000354 <button_init+0x68>)
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	681a      	ldr	r2, [r3, #0]
 8000316:	4b0f      	ldr	r3, [pc, #60]	; (8000354 <button_init+0x68>)
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	f042 0201 	orr.w	r2, r2, #1
 800031e:	601a      	str	r2, [r3, #0]

  *pEXTIMaskReg |= ( 1 << 0);
 8000320:	4b0d      	ldr	r3, [pc, #52]	; (8000358 <button_init+0x6c>)
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	681a      	ldr	r2, [r3, #0]
 8000326:	4b0c      	ldr	r3, [pc, #48]	; (8000358 <button_init+0x6c>)
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	f042 0201 	orr.w	r2, r2, #1
 800032e:	601a      	str	r2, [r3, #0]

  *pNVICIRQEnReg |= ( 1 << 6);
 8000330:	4b0a      	ldr	r3, [pc, #40]	; (800035c <button_init+0x70>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	681a      	ldr	r2, [r3, #0]
 8000336:	4b09      	ldr	r3, [pc, #36]	; (800035c <button_init+0x70>)
 8000338:	681b      	ldr	r3, [r3, #0]
 800033a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800033e:	601a      	str	r2, [r3, #0]

}
 8000340:	bf00      	nop
 8000342:	46bd      	mov	sp, r7
 8000344:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000348:	4770      	bx	lr
 800034a:	bf00      	nop
 800034c:	20000004 	.word	0x20000004
 8000350:	20000008 	.word	0x20000008
 8000354:	20000010 	.word	0x20000010
 8000358:	2000000c 	.word	0x2000000c
 800035c:	20000014 	.word	0x20000014

08000360 <EXTI0_IRQHandler>:

/* This is button interrupt handler*/
void EXTI0_IRQHandler(void)
{
 8000360:	b480      	push	{r7}
 8000362:	af00      	add	r7, sp, #0
	//Make this flag SET . if button pressed
  g_button_pressed = 1;
 8000364:	4b07      	ldr	r3, [pc, #28]	; (8000384 <EXTI0_IRQHandler+0x24>)
 8000366:	2201      	movs	r2, #1
 8000368:	701a      	strb	r2, [r3, #0]

  *pEXTTIPendReg |= ( 1 << 0);
 800036a:	4b07      	ldr	r3, [pc, #28]	; (8000388 <EXTI0_IRQHandler+0x28>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	681a      	ldr	r2, [r3, #0]
 8000370:	4b05      	ldr	r3, [pc, #20]	; (8000388 <EXTI0_IRQHandler+0x28>)
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	f042 0201 	orr.w	r2, r2, #1
 8000378:	601a      	str	r2, [r3, #0]
}
 800037a:	bf00      	nop
 800037c:	46bd      	mov	sp, r7
 800037e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000382:	4770      	bx	lr
 8000384:	20000090 	.word	0x20000090
 8000388:	20000000 	.word	0x20000000

0800038c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800038c:	b580      	push	{r7, lr}
 800038e:	b086      	sub	sp, #24
 8000390:	af00      	add	r7, sp, #0
 8000392:	60f8      	str	r0, [r7, #12]
 8000394:	60b9      	str	r1, [r7, #8]
 8000396:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000398:	2300      	movs	r3, #0
 800039a:	617b      	str	r3, [r7, #20]
 800039c:	e00a      	b.n	80003b4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800039e:	f3af 8000 	nop.w
 80003a2:	4601      	mov	r1, r0
 80003a4:	68bb      	ldr	r3, [r7, #8]
 80003a6:	1c5a      	adds	r2, r3, #1
 80003a8:	60ba      	str	r2, [r7, #8]
 80003aa:	b2ca      	uxtb	r2, r1
 80003ac:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ae:	697b      	ldr	r3, [r7, #20]
 80003b0:	3301      	adds	r3, #1
 80003b2:	617b      	str	r3, [r7, #20]
 80003b4:	697a      	ldr	r2, [r7, #20]
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	429a      	cmp	r2, r3
 80003ba:	dbf0      	blt.n	800039e <_read+0x12>
  }

  return len;
 80003bc:	687b      	ldr	r3, [r7, #4]
}
 80003be:	4618      	mov	r0, r3
 80003c0:	3718      	adds	r7, #24
 80003c2:	46bd      	mov	sp, r7
 80003c4:	bd80      	pop	{r7, pc}

080003c6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003c6:	b580      	push	{r7, lr}
 80003c8:	b086      	sub	sp, #24
 80003ca:	af00      	add	r7, sp, #0
 80003cc:	60f8      	str	r0, [r7, #12]
 80003ce:	60b9      	str	r1, [r7, #8]
 80003d0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003d2:	2300      	movs	r3, #0
 80003d4:	617b      	str	r3, [r7, #20]
 80003d6:	e009      	b.n	80003ec <_write+0x26>
  {
    __io_putchar(*ptr++);
 80003d8:	68bb      	ldr	r3, [r7, #8]
 80003da:	1c5a      	adds	r2, r3, #1
 80003dc:	60ba      	str	r2, [r7, #8]
 80003de:	781b      	ldrb	r3, [r3, #0]
 80003e0:	4618      	mov	r0, r3
 80003e2:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e6:	697b      	ldr	r3, [r7, #20]
 80003e8:	3301      	adds	r3, #1
 80003ea:	617b      	str	r3, [r7, #20]
 80003ec:	697a      	ldr	r2, [r7, #20]
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	429a      	cmp	r2, r3
 80003f2:	dbf1      	blt.n	80003d8 <_write+0x12>
  }
  return len;
 80003f4:	687b      	ldr	r3, [r7, #4]
}
 80003f6:	4618      	mov	r0, r3
 80003f8:	3718      	adds	r7, #24
 80003fa:	46bd      	mov	sp, r7
 80003fc:	bd80      	pop	{r7, pc}

080003fe <_close>:

int _close(int file)
{
 80003fe:	b480      	push	{r7}
 8000400:	b083      	sub	sp, #12
 8000402:	af00      	add	r7, sp, #0
 8000404:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000406:	f04f 33ff 	mov.w	r3, #4294967295
}
 800040a:	4618      	mov	r0, r3
 800040c:	370c      	adds	r7, #12
 800040e:	46bd      	mov	sp, r7
 8000410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000414:	4770      	bx	lr

08000416 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000416:	b480      	push	{r7}
 8000418:	b083      	sub	sp, #12
 800041a:	af00      	add	r7, sp, #0
 800041c:	6078      	str	r0, [r7, #4]
 800041e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000420:	683b      	ldr	r3, [r7, #0]
 8000422:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000426:	605a      	str	r2, [r3, #4]
  return 0;
 8000428:	2300      	movs	r3, #0
}
 800042a:	4618      	mov	r0, r3
 800042c:	370c      	adds	r7, #12
 800042e:	46bd      	mov	sp, r7
 8000430:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000434:	4770      	bx	lr

08000436 <_isatty>:

int _isatty(int file)
{
 8000436:	b480      	push	{r7}
 8000438:	b083      	sub	sp, #12
 800043a:	af00      	add	r7, sp, #0
 800043c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800043e:	2301      	movs	r3, #1
}
 8000440:	4618      	mov	r0, r3
 8000442:	370c      	adds	r7, #12
 8000444:	46bd      	mov	sp, r7
 8000446:	f85d 7b04 	ldr.w	r7, [sp], #4
 800044a:	4770      	bx	lr

0800044c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800044c:	b480      	push	{r7}
 800044e:	b085      	sub	sp, #20
 8000450:	af00      	add	r7, sp, #0
 8000452:	60f8      	str	r0, [r7, #12]
 8000454:	60b9      	str	r1, [r7, #8]
 8000456:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000458:	2300      	movs	r3, #0
}
 800045a:	4618      	mov	r0, r3
 800045c:	3714      	adds	r7, #20
 800045e:	46bd      	mov	sp, r7
 8000460:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000464:	4770      	bx	lr
	...

08000468 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000468:	b580      	push	{r7, lr}
 800046a:	b086      	sub	sp, #24
 800046c:	af00      	add	r7, sp, #0
 800046e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000470:	4a14      	ldr	r2, [pc, #80]	; (80004c4 <_sbrk+0x5c>)
 8000472:	4b15      	ldr	r3, [pc, #84]	; (80004c8 <_sbrk+0x60>)
 8000474:	1ad3      	subs	r3, r2, r3
 8000476:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000478:	697b      	ldr	r3, [r7, #20]
 800047a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800047c:	4b13      	ldr	r3, [pc, #76]	; (80004cc <_sbrk+0x64>)
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	2b00      	cmp	r3, #0
 8000482:	d102      	bne.n	800048a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000484:	4b11      	ldr	r3, [pc, #68]	; (80004cc <_sbrk+0x64>)
 8000486:	4a12      	ldr	r2, [pc, #72]	; (80004d0 <_sbrk+0x68>)
 8000488:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800048a:	4b10      	ldr	r3, [pc, #64]	; (80004cc <_sbrk+0x64>)
 800048c:	681a      	ldr	r2, [r3, #0]
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	4413      	add	r3, r2
 8000492:	693a      	ldr	r2, [r7, #16]
 8000494:	429a      	cmp	r2, r3
 8000496:	d207      	bcs.n	80004a8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000498:	f000 f9ac 	bl	80007f4 <__errno>
 800049c:	4603      	mov	r3, r0
 800049e:	220c      	movs	r2, #12
 80004a0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004a2:	f04f 33ff 	mov.w	r3, #4294967295
 80004a6:	e009      	b.n	80004bc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004a8:	4b08      	ldr	r3, [pc, #32]	; (80004cc <_sbrk+0x64>)
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004ae:	4b07      	ldr	r3, [pc, #28]	; (80004cc <_sbrk+0x64>)
 80004b0:	681a      	ldr	r2, [r3, #0]
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	4413      	add	r3, r2
 80004b6:	4a05      	ldr	r2, [pc, #20]	; (80004cc <_sbrk+0x64>)
 80004b8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004ba:	68fb      	ldr	r3, [r7, #12]
}
 80004bc:	4618      	mov	r0, r3
 80004be:	3718      	adds	r7, #24
 80004c0:	46bd      	mov	sp, r7
 80004c2:	bd80      	pop	{r7, pc}
 80004c4:	20020000 	.word	0x20020000
 80004c8:	00000400 	.word	0x00000400
 80004cc:	20000098 	.word	0x20000098
 80004d0:	200001e8 	.word	0x200001e8

080004d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004d4:	480d      	ldr	r0, [pc, #52]	; (800050c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004d6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004d8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004dc:	480c      	ldr	r0, [pc, #48]	; (8000510 <LoopForever+0x6>)
  ldr r1, =_edata
 80004de:	490d      	ldr	r1, [pc, #52]	; (8000514 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004e0:	4a0d      	ldr	r2, [pc, #52]	; (8000518 <LoopForever+0xe>)
  movs r3, #0
 80004e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004e4:	e002      	b.n	80004ec <LoopCopyDataInit>

080004e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004ea:	3304      	adds	r3, #4

080004ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004f0:	d3f9      	bcc.n	80004e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004f2:	4a0a      	ldr	r2, [pc, #40]	; (800051c <LoopForever+0x12>)
  ldr r4, =_ebss
 80004f4:	4c0a      	ldr	r4, [pc, #40]	; (8000520 <LoopForever+0x16>)
  movs r3, #0
 80004f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004f8:	e001      	b.n	80004fe <LoopFillZerobss>

080004fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004fc:	3204      	adds	r2, #4

080004fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000500:	d3fb      	bcc.n	80004fa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000502:	f000 f97d 	bl	8000800 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000506:	f7ff feb3 	bl	8000270 <main>

0800050a <LoopForever>:

LoopForever:
  b LoopForever
 800050a:	e7fe      	b.n	800050a <LoopForever>
  ldr   r0, =_estack
 800050c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000510:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000514:	20000074 	.word	0x20000074
  ldr r2, =_sidata
 8000518:	08001404 	.word	0x08001404
  ldr r2, =_sbss
 800051c:	20000074 	.word	0x20000074
  ldr r4, =_ebss
 8000520:	200001e8 	.word	0x200001e8

08000524 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000524:	e7fe      	b.n	8000524 <ADC_IRQHandler>
	...

08000528 <std>:
 8000528:	2300      	movs	r3, #0
 800052a:	b510      	push	{r4, lr}
 800052c:	4604      	mov	r4, r0
 800052e:	e9c0 3300 	strd	r3, r3, [r0]
 8000532:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000536:	6083      	str	r3, [r0, #8]
 8000538:	8181      	strh	r1, [r0, #12]
 800053a:	6643      	str	r3, [r0, #100]	; 0x64
 800053c:	81c2      	strh	r2, [r0, #14]
 800053e:	6183      	str	r3, [r0, #24]
 8000540:	4619      	mov	r1, r3
 8000542:	2208      	movs	r2, #8
 8000544:	305c      	adds	r0, #92	; 0x5c
 8000546:	f000 f906 	bl	8000756 <memset>
 800054a:	4b0d      	ldr	r3, [pc, #52]	; (8000580 <std+0x58>)
 800054c:	6263      	str	r3, [r4, #36]	; 0x24
 800054e:	4b0d      	ldr	r3, [pc, #52]	; (8000584 <std+0x5c>)
 8000550:	62a3      	str	r3, [r4, #40]	; 0x28
 8000552:	4b0d      	ldr	r3, [pc, #52]	; (8000588 <std+0x60>)
 8000554:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000556:	4b0d      	ldr	r3, [pc, #52]	; (800058c <std+0x64>)
 8000558:	6323      	str	r3, [r4, #48]	; 0x30
 800055a:	4b0d      	ldr	r3, [pc, #52]	; (8000590 <std+0x68>)
 800055c:	6224      	str	r4, [r4, #32]
 800055e:	429c      	cmp	r4, r3
 8000560:	d006      	beq.n	8000570 <std+0x48>
 8000562:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8000566:	4294      	cmp	r4, r2
 8000568:	d002      	beq.n	8000570 <std+0x48>
 800056a:	33d0      	adds	r3, #208	; 0xd0
 800056c:	429c      	cmp	r4, r3
 800056e:	d105      	bne.n	800057c <std+0x54>
 8000570:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000574:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000578:	f000 b966 	b.w	8000848 <__retarget_lock_init_recursive>
 800057c:	bd10      	pop	{r4, pc}
 800057e:	bf00      	nop
 8000580:	080006d1 	.word	0x080006d1
 8000584:	080006f3 	.word	0x080006f3
 8000588:	0800072b 	.word	0x0800072b
 800058c:	0800074f 	.word	0x0800074f
 8000590:	2000009c 	.word	0x2000009c

08000594 <stdio_exit_handler>:
 8000594:	4a02      	ldr	r2, [pc, #8]	; (80005a0 <stdio_exit_handler+0xc>)
 8000596:	4903      	ldr	r1, [pc, #12]	; (80005a4 <stdio_exit_handler+0x10>)
 8000598:	4803      	ldr	r0, [pc, #12]	; (80005a8 <stdio_exit_handler+0x14>)
 800059a:	f000 b869 	b.w	8000670 <_fwalk_sglue>
 800059e:	bf00      	nop
 80005a0:	20000018 	.word	0x20000018
 80005a4:	080010f5 	.word	0x080010f5
 80005a8:	20000024 	.word	0x20000024

080005ac <cleanup_stdio>:
 80005ac:	6841      	ldr	r1, [r0, #4]
 80005ae:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <cleanup_stdio+0x34>)
 80005b0:	4299      	cmp	r1, r3
 80005b2:	b510      	push	{r4, lr}
 80005b4:	4604      	mov	r4, r0
 80005b6:	d001      	beq.n	80005bc <cleanup_stdio+0x10>
 80005b8:	f000 fd9c 	bl	80010f4 <_fflush_r>
 80005bc:	68a1      	ldr	r1, [r4, #8]
 80005be:	4b09      	ldr	r3, [pc, #36]	; (80005e4 <cleanup_stdio+0x38>)
 80005c0:	4299      	cmp	r1, r3
 80005c2:	d002      	beq.n	80005ca <cleanup_stdio+0x1e>
 80005c4:	4620      	mov	r0, r4
 80005c6:	f000 fd95 	bl	80010f4 <_fflush_r>
 80005ca:	68e1      	ldr	r1, [r4, #12]
 80005cc:	4b06      	ldr	r3, [pc, #24]	; (80005e8 <cleanup_stdio+0x3c>)
 80005ce:	4299      	cmp	r1, r3
 80005d0:	d004      	beq.n	80005dc <cleanup_stdio+0x30>
 80005d2:	4620      	mov	r0, r4
 80005d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005d8:	f000 bd8c 	b.w	80010f4 <_fflush_r>
 80005dc:	bd10      	pop	{r4, pc}
 80005de:	bf00      	nop
 80005e0:	2000009c 	.word	0x2000009c
 80005e4:	20000104 	.word	0x20000104
 80005e8:	2000016c 	.word	0x2000016c

080005ec <global_stdio_init.part.0>:
 80005ec:	b510      	push	{r4, lr}
 80005ee:	4b0b      	ldr	r3, [pc, #44]	; (800061c <global_stdio_init.part.0+0x30>)
 80005f0:	4c0b      	ldr	r4, [pc, #44]	; (8000620 <global_stdio_init.part.0+0x34>)
 80005f2:	4a0c      	ldr	r2, [pc, #48]	; (8000624 <global_stdio_init.part.0+0x38>)
 80005f4:	601a      	str	r2, [r3, #0]
 80005f6:	4620      	mov	r0, r4
 80005f8:	2200      	movs	r2, #0
 80005fa:	2104      	movs	r1, #4
 80005fc:	f7ff ff94 	bl	8000528 <std>
 8000600:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000604:	2201      	movs	r2, #1
 8000606:	2109      	movs	r1, #9
 8000608:	f7ff ff8e 	bl	8000528 <std>
 800060c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000610:	2202      	movs	r2, #2
 8000612:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000616:	2112      	movs	r1, #18
 8000618:	f7ff bf86 	b.w	8000528 <std>
 800061c:	200001d4 	.word	0x200001d4
 8000620:	2000009c 	.word	0x2000009c
 8000624:	08000595 	.word	0x08000595

08000628 <__sfp_lock_acquire>:
 8000628:	4801      	ldr	r0, [pc, #4]	; (8000630 <__sfp_lock_acquire+0x8>)
 800062a:	f000 b90e 	b.w	800084a <__retarget_lock_acquire_recursive>
 800062e:	bf00      	nop
 8000630:	200001dd 	.word	0x200001dd

08000634 <__sfp_lock_release>:
 8000634:	4801      	ldr	r0, [pc, #4]	; (800063c <__sfp_lock_release+0x8>)
 8000636:	f000 b909 	b.w	800084c <__retarget_lock_release_recursive>
 800063a:	bf00      	nop
 800063c:	200001dd 	.word	0x200001dd

08000640 <__sinit>:
 8000640:	b510      	push	{r4, lr}
 8000642:	4604      	mov	r4, r0
 8000644:	f7ff fff0 	bl	8000628 <__sfp_lock_acquire>
 8000648:	6a23      	ldr	r3, [r4, #32]
 800064a:	b11b      	cbz	r3, 8000654 <__sinit+0x14>
 800064c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000650:	f7ff bff0 	b.w	8000634 <__sfp_lock_release>
 8000654:	4b04      	ldr	r3, [pc, #16]	; (8000668 <__sinit+0x28>)
 8000656:	6223      	str	r3, [r4, #32]
 8000658:	4b04      	ldr	r3, [pc, #16]	; (800066c <__sinit+0x2c>)
 800065a:	681b      	ldr	r3, [r3, #0]
 800065c:	2b00      	cmp	r3, #0
 800065e:	d1f5      	bne.n	800064c <__sinit+0xc>
 8000660:	f7ff ffc4 	bl	80005ec <global_stdio_init.part.0>
 8000664:	e7f2      	b.n	800064c <__sinit+0xc>
 8000666:	bf00      	nop
 8000668:	080005ad 	.word	0x080005ad
 800066c:	200001d4 	.word	0x200001d4

08000670 <_fwalk_sglue>:
 8000670:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000674:	4607      	mov	r7, r0
 8000676:	4688      	mov	r8, r1
 8000678:	4614      	mov	r4, r2
 800067a:	2600      	movs	r6, #0
 800067c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000680:	f1b9 0901 	subs.w	r9, r9, #1
 8000684:	d505      	bpl.n	8000692 <_fwalk_sglue+0x22>
 8000686:	6824      	ldr	r4, [r4, #0]
 8000688:	2c00      	cmp	r4, #0
 800068a:	d1f7      	bne.n	800067c <_fwalk_sglue+0xc>
 800068c:	4630      	mov	r0, r6
 800068e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000692:	89ab      	ldrh	r3, [r5, #12]
 8000694:	2b01      	cmp	r3, #1
 8000696:	d907      	bls.n	80006a8 <_fwalk_sglue+0x38>
 8000698:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800069c:	3301      	adds	r3, #1
 800069e:	d003      	beq.n	80006a8 <_fwalk_sglue+0x38>
 80006a0:	4629      	mov	r1, r5
 80006a2:	4638      	mov	r0, r7
 80006a4:	47c0      	blx	r8
 80006a6:	4306      	orrs	r6, r0
 80006a8:	3568      	adds	r5, #104	; 0x68
 80006aa:	e7e9      	b.n	8000680 <_fwalk_sglue+0x10>

080006ac <iprintf>:
 80006ac:	b40f      	push	{r0, r1, r2, r3}
 80006ae:	b507      	push	{r0, r1, r2, lr}
 80006b0:	4906      	ldr	r1, [pc, #24]	; (80006cc <iprintf+0x20>)
 80006b2:	ab04      	add	r3, sp, #16
 80006b4:	6808      	ldr	r0, [r1, #0]
 80006b6:	f853 2b04 	ldr.w	r2, [r3], #4
 80006ba:	6881      	ldr	r1, [r0, #8]
 80006bc:	9301      	str	r3, [sp, #4]
 80006be:	f000 f9e9 	bl	8000a94 <_vfiprintf_r>
 80006c2:	b003      	add	sp, #12
 80006c4:	f85d eb04 	ldr.w	lr, [sp], #4
 80006c8:	b004      	add	sp, #16
 80006ca:	4770      	bx	lr
 80006cc:	20000070 	.word	0x20000070

080006d0 <__sread>:
 80006d0:	b510      	push	{r4, lr}
 80006d2:	460c      	mov	r4, r1
 80006d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006d8:	f000 f868 	bl	80007ac <_read_r>
 80006dc:	2800      	cmp	r0, #0
 80006de:	bfab      	itete	ge
 80006e0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80006e2:	89a3      	ldrhlt	r3, [r4, #12]
 80006e4:	181b      	addge	r3, r3, r0
 80006e6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80006ea:	bfac      	ite	ge
 80006ec:	6563      	strge	r3, [r4, #84]	; 0x54
 80006ee:	81a3      	strhlt	r3, [r4, #12]
 80006f0:	bd10      	pop	{r4, pc}

080006f2 <__swrite>:
 80006f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006f6:	461f      	mov	r7, r3
 80006f8:	898b      	ldrh	r3, [r1, #12]
 80006fa:	05db      	lsls	r3, r3, #23
 80006fc:	4605      	mov	r5, r0
 80006fe:	460c      	mov	r4, r1
 8000700:	4616      	mov	r6, r2
 8000702:	d505      	bpl.n	8000710 <__swrite+0x1e>
 8000704:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000708:	2302      	movs	r3, #2
 800070a:	2200      	movs	r2, #0
 800070c:	f000 f83c 	bl	8000788 <_lseek_r>
 8000710:	89a3      	ldrh	r3, [r4, #12]
 8000712:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000716:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800071a:	81a3      	strh	r3, [r4, #12]
 800071c:	4632      	mov	r2, r6
 800071e:	463b      	mov	r3, r7
 8000720:	4628      	mov	r0, r5
 8000722:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000726:	f000 b853 	b.w	80007d0 <_write_r>

0800072a <__sseek>:
 800072a:	b510      	push	{r4, lr}
 800072c:	460c      	mov	r4, r1
 800072e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000732:	f000 f829 	bl	8000788 <_lseek_r>
 8000736:	1c43      	adds	r3, r0, #1
 8000738:	89a3      	ldrh	r3, [r4, #12]
 800073a:	bf15      	itete	ne
 800073c:	6560      	strne	r0, [r4, #84]	; 0x54
 800073e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000742:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000746:	81a3      	strheq	r3, [r4, #12]
 8000748:	bf18      	it	ne
 800074a:	81a3      	strhne	r3, [r4, #12]
 800074c:	bd10      	pop	{r4, pc}

0800074e <__sclose>:
 800074e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000752:	f000 b809 	b.w	8000768 <_close_r>

08000756 <memset>:
 8000756:	4402      	add	r2, r0
 8000758:	4603      	mov	r3, r0
 800075a:	4293      	cmp	r3, r2
 800075c:	d100      	bne.n	8000760 <memset+0xa>
 800075e:	4770      	bx	lr
 8000760:	f803 1b01 	strb.w	r1, [r3], #1
 8000764:	e7f9      	b.n	800075a <memset+0x4>
	...

08000768 <_close_r>:
 8000768:	b538      	push	{r3, r4, r5, lr}
 800076a:	4d06      	ldr	r5, [pc, #24]	; (8000784 <_close_r+0x1c>)
 800076c:	2300      	movs	r3, #0
 800076e:	4604      	mov	r4, r0
 8000770:	4608      	mov	r0, r1
 8000772:	602b      	str	r3, [r5, #0]
 8000774:	f7ff fe43 	bl	80003fe <_close>
 8000778:	1c43      	adds	r3, r0, #1
 800077a:	d102      	bne.n	8000782 <_close_r+0x1a>
 800077c:	682b      	ldr	r3, [r5, #0]
 800077e:	b103      	cbz	r3, 8000782 <_close_r+0x1a>
 8000780:	6023      	str	r3, [r4, #0]
 8000782:	bd38      	pop	{r3, r4, r5, pc}
 8000784:	200001d8 	.word	0x200001d8

08000788 <_lseek_r>:
 8000788:	b538      	push	{r3, r4, r5, lr}
 800078a:	4d07      	ldr	r5, [pc, #28]	; (80007a8 <_lseek_r+0x20>)
 800078c:	4604      	mov	r4, r0
 800078e:	4608      	mov	r0, r1
 8000790:	4611      	mov	r1, r2
 8000792:	2200      	movs	r2, #0
 8000794:	602a      	str	r2, [r5, #0]
 8000796:	461a      	mov	r2, r3
 8000798:	f7ff fe58 	bl	800044c <_lseek>
 800079c:	1c43      	adds	r3, r0, #1
 800079e:	d102      	bne.n	80007a6 <_lseek_r+0x1e>
 80007a0:	682b      	ldr	r3, [r5, #0]
 80007a2:	b103      	cbz	r3, 80007a6 <_lseek_r+0x1e>
 80007a4:	6023      	str	r3, [r4, #0]
 80007a6:	bd38      	pop	{r3, r4, r5, pc}
 80007a8:	200001d8 	.word	0x200001d8

080007ac <_read_r>:
 80007ac:	b538      	push	{r3, r4, r5, lr}
 80007ae:	4d07      	ldr	r5, [pc, #28]	; (80007cc <_read_r+0x20>)
 80007b0:	4604      	mov	r4, r0
 80007b2:	4608      	mov	r0, r1
 80007b4:	4611      	mov	r1, r2
 80007b6:	2200      	movs	r2, #0
 80007b8:	602a      	str	r2, [r5, #0]
 80007ba:	461a      	mov	r2, r3
 80007bc:	f7ff fde6 	bl	800038c <_read>
 80007c0:	1c43      	adds	r3, r0, #1
 80007c2:	d102      	bne.n	80007ca <_read_r+0x1e>
 80007c4:	682b      	ldr	r3, [r5, #0]
 80007c6:	b103      	cbz	r3, 80007ca <_read_r+0x1e>
 80007c8:	6023      	str	r3, [r4, #0]
 80007ca:	bd38      	pop	{r3, r4, r5, pc}
 80007cc:	200001d8 	.word	0x200001d8

080007d0 <_write_r>:
 80007d0:	b538      	push	{r3, r4, r5, lr}
 80007d2:	4d07      	ldr	r5, [pc, #28]	; (80007f0 <_write_r+0x20>)
 80007d4:	4604      	mov	r4, r0
 80007d6:	4608      	mov	r0, r1
 80007d8:	4611      	mov	r1, r2
 80007da:	2200      	movs	r2, #0
 80007dc:	602a      	str	r2, [r5, #0]
 80007de:	461a      	mov	r2, r3
 80007e0:	f7ff fdf1 	bl	80003c6 <_write>
 80007e4:	1c43      	adds	r3, r0, #1
 80007e6:	d102      	bne.n	80007ee <_write_r+0x1e>
 80007e8:	682b      	ldr	r3, [r5, #0]
 80007ea:	b103      	cbz	r3, 80007ee <_write_r+0x1e>
 80007ec:	6023      	str	r3, [r4, #0]
 80007ee:	bd38      	pop	{r3, r4, r5, pc}
 80007f0:	200001d8 	.word	0x200001d8

080007f4 <__errno>:
 80007f4:	4b01      	ldr	r3, [pc, #4]	; (80007fc <__errno+0x8>)
 80007f6:	6818      	ldr	r0, [r3, #0]
 80007f8:	4770      	bx	lr
 80007fa:	bf00      	nop
 80007fc:	20000070 	.word	0x20000070

08000800 <__libc_init_array>:
 8000800:	b570      	push	{r4, r5, r6, lr}
 8000802:	4d0d      	ldr	r5, [pc, #52]	; (8000838 <__libc_init_array+0x38>)
 8000804:	4c0d      	ldr	r4, [pc, #52]	; (800083c <__libc_init_array+0x3c>)
 8000806:	1b64      	subs	r4, r4, r5
 8000808:	10a4      	asrs	r4, r4, #2
 800080a:	2600      	movs	r6, #0
 800080c:	42a6      	cmp	r6, r4
 800080e:	d109      	bne.n	8000824 <__libc_init_array+0x24>
 8000810:	4d0b      	ldr	r5, [pc, #44]	; (8000840 <__libc_init_array+0x40>)
 8000812:	4c0c      	ldr	r4, [pc, #48]	; (8000844 <__libc_init_array+0x44>)
 8000814:	f000 fdc0 	bl	8001398 <_init>
 8000818:	1b64      	subs	r4, r4, r5
 800081a:	10a4      	asrs	r4, r4, #2
 800081c:	2600      	movs	r6, #0
 800081e:	42a6      	cmp	r6, r4
 8000820:	d105      	bne.n	800082e <__libc_init_array+0x2e>
 8000822:	bd70      	pop	{r4, r5, r6, pc}
 8000824:	f855 3b04 	ldr.w	r3, [r5], #4
 8000828:	4798      	blx	r3
 800082a:	3601      	adds	r6, #1
 800082c:	e7ee      	b.n	800080c <__libc_init_array+0xc>
 800082e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000832:	4798      	blx	r3
 8000834:	3601      	adds	r6, #1
 8000836:	e7f2      	b.n	800081e <__libc_init_array+0x1e>
 8000838:	080013fc 	.word	0x080013fc
 800083c:	080013fc 	.word	0x080013fc
 8000840:	080013fc 	.word	0x080013fc
 8000844:	08001400 	.word	0x08001400

08000848 <__retarget_lock_init_recursive>:
 8000848:	4770      	bx	lr

0800084a <__retarget_lock_acquire_recursive>:
 800084a:	4770      	bx	lr

0800084c <__retarget_lock_release_recursive>:
 800084c:	4770      	bx	lr
	...

08000850 <_free_r>:
 8000850:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000852:	2900      	cmp	r1, #0
 8000854:	d044      	beq.n	80008e0 <_free_r+0x90>
 8000856:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800085a:	9001      	str	r0, [sp, #4]
 800085c:	2b00      	cmp	r3, #0
 800085e:	f1a1 0404 	sub.w	r4, r1, #4
 8000862:	bfb8      	it	lt
 8000864:	18e4      	addlt	r4, r4, r3
 8000866:	f000 f8df 	bl	8000a28 <__malloc_lock>
 800086a:	4a1e      	ldr	r2, [pc, #120]	; (80008e4 <_free_r+0x94>)
 800086c:	9801      	ldr	r0, [sp, #4]
 800086e:	6813      	ldr	r3, [r2, #0]
 8000870:	b933      	cbnz	r3, 8000880 <_free_r+0x30>
 8000872:	6063      	str	r3, [r4, #4]
 8000874:	6014      	str	r4, [r2, #0]
 8000876:	b003      	add	sp, #12
 8000878:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800087c:	f000 b8da 	b.w	8000a34 <__malloc_unlock>
 8000880:	42a3      	cmp	r3, r4
 8000882:	d908      	bls.n	8000896 <_free_r+0x46>
 8000884:	6825      	ldr	r5, [r4, #0]
 8000886:	1961      	adds	r1, r4, r5
 8000888:	428b      	cmp	r3, r1
 800088a:	bf01      	itttt	eq
 800088c:	6819      	ldreq	r1, [r3, #0]
 800088e:	685b      	ldreq	r3, [r3, #4]
 8000890:	1949      	addeq	r1, r1, r5
 8000892:	6021      	streq	r1, [r4, #0]
 8000894:	e7ed      	b.n	8000872 <_free_r+0x22>
 8000896:	461a      	mov	r2, r3
 8000898:	685b      	ldr	r3, [r3, #4]
 800089a:	b10b      	cbz	r3, 80008a0 <_free_r+0x50>
 800089c:	42a3      	cmp	r3, r4
 800089e:	d9fa      	bls.n	8000896 <_free_r+0x46>
 80008a0:	6811      	ldr	r1, [r2, #0]
 80008a2:	1855      	adds	r5, r2, r1
 80008a4:	42a5      	cmp	r5, r4
 80008a6:	d10b      	bne.n	80008c0 <_free_r+0x70>
 80008a8:	6824      	ldr	r4, [r4, #0]
 80008aa:	4421      	add	r1, r4
 80008ac:	1854      	adds	r4, r2, r1
 80008ae:	42a3      	cmp	r3, r4
 80008b0:	6011      	str	r1, [r2, #0]
 80008b2:	d1e0      	bne.n	8000876 <_free_r+0x26>
 80008b4:	681c      	ldr	r4, [r3, #0]
 80008b6:	685b      	ldr	r3, [r3, #4]
 80008b8:	6053      	str	r3, [r2, #4]
 80008ba:	440c      	add	r4, r1
 80008bc:	6014      	str	r4, [r2, #0]
 80008be:	e7da      	b.n	8000876 <_free_r+0x26>
 80008c0:	d902      	bls.n	80008c8 <_free_r+0x78>
 80008c2:	230c      	movs	r3, #12
 80008c4:	6003      	str	r3, [r0, #0]
 80008c6:	e7d6      	b.n	8000876 <_free_r+0x26>
 80008c8:	6825      	ldr	r5, [r4, #0]
 80008ca:	1961      	adds	r1, r4, r5
 80008cc:	428b      	cmp	r3, r1
 80008ce:	bf04      	itt	eq
 80008d0:	6819      	ldreq	r1, [r3, #0]
 80008d2:	685b      	ldreq	r3, [r3, #4]
 80008d4:	6063      	str	r3, [r4, #4]
 80008d6:	bf04      	itt	eq
 80008d8:	1949      	addeq	r1, r1, r5
 80008da:	6021      	streq	r1, [r4, #0]
 80008dc:	6054      	str	r4, [r2, #4]
 80008de:	e7ca      	b.n	8000876 <_free_r+0x26>
 80008e0:	b003      	add	sp, #12
 80008e2:	bd30      	pop	{r4, r5, pc}
 80008e4:	200001e0 	.word	0x200001e0

080008e8 <sbrk_aligned>:
 80008e8:	b570      	push	{r4, r5, r6, lr}
 80008ea:	4e0e      	ldr	r6, [pc, #56]	; (8000924 <sbrk_aligned+0x3c>)
 80008ec:	460c      	mov	r4, r1
 80008ee:	6831      	ldr	r1, [r6, #0]
 80008f0:	4605      	mov	r5, r0
 80008f2:	b911      	cbnz	r1, 80008fa <sbrk_aligned+0x12>
 80008f4:	f000 fcbc 	bl	8001270 <_sbrk_r>
 80008f8:	6030      	str	r0, [r6, #0]
 80008fa:	4621      	mov	r1, r4
 80008fc:	4628      	mov	r0, r5
 80008fe:	f000 fcb7 	bl	8001270 <_sbrk_r>
 8000902:	1c43      	adds	r3, r0, #1
 8000904:	d00a      	beq.n	800091c <sbrk_aligned+0x34>
 8000906:	1cc4      	adds	r4, r0, #3
 8000908:	f024 0403 	bic.w	r4, r4, #3
 800090c:	42a0      	cmp	r0, r4
 800090e:	d007      	beq.n	8000920 <sbrk_aligned+0x38>
 8000910:	1a21      	subs	r1, r4, r0
 8000912:	4628      	mov	r0, r5
 8000914:	f000 fcac 	bl	8001270 <_sbrk_r>
 8000918:	3001      	adds	r0, #1
 800091a:	d101      	bne.n	8000920 <sbrk_aligned+0x38>
 800091c:	f04f 34ff 	mov.w	r4, #4294967295
 8000920:	4620      	mov	r0, r4
 8000922:	bd70      	pop	{r4, r5, r6, pc}
 8000924:	200001e4 	.word	0x200001e4

08000928 <_malloc_r>:
 8000928:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800092c:	1ccd      	adds	r5, r1, #3
 800092e:	f025 0503 	bic.w	r5, r5, #3
 8000932:	3508      	adds	r5, #8
 8000934:	2d0c      	cmp	r5, #12
 8000936:	bf38      	it	cc
 8000938:	250c      	movcc	r5, #12
 800093a:	2d00      	cmp	r5, #0
 800093c:	4607      	mov	r7, r0
 800093e:	db01      	blt.n	8000944 <_malloc_r+0x1c>
 8000940:	42a9      	cmp	r1, r5
 8000942:	d905      	bls.n	8000950 <_malloc_r+0x28>
 8000944:	230c      	movs	r3, #12
 8000946:	603b      	str	r3, [r7, #0]
 8000948:	2600      	movs	r6, #0
 800094a:	4630      	mov	r0, r6
 800094c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000950:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000a24 <_malloc_r+0xfc>
 8000954:	f000 f868 	bl	8000a28 <__malloc_lock>
 8000958:	f8d8 3000 	ldr.w	r3, [r8]
 800095c:	461c      	mov	r4, r3
 800095e:	bb5c      	cbnz	r4, 80009b8 <_malloc_r+0x90>
 8000960:	4629      	mov	r1, r5
 8000962:	4638      	mov	r0, r7
 8000964:	f7ff ffc0 	bl	80008e8 <sbrk_aligned>
 8000968:	1c43      	adds	r3, r0, #1
 800096a:	4604      	mov	r4, r0
 800096c:	d155      	bne.n	8000a1a <_malloc_r+0xf2>
 800096e:	f8d8 4000 	ldr.w	r4, [r8]
 8000972:	4626      	mov	r6, r4
 8000974:	2e00      	cmp	r6, #0
 8000976:	d145      	bne.n	8000a04 <_malloc_r+0xdc>
 8000978:	2c00      	cmp	r4, #0
 800097a:	d048      	beq.n	8000a0e <_malloc_r+0xe6>
 800097c:	6823      	ldr	r3, [r4, #0]
 800097e:	4631      	mov	r1, r6
 8000980:	4638      	mov	r0, r7
 8000982:	eb04 0903 	add.w	r9, r4, r3
 8000986:	f000 fc73 	bl	8001270 <_sbrk_r>
 800098a:	4581      	cmp	r9, r0
 800098c:	d13f      	bne.n	8000a0e <_malloc_r+0xe6>
 800098e:	6821      	ldr	r1, [r4, #0]
 8000990:	1a6d      	subs	r5, r5, r1
 8000992:	4629      	mov	r1, r5
 8000994:	4638      	mov	r0, r7
 8000996:	f7ff ffa7 	bl	80008e8 <sbrk_aligned>
 800099a:	3001      	adds	r0, #1
 800099c:	d037      	beq.n	8000a0e <_malloc_r+0xe6>
 800099e:	6823      	ldr	r3, [r4, #0]
 80009a0:	442b      	add	r3, r5
 80009a2:	6023      	str	r3, [r4, #0]
 80009a4:	f8d8 3000 	ldr.w	r3, [r8]
 80009a8:	2b00      	cmp	r3, #0
 80009aa:	d038      	beq.n	8000a1e <_malloc_r+0xf6>
 80009ac:	685a      	ldr	r2, [r3, #4]
 80009ae:	42a2      	cmp	r2, r4
 80009b0:	d12b      	bne.n	8000a0a <_malloc_r+0xe2>
 80009b2:	2200      	movs	r2, #0
 80009b4:	605a      	str	r2, [r3, #4]
 80009b6:	e00f      	b.n	80009d8 <_malloc_r+0xb0>
 80009b8:	6822      	ldr	r2, [r4, #0]
 80009ba:	1b52      	subs	r2, r2, r5
 80009bc:	d41f      	bmi.n	80009fe <_malloc_r+0xd6>
 80009be:	2a0b      	cmp	r2, #11
 80009c0:	d917      	bls.n	80009f2 <_malloc_r+0xca>
 80009c2:	1961      	adds	r1, r4, r5
 80009c4:	42a3      	cmp	r3, r4
 80009c6:	6025      	str	r5, [r4, #0]
 80009c8:	bf18      	it	ne
 80009ca:	6059      	strne	r1, [r3, #4]
 80009cc:	6863      	ldr	r3, [r4, #4]
 80009ce:	bf08      	it	eq
 80009d0:	f8c8 1000 	streq.w	r1, [r8]
 80009d4:	5162      	str	r2, [r4, r5]
 80009d6:	604b      	str	r3, [r1, #4]
 80009d8:	4638      	mov	r0, r7
 80009da:	f104 060b 	add.w	r6, r4, #11
 80009de:	f000 f829 	bl	8000a34 <__malloc_unlock>
 80009e2:	f026 0607 	bic.w	r6, r6, #7
 80009e6:	1d23      	adds	r3, r4, #4
 80009e8:	1af2      	subs	r2, r6, r3
 80009ea:	d0ae      	beq.n	800094a <_malloc_r+0x22>
 80009ec:	1b9b      	subs	r3, r3, r6
 80009ee:	50a3      	str	r3, [r4, r2]
 80009f0:	e7ab      	b.n	800094a <_malloc_r+0x22>
 80009f2:	42a3      	cmp	r3, r4
 80009f4:	6862      	ldr	r2, [r4, #4]
 80009f6:	d1dd      	bne.n	80009b4 <_malloc_r+0x8c>
 80009f8:	f8c8 2000 	str.w	r2, [r8]
 80009fc:	e7ec      	b.n	80009d8 <_malloc_r+0xb0>
 80009fe:	4623      	mov	r3, r4
 8000a00:	6864      	ldr	r4, [r4, #4]
 8000a02:	e7ac      	b.n	800095e <_malloc_r+0x36>
 8000a04:	4634      	mov	r4, r6
 8000a06:	6876      	ldr	r6, [r6, #4]
 8000a08:	e7b4      	b.n	8000974 <_malloc_r+0x4c>
 8000a0a:	4613      	mov	r3, r2
 8000a0c:	e7cc      	b.n	80009a8 <_malloc_r+0x80>
 8000a0e:	230c      	movs	r3, #12
 8000a10:	603b      	str	r3, [r7, #0]
 8000a12:	4638      	mov	r0, r7
 8000a14:	f000 f80e 	bl	8000a34 <__malloc_unlock>
 8000a18:	e797      	b.n	800094a <_malloc_r+0x22>
 8000a1a:	6025      	str	r5, [r4, #0]
 8000a1c:	e7dc      	b.n	80009d8 <_malloc_r+0xb0>
 8000a1e:	605b      	str	r3, [r3, #4]
 8000a20:	deff      	udf	#255	; 0xff
 8000a22:	bf00      	nop
 8000a24:	200001e0 	.word	0x200001e0

08000a28 <__malloc_lock>:
 8000a28:	4801      	ldr	r0, [pc, #4]	; (8000a30 <__malloc_lock+0x8>)
 8000a2a:	f7ff bf0e 	b.w	800084a <__retarget_lock_acquire_recursive>
 8000a2e:	bf00      	nop
 8000a30:	200001dc 	.word	0x200001dc

08000a34 <__malloc_unlock>:
 8000a34:	4801      	ldr	r0, [pc, #4]	; (8000a3c <__malloc_unlock+0x8>)
 8000a36:	f7ff bf09 	b.w	800084c <__retarget_lock_release_recursive>
 8000a3a:	bf00      	nop
 8000a3c:	200001dc 	.word	0x200001dc

08000a40 <__sfputc_r>:
 8000a40:	6893      	ldr	r3, [r2, #8]
 8000a42:	3b01      	subs	r3, #1
 8000a44:	2b00      	cmp	r3, #0
 8000a46:	b410      	push	{r4}
 8000a48:	6093      	str	r3, [r2, #8]
 8000a4a:	da08      	bge.n	8000a5e <__sfputc_r+0x1e>
 8000a4c:	6994      	ldr	r4, [r2, #24]
 8000a4e:	42a3      	cmp	r3, r4
 8000a50:	db01      	blt.n	8000a56 <__sfputc_r+0x16>
 8000a52:	290a      	cmp	r1, #10
 8000a54:	d103      	bne.n	8000a5e <__sfputc_r+0x1e>
 8000a56:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a5a:	f000 bb73 	b.w	8001144 <__swbuf_r>
 8000a5e:	6813      	ldr	r3, [r2, #0]
 8000a60:	1c58      	adds	r0, r3, #1
 8000a62:	6010      	str	r0, [r2, #0]
 8000a64:	7019      	strb	r1, [r3, #0]
 8000a66:	4608      	mov	r0, r1
 8000a68:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a6c:	4770      	bx	lr

08000a6e <__sfputs_r>:
 8000a6e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a70:	4606      	mov	r6, r0
 8000a72:	460f      	mov	r7, r1
 8000a74:	4614      	mov	r4, r2
 8000a76:	18d5      	adds	r5, r2, r3
 8000a78:	42ac      	cmp	r4, r5
 8000a7a:	d101      	bne.n	8000a80 <__sfputs_r+0x12>
 8000a7c:	2000      	movs	r0, #0
 8000a7e:	e007      	b.n	8000a90 <__sfputs_r+0x22>
 8000a80:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a84:	463a      	mov	r2, r7
 8000a86:	4630      	mov	r0, r6
 8000a88:	f7ff ffda 	bl	8000a40 <__sfputc_r>
 8000a8c:	1c43      	adds	r3, r0, #1
 8000a8e:	d1f3      	bne.n	8000a78 <__sfputs_r+0xa>
 8000a90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a94 <_vfiprintf_r>:
 8000a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a98:	460d      	mov	r5, r1
 8000a9a:	b09d      	sub	sp, #116	; 0x74
 8000a9c:	4614      	mov	r4, r2
 8000a9e:	4698      	mov	r8, r3
 8000aa0:	4606      	mov	r6, r0
 8000aa2:	b118      	cbz	r0, 8000aac <_vfiprintf_r+0x18>
 8000aa4:	6a03      	ldr	r3, [r0, #32]
 8000aa6:	b90b      	cbnz	r3, 8000aac <_vfiprintf_r+0x18>
 8000aa8:	f7ff fdca 	bl	8000640 <__sinit>
 8000aac:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000aae:	07d9      	lsls	r1, r3, #31
 8000ab0:	d405      	bmi.n	8000abe <_vfiprintf_r+0x2a>
 8000ab2:	89ab      	ldrh	r3, [r5, #12]
 8000ab4:	059a      	lsls	r2, r3, #22
 8000ab6:	d402      	bmi.n	8000abe <_vfiprintf_r+0x2a>
 8000ab8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000aba:	f7ff fec6 	bl	800084a <__retarget_lock_acquire_recursive>
 8000abe:	89ab      	ldrh	r3, [r5, #12]
 8000ac0:	071b      	lsls	r3, r3, #28
 8000ac2:	d501      	bpl.n	8000ac8 <_vfiprintf_r+0x34>
 8000ac4:	692b      	ldr	r3, [r5, #16]
 8000ac6:	b99b      	cbnz	r3, 8000af0 <_vfiprintf_r+0x5c>
 8000ac8:	4629      	mov	r1, r5
 8000aca:	4630      	mov	r0, r6
 8000acc:	f000 fb78 	bl	80011c0 <__swsetup_r>
 8000ad0:	b170      	cbz	r0, 8000af0 <_vfiprintf_r+0x5c>
 8000ad2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ad4:	07dc      	lsls	r4, r3, #31
 8000ad6:	d504      	bpl.n	8000ae2 <_vfiprintf_r+0x4e>
 8000ad8:	f04f 30ff 	mov.w	r0, #4294967295
 8000adc:	b01d      	add	sp, #116	; 0x74
 8000ade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ae2:	89ab      	ldrh	r3, [r5, #12]
 8000ae4:	0598      	lsls	r0, r3, #22
 8000ae6:	d4f7      	bmi.n	8000ad8 <_vfiprintf_r+0x44>
 8000ae8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000aea:	f7ff feaf 	bl	800084c <__retarget_lock_release_recursive>
 8000aee:	e7f3      	b.n	8000ad8 <_vfiprintf_r+0x44>
 8000af0:	2300      	movs	r3, #0
 8000af2:	9309      	str	r3, [sp, #36]	; 0x24
 8000af4:	2320      	movs	r3, #32
 8000af6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000afa:	f8cd 800c 	str.w	r8, [sp, #12]
 8000afe:	2330      	movs	r3, #48	; 0x30
 8000b00:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000cb4 <_vfiprintf_r+0x220>
 8000b04:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000b08:	f04f 0901 	mov.w	r9, #1
 8000b0c:	4623      	mov	r3, r4
 8000b0e:	469a      	mov	sl, r3
 8000b10:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b14:	b10a      	cbz	r2, 8000b1a <_vfiprintf_r+0x86>
 8000b16:	2a25      	cmp	r2, #37	; 0x25
 8000b18:	d1f9      	bne.n	8000b0e <_vfiprintf_r+0x7a>
 8000b1a:	ebba 0b04 	subs.w	fp, sl, r4
 8000b1e:	d00b      	beq.n	8000b38 <_vfiprintf_r+0xa4>
 8000b20:	465b      	mov	r3, fp
 8000b22:	4622      	mov	r2, r4
 8000b24:	4629      	mov	r1, r5
 8000b26:	4630      	mov	r0, r6
 8000b28:	f7ff ffa1 	bl	8000a6e <__sfputs_r>
 8000b2c:	3001      	adds	r0, #1
 8000b2e:	f000 80a9 	beq.w	8000c84 <_vfiprintf_r+0x1f0>
 8000b32:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000b34:	445a      	add	r2, fp
 8000b36:	9209      	str	r2, [sp, #36]	; 0x24
 8000b38:	f89a 3000 	ldrb.w	r3, [sl]
 8000b3c:	2b00      	cmp	r3, #0
 8000b3e:	f000 80a1 	beq.w	8000c84 <_vfiprintf_r+0x1f0>
 8000b42:	2300      	movs	r3, #0
 8000b44:	f04f 32ff 	mov.w	r2, #4294967295
 8000b48:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b4c:	f10a 0a01 	add.w	sl, sl, #1
 8000b50:	9304      	str	r3, [sp, #16]
 8000b52:	9307      	str	r3, [sp, #28]
 8000b54:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000b58:	931a      	str	r3, [sp, #104]	; 0x68
 8000b5a:	4654      	mov	r4, sl
 8000b5c:	2205      	movs	r2, #5
 8000b5e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b62:	4854      	ldr	r0, [pc, #336]	; (8000cb4 <_vfiprintf_r+0x220>)
 8000b64:	f7ff fb34 	bl	80001d0 <memchr>
 8000b68:	9a04      	ldr	r2, [sp, #16]
 8000b6a:	b9d8      	cbnz	r0, 8000ba4 <_vfiprintf_r+0x110>
 8000b6c:	06d1      	lsls	r1, r2, #27
 8000b6e:	bf44      	itt	mi
 8000b70:	2320      	movmi	r3, #32
 8000b72:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b76:	0713      	lsls	r3, r2, #28
 8000b78:	bf44      	itt	mi
 8000b7a:	232b      	movmi	r3, #43	; 0x2b
 8000b7c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b80:	f89a 3000 	ldrb.w	r3, [sl]
 8000b84:	2b2a      	cmp	r3, #42	; 0x2a
 8000b86:	d015      	beq.n	8000bb4 <_vfiprintf_r+0x120>
 8000b88:	9a07      	ldr	r2, [sp, #28]
 8000b8a:	4654      	mov	r4, sl
 8000b8c:	2000      	movs	r0, #0
 8000b8e:	f04f 0c0a 	mov.w	ip, #10
 8000b92:	4621      	mov	r1, r4
 8000b94:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b98:	3b30      	subs	r3, #48	; 0x30
 8000b9a:	2b09      	cmp	r3, #9
 8000b9c:	d94d      	bls.n	8000c3a <_vfiprintf_r+0x1a6>
 8000b9e:	b1b0      	cbz	r0, 8000bce <_vfiprintf_r+0x13a>
 8000ba0:	9207      	str	r2, [sp, #28]
 8000ba2:	e014      	b.n	8000bce <_vfiprintf_r+0x13a>
 8000ba4:	eba0 0308 	sub.w	r3, r0, r8
 8000ba8:	fa09 f303 	lsl.w	r3, r9, r3
 8000bac:	4313      	orrs	r3, r2
 8000bae:	9304      	str	r3, [sp, #16]
 8000bb0:	46a2      	mov	sl, r4
 8000bb2:	e7d2      	b.n	8000b5a <_vfiprintf_r+0xc6>
 8000bb4:	9b03      	ldr	r3, [sp, #12]
 8000bb6:	1d19      	adds	r1, r3, #4
 8000bb8:	681b      	ldr	r3, [r3, #0]
 8000bba:	9103      	str	r1, [sp, #12]
 8000bbc:	2b00      	cmp	r3, #0
 8000bbe:	bfbb      	ittet	lt
 8000bc0:	425b      	neglt	r3, r3
 8000bc2:	f042 0202 	orrlt.w	r2, r2, #2
 8000bc6:	9307      	strge	r3, [sp, #28]
 8000bc8:	9307      	strlt	r3, [sp, #28]
 8000bca:	bfb8      	it	lt
 8000bcc:	9204      	strlt	r2, [sp, #16]
 8000bce:	7823      	ldrb	r3, [r4, #0]
 8000bd0:	2b2e      	cmp	r3, #46	; 0x2e
 8000bd2:	d10c      	bne.n	8000bee <_vfiprintf_r+0x15a>
 8000bd4:	7863      	ldrb	r3, [r4, #1]
 8000bd6:	2b2a      	cmp	r3, #42	; 0x2a
 8000bd8:	d134      	bne.n	8000c44 <_vfiprintf_r+0x1b0>
 8000bda:	9b03      	ldr	r3, [sp, #12]
 8000bdc:	1d1a      	adds	r2, r3, #4
 8000bde:	681b      	ldr	r3, [r3, #0]
 8000be0:	9203      	str	r2, [sp, #12]
 8000be2:	2b00      	cmp	r3, #0
 8000be4:	bfb8      	it	lt
 8000be6:	f04f 33ff 	movlt.w	r3, #4294967295
 8000bea:	3402      	adds	r4, #2
 8000bec:	9305      	str	r3, [sp, #20]
 8000bee:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000cc4 <_vfiprintf_r+0x230>
 8000bf2:	7821      	ldrb	r1, [r4, #0]
 8000bf4:	2203      	movs	r2, #3
 8000bf6:	4650      	mov	r0, sl
 8000bf8:	f7ff faea 	bl	80001d0 <memchr>
 8000bfc:	b138      	cbz	r0, 8000c0e <_vfiprintf_r+0x17a>
 8000bfe:	9b04      	ldr	r3, [sp, #16]
 8000c00:	eba0 000a 	sub.w	r0, r0, sl
 8000c04:	2240      	movs	r2, #64	; 0x40
 8000c06:	4082      	lsls	r2, r0
 8000c08:	4313      	orrs	r3, r2
 8000c0a:	3401      	adds	r4, #1
 8000c0c:	9304      	str	r3, [sp, #16]
 8000c0e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c12:	4829      	ldr	r0, [pc, #164]	; (8000cb8 <_vfiprintf_r+0x224>)
 8000c14:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000c18:	2206      	movs	r2, #6
 8000c1a:	f7ff fad9 	bl	80001d0 <memchr>
 8000c1e:	2800      	cmp	r0, #0
 8000c20:	d03f      	beq.n	8000ca2 <_vfiprintf_r+0x20e>
 8000c22:	4b26      	ldr	r3, [pc, #152]	; (8000cbc <_vfiprintf_r+0x228>)
 8000c24:	bb1b      	cbnz	r3, 8000c6e <_vfiprintf_r+0x1da>
 8000c26:	9b03      	ldr	r3, [sp, #12]
 8000c28:	3307      	adds	r3, #7
 8000c2a:	f023 0307 	bic.w	r3, r3, #7
 8000c2e:	3308      	adds	r3, #8
 8000c30:	9303      	str	r3, [sp, #12]
 8000c32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000c34:	443b      	add	r3, r7
 8000c36:	9309      	str	r3, [sp, #36]	; 0x24
 8000c38:	e768      	b.n	8000b0c <_vfiprintf_r+0x78>
 8000c3a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c3e:	460c      	mov	r4, r1
 8000c40:	2001      	movs	r0, #1
 8000c42:	e7a6      	b.n	8000b92 <_vfiprintf_r+0xfe>
 8000c44:	2300      	movs	r3, #0
 8000c46:	3401      	adds	r4, #1
 8000c48:	9305      	str	r3, [sp, #20]
 8000c4a:	4619      	mov	r1, r3
 8000c4c:	f04f 0c0a 	mov.w	ip, #10
 8000c50:	4620      	mov	r0, r4
 8000c52:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c56:	3a30      	subs	r2, #48	; 0x30
 8000c58:	2a09      	cmp	r2, #9
 8000c5a:	d903      	bls.n	8000c64 <_vfiprintf_r+0x1d0>
 8000c5c:	2b00      	cmp	r3, #0
 8000c5e:	d0c6      	beq.n	8000bee <_vfiprintf_r+0x15a>
 8000c60:	9105      	str	r1, [sp, #20]
 8000c62:	e7c4      	b.n	8000bee <_vfiprintf_r+0x15a>
 8000c64:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c68:	4604      	mov	r4, r0
 8000c6a:	2301      	movs	r3, #1
 8000c6c:	e7f0      	b.n	8000c50 <_vfiprintf_r+0x1bc>
 8000c6e:	ab03      	add	r3, sp, #12
 8000c70:	9300      	str	r3, [sp, #0]
 8000c72:	462a      	mov	r2, r5
 8000c74:	4b12      	ldr	r3, [pc, #72]	; (8000cc0 <_vfiprintf_r+0x22c>)
 8000c76:	a904      	add	r1, sp, #16
 8000c78:	4630      	mov	r0, r6
 8000c7a:	f3af 8000 	nop.w
 8000c7e:	4607      	mov	r7, r0
 8000c80:	1c78      	adds	r0, r7, #1
 8000c82:	d1d6      	bne.n	8000c32 <_vfiprintf_r+0x19e>
 8000c84:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c86:	07d9      	lsls	r1, r3, #31
 8000c88:	d405      	bmi.n	8000c96 <_vfiprintf_r+0x202>
 8000c8a:	89ab      	ldrh	r3, [r5, #12]
 8000c8c:	059a      	lsls	r2, r3, #22
 8000c8e:	d402      	bmi.n	8000c96 <_vfiprintf_r+0x202>
 8000c90:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c92:	f7ff fddb 	bl	800084c <__retarget_lock_release_recursive>
 8000c96:	89ab      	ldrh	r3, [r5, #12]
 8000c98:	065b      	lsls	r3, r3, #25
 8000c9a:	f53f af1d 	bmi.w	8000ad8 <_vfiprintf_r+0x44>
 8000c9e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000ca0:	e71c      	b.n	8000adc <_vfiprintf_r+0x48>
 8000ca2:	ab03      	add	r3, sp, #12
 8000ca4:	9300      	str	r3, [sp, #0]
 8000ca6:	462a      	mov	r2, r5
 8000ca8:	4b05      	ldr	r3, [pc, #20]	; (8000cc0 <_vfiprintf_r+0x22c>)
 8000caa:	a904      	add	r1, sp, #16
 8000cac:	4630      	mov	r0, r6
 8000cae:	f000 f879 	bl	8000da4 <_printf_i>
 8000cb2:	e7e4      	b.n	8000c7e <_vfiprintf_r+0x1ea>
 8000cb4:	080013c9 	.word	0x080013c9
 8000cb8:	080013d3 	.word	0x080013d3
 8000cbc:	00000000 	.word	0x00000000
 8000cc0:	08000a6f 	.word	0x08000a6f
 8000cc4:	080013cf 	.word	0x080013cf

08000cc8 <_printf_common>:
 8000cc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ccc:	4616      	mov	r6, r2
 8000cce:	4699      	mov	r9, r3
 8000cd0:	688a      	ldr	r2, [r1, #8]
 8000cd2:	690b      	ldr	r3, [r1, #16]
 8000cd4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000cd8:	4293      	cmp	r3, r2
 8000cda:	bfb8      	it	lt
 8000cdc:	4613      	movlt	r3, r2
 8000cde:	6033      	str	r3, [r6, #0]
 8000ce0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000ce4:	4607      	mov	r7, r0
 8000ce6:	460c      	mov	r4, r1
 8000ce8:	b10a      	cbz	r2, 8000cee <_printf_common+0x26>
 8000cea:	3301      	adds	r3, #1
 8000cec:	6033      	str	r3, [r6, #0]
 8000cee:	6823      	ldr	r3, [r4, #0]
 8000cf0:	0699      	lsls	r1, r3, #26
 8000cf2:	bf42      	ittt	mi
 8000cf4:	6833      	ldrmi	r3, [r6, #0]
 8000cf6:	3302      	addmi	r3, #2
 8000cf8:	6033      	strmi	r3, [r6, #0]
 8000cfa:	6825      	ldr	r5, [r4, #0]
 8000cfc:	f015 0506 	ands.w	r5, r5, #6
 8000d00:	d106      	bne.n	8000d10 <_printf_common+0x48>
 8000d02:	f104 0a19 	add.w	sl, r4, #25
 8000d06:	68e3      	ldr	r3, [r4, #12]
 8000d08:	6832      	ldr	r2, [r6, #0]
 8000d0a:	1a9b      	subs	r3, r3, r2
 8000d0c:	42ab      	cmp	r3, r5
 8000d0e:	dc26      	bgt.n	8000d5e <_printf_common+0x96>
 8000d10:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000d14:	1e13      	subs	r3, r2, #0
 8000d16:	6822      	ldr	r2, [r4, #0]
 8000d18:	bf18      	it	ne
 8000d1a:	2301      	movne	r3, #1
 8000d1c:	0692      	lsls	r2, r2, #26
 8000d1e:	d42b      	bmi.n	8000d78 <_printf_common+0xb0>
 8000d20:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000d24:	4649      	mov	r1, r9
 8000d26:	4638      	mov	r0, r7
 8000d28:	47c0      	blx	r8
 8000d2a:	3001      	adds	r0, #1
 8000d2c:	d01e      	beq.n	8000d6c <_printf_common+0xa4>
 8000d2e:	6823      	ldr	r3, [r4, #0]
 8000d30:	6922      	ldr	r2, [r4, #16]
 8000d32:	f003 0306 	and.w	r3, r3, #6
 8000d36:	2b04      	cmp	r3, #4
 8000d38:	bf02      	ittt	eq
 8000d3a:	68e5      	ldreq	r5, [r4, #12]
 8000d3c:	6833      	ldreq	r3, [r6, #0]
 8000d3e:	1aed      	subeq	r5, r5, r3
 8000d40:	68a3      	ldr	r3, [r4, #8]
 8000d42:	bf0c      	ite	eq
 8000d44:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d48:	2500      	movne	r5, #0
 8000d4a:	4293      	cmp	r3, r2
 8000d4c:	bfc4      	itt	gt
 8000d4e:	1a9b      	subgt	r3, r3, r2
 8000d50:	18ed      	addgt	r5, r5, r3
 8000d52:	2600      	movs	r6, #0
 8000d54:	341a      	adds	r4, #26
 8000d56:	42b5      	cmp	r5, r6
 8000d58:	d11a      	bne.n	8000d90 <_printf_common+0xc8>
 8000d5a:	2000      	movs	r0, #0
 8000d5c:	e008      	b.n	8000d70 <_printf_common+0xa8>
 8000d5e:	2301      	movs	r3, #1
 8000d60:	4652      	mov	r2, sl
 8000d62:	4649      	mov	r1, r9
 8000d64:	4638      	mov	r0, r7
 8000d66:	47c0      	blx	r8
 8000d68:	3001      	adds	r0, #1
 8000d6a:	d103      	bne.n	8000d74 <_printf_common+0xac>
 8000d6c:	f04f 30ff 	mov.w	r0, #4294967295
 8000d70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d74:	3501      	adds	r5, #1
 8000d76:	e7c6      	b.n	8000d06 <_printf_common+0x3e>
 8000d78:	18e1      	adds	r1, r4, r3
 8000d7a:	1c5a      	adds	r2, r3, #1
 8000d7c:	2030      	movs	r0, #48	; 0x30
 8000d7e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000d82:	4422      	add	r2, r4
 8000d84:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000d88:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000d8c:	3302      	adds	r3, #2
 8000d8e:	e7c7      	b.n	8000d20 <_printf_common+0x58>
 8000d90:	2301      	movs	r3, #1
 8000d92:	4622      	mov	r2, r4
 8000d94:	4649      	mov	r1, r9
 8000d96:	4638      	mov	r0, r7
 8000d98:	47c0      	blx	r8
 8000d9a:	3001      	adds	r0, #1
 8000d9c:	d0e6      	beq.n	8000d6c <_printf_common+0xa4>
 8000d9e:	3601      	adds	r6, #1
 8000da0:	e7d9      	b.n	8000d56 <_printf_common+0x8e>
	...

08000da4 <_printf_i>:
 8000da4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000da8:	7e0f      	ldrb	r7, [r1, #24]
 8000daa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000dac:	2f78      	cmp	r7, #120	; 0x78
 8000dae:	4691      	mov	r9, r2
 8000db0:	4680      	mov	r8, r0
 8000db2:	460c      	mov	r4, r1
 8000db4:	469a      	mov	sl, r3
 8000db6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000dba:	d807      	bhi.n	8000dcc <_printf_i+0x28>
 8000dbc:	2f62      	cmp	r7, #98	; 0x62
 8000dbe:	d80a      	bhi.n	8000dd6 <_printf_i+0x32>
 8000dc0:	2f00      	cmp	r7, #0
 8000dc2:	f000 80d4 	beq.w	8000f6e <_printf_i+0x1ca>
 8000dc6:	2f58      	cmp	r7, #88	; 0x58
 8000dc8:	f000 80c0 	beq.w	8000f4c <_printf_i+0x1a8>
 8000dcc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000dd0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000dd4:	e03a      	b.n	8000e4c <_printf_i+0xa8>
 8000dd6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000dda:	2b15      	cmp	r3, #21
 8000ddc:	d8f6      	bhi.n	8000dcc <_printf_i+0x28>
 8000dde:	a101      	add	r1, pc, #4	; (adr r1, 8000de4 <_printf_i+0x40>)
 8000de0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000de4:	08000e3d 	.word	0x08000e3d
 8000de8:	08000e51 	.word	0x08000e51
 8000dec:	08000dcd 	.word	0x08000dcd
 8000df0:	08000dcd 	.word	0x08000dcd
 8000df4:	08000dcd 	.word	0x08000dcd
 8000df8:	08000dcd 	.word	0x08000dcd
 8000dfc:	08000e51 	.word	0x08000e51
 8000e00:	08000dcd 	.word	0x08000dcd
 8000e04:	08000dcd 	.word	0x08000dcd
 8000e08:	08000dcd 	.word	0x08000dcd
 8000e0c:	08000dcd 	.word	0x08000dcd
 8000e10:	08000f55 	.word	0x08000f55
 8000e14:	08000e7d 	.word	0x08000e7d
 8000e18:	08000f0f 	.word	0x08000f0f
 8000e1c:	08000dcd 	.word	0x08000dcd
 8000e20:	08000dcd 	.word	0x08000dcd
 8000e24:	08000f77 	.word	0x08000f77
 8000e28:	08000dcd 	.word	0x08000dcd
 8000e2c:	08000e7d 	.word	0x08000e7d
 8000e30:	08000dcd 	.word	0x08000dcd
 8000e34:	08000dcd 	.word	0x08000dcd
 8000e38:	08000f17 	.word	0x08000f17
 8000e3c:	682b      	ldr	r3, [r5, #0]
 8000e3e:	1d1a      	adds	r2, r3, #4
 8000e40:	681b      	ldr	r3, [r3, #0]
 8000e42:	602a      	str	r2, [r5, #0]
 8000e44:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e48:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e4c:	2301      	movs	r3, #1
 8000e4e:	e09f      	b.n	8000f90 <_printf_i+0x1ec>
 8000e50:	6820      	ldr	r0, [r4, #0]
 8000e52:	682b      	ldr	r3, [r5, #0]
 8000e54:	0607      	lsls	r7, r0, #24
 8000e56:	f103 0104 	add.w	r1, r3, #4
 8000e5a:	6029      	str	r1, [r5, #0]
 8000e5c:	d501      	bpl.n	8000e62 <_printf_i+0xbe>
 8000e5e:	681e      	ldr	r6, [r3, #0]
 8000e60:	e003      	b.n	8000e6a <_printf_i+0xc6>
 8000e62:	0646      	lsls	r6, r0, #25
 8000e64:	d5fb      	bpl.n	8000e5e <_printf_i+0xba>
 8000e66:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000e6a:	2e00      	cmp	r6, #0
 8000e6c:	da03      	bge.n	8000e76 <_printf_i+0xd2>
 8000e6e:	232d      	movs	r3, #45	; 0x2d
 8000e70:	4276      	negs	r6, r6
 8000e72:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e76:	485a      	ldr	r0, [pc, #360]	; (8000fe0 <_printf_i+0x23c>)
 8000e78:	230a      	movs	r3, #10
 8000e7a:	e012      	b.n	8000ea2 <_printf_i+0xfe>
 8000e7c:	682b      	ldr	r3, [r5, #0]
 8000e7e:	6820      	ldr	r0, [r4, #0]
 8000e80:	1d19      	adds	r1, r3, #4
 8000e82:	6029      	str	r1, [r5, #0]
 8000e84:	0605      	lsls	r5, r0, #24
 8000e86:	d501      	bpl.n	8000e8c <_printf_i+0xe8>
 8000e88:	681e      	ldr	r6, [r3, #0]
 8000e8a:	e002      	b.n	8000e92 <_printf_i+0xee>
 8000e8c:	0641      	lsls	r1, r0, #25
 8000e8e:	d5fb      	bpl.n	8000e88 <_printf_i+0xe4>
 8000e90:	881e      	ldrh	r6, [r3, #0]
 8000e92:	4853      	ldr	r0, [pc, #332]	; (8000fe0 <_printf_i+0x23c>)
 8000e94:	2f6f      	cmp	r7, #111	; 0x6f
 8000e96:	bf0c      	ite	eq
 8000e98:	2308      	moveq	r3, #8
 8000e9a:	230a      	movne	r3, #10
 8000e9c:	2100      	movs	r1, #0
 8000e9e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000ea2:	6865      	ldr	r5, [r4, #4]
 8000ea4:	60a5      	str	r5, [r4, #8]
 8000ea6:	2d00      	cmp	r5, #0
 8000ea8:	bfa2      	ittt	ge
 8000eaa:	6821      	ldrge	r1, [r4, #0]
 8000eac:	f021 0104 	bicge.w	r1, r1, #4
 8000eb0:	6021      	strge	r1, [r4, #0]
 8000eb2:	b90e      	cbnz	r6, 8000eb8 <_printf_i+0x114>
 8000eb4:	2d00      	cmp	r5, #0
 8000eb6:	d04b      	beq.n	8000f50 <_printf_i+0x1ac>
 8000eb8:	4615      	mov	r5, r2
 8000eba:	fbb6 f1f3 	udiv	r1, r6, r3
 8000ebe:	fb03 6711 	mls	r7, r3, r1, r6
 8000ec2:	5dc7      	ldrb	r7, [r0, r7]
 8000ec4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000ec8:	4637      	mov	r7, r6
 8000eca:	42bb      	cmp	r3, r7
 8000ecc:	460e      	mov	r6, r1
 8000ece:	d9f4      	bls.n	8000eba <_printf_i+0x116>
 8000ed0:	2b08      	cmp	r3, #8
 8000ed2:	d10b      	bne.n	8000eec <_printf_i+0x148>
 8000ed4:	6823      	ldr	r3, [r4, #0]
 8000ed6:	07de      	lsls	r6, r3, #31
 8000ed8:	d508      	bpl.n	8000eec <_printf_i+0x148>
 8000eda:	6923      	ldr	r3, [r4, #16]
 8000edc:	6861      	ldr	r1, [r4, #4]
 8000ede:	4299      	cmp	r1, r3
 8000ee0:	bfde      	ittt	le
 8000ee2:	2330      	movle	r3, #48	; 0x30
 8000ee4:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000ee8:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000eec:	1b52      	subs	r2, r2, r5
 8000eee:	6122      	str	r2, [r4, #16]
 8000ef0:	f8cd a000 	str.w	sl, [sp]
 8000ef4:	464b      	mov	r3, r9
 8000ef6:	aa03      	add	r2, sp, #12
 8000ef8:	4621      	mov	r1, r4
 8000efa:	4640      	mov	r0, r8
 8000efc:	f7ff fee4 	bl	8000cc8 <_printf_common>
 8000f00:	3001      	adds	r0, #1
 8000f02:	d14a      	bne.n	8000f9a <_printf_i+0x1f6>
 8000f04:	f04f 30ff 	mov.w	r0, #4294967295
 8000f08:	b004      	add	sp, #16
 8000f0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f0e:	6823      	ldr	r3, [r4, #0]
 8000f10:	f043 0320 	orr.w	r3, r3, #32
 8000f14:	6023      	str	r3, [r4, #0]
 8000f16:	4833      	ldr	r0, [pc, #204]	; (8000fe4 <_printf_i+0x240>)
 8000f18:	2778      	movs	r7, #120	; 0x78
 8000f1a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000f1e:	6823      	ldr	r3, [r4, #0]
 8000f20:	6829      	ldr	r1, [r5, #0]
 8000f22:	061f      	lsls	r7, r3, #24
 8000f24:	f851 6b04 	ldr.w	r6, [r1], #4
 8000f28:	d402      	bmi.n	8000f30 <_printf_i+0x18c>
 8000f2a:	065f      	lsls	r7, r3, #25
 8000f2c:	bf48      	it	mi
 8000f2e:	b2b6      	uxthmi	r6, r6
 8000f30:	07df      	lsls	r7, r3, #31
 8000f32:	bf48      	it	mi
 8000f34:	f043 0320 	orrmi.w	r3, r3, #32
 8000f38:	6029      	str	r1, [r5, #0]
 8000f3a:	bf48      	it	mi
 8000f3c:	6023      	strmi	r3, [r4, #0]
 8000f3e:	b91e      	cbnz	r6, 8000f48 <_printf_i+0x1a4>
 8000f40:	6823      	ldr	r3, [r4, #0]
 8000f42:	f023 0320 	bic.w	r3, r3, #32
 8000f46:	6023      	str	r3, [r4, #0]
 8000f48:	2310      	movs	r3, #16
 8000f4a:	e7a7      	b.n	8000e9c <_printf_i+0xf8>
 8000f4c:	4824      	ldr	r0, [pc, #144]	; (8000fe0 <_printf_i+0x23c>)
 8000f4e:	e7e4      	b.n	8000f1a <_printf_i+0x176>
 8000f50:	4615      	mov	r5, r2
 8000f52:	e7bd      	b.n	8000ed0 <_printf_i+0x12c>
 8000f54:	682b      	ldr	r3, [r5, #0]
 8000f56:	6826      	ldr	r6, [r4, #0]
 8000f58:	6961      	ldr	r1, [r4, #20]
 8000f5a:	1d18      	adds	r0, r3, #4
 8000f5c:	6028      	str	r0, [r5, #0]
 8000f5e:	0635      	lsls	r5, r6, #24
 8000f60:	681b      	ldr	r3, [r3, #0]
 8000f62:	d501      	bpl.n	8000f68 <_printf_i+0x1c4>
 8000f64:	6019      	str	r1, [r3, #0]
 8000f66:	e002      	b.n	8000f6e <_printf_i+0x1ca>
 8000f68:	0670      	lsls	r0, r6, #25
 8000f6a:	d5fb      	bpl.n	8000f64 <_printf_i+0x1c0>
 8000f6c:	8019      	strh	r1, [r3, #0]
 8000f6e:	2300      	movs	r3, #0
 8000f70:	6123      	str	r3, [r4, #16]
 8000f72:	4615      	mov	r5, r2
 8000f74:	e7bc      	b.n	8000ef0 <_printf_i+0x14c>
 8000f76:	682b      	ldr	r3, [r5, #0]
 8000f78:	1d1a      	adds	r2, r3, #4
 8000f7a:	602a      	str	r2, [r5, #0]
 8000f7c:	681d      	ldr	r5, [r3, #0]
 8000f7e:	6862      	ldr	r2, [r4, #4]
 8000f80:	2100      	movs	r1, #0
 8000f82:	4628      	mov	r0, r5
 8000f84:	f7ff f924 	bl	80001d0 <memchr>
 8000f88:	b108      	cbz	r0, 8000f8e <_printf_i+0x1ea>
 8000f8a:	1b40      	subs	r0, r0, r5
 8000f8c:	6060      	str	r0, [r4, #4]
 8000f8e:	6863      	ldr	r3, [r4, #4]
 8000f90:	6123      	str	r3, [r4, #16]
 8000f92:	2300      	movs	r3, #0
 8000f94:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f98:	e7aa      	b.n	8000ef0 <_printf_i+0x14c>
 8000f9a:	6923      	ldr	r3, [r4, #16]
 8000f9c:	462a      	mov	r2, r5
 8000f9e:	4649      	mov	r1, r9
 8000fa0:	4640      	mov	r0, r8
 8000fa2:	47d0      	blx	sl
 8000fa4:	3001      	adds	r0, #1
 8000fa6:	d0ad      	beq.n	8000f04 <_printf_i+0x160>
 8000fa8:	6823      	ldr	r3, [r4, #0]
 8000faa:	079b      	lsls	r3, r3, #30
 8000fac:	d413      	bmi.n	8000fd6 <_printf_i+0x232>
 8000fae:	68e0      	ldr	r0, [r4, #12]
 8000fb0:	9b03      	ldr	r3, [sp, #12]
 8000fb2:	4298      	cmp	r0, r3
 8000fb4:	bfb8      	it	lt
 8000fb6:	4618      	movlt	r0, r3
 8000fb8:	e7a6      	b.n	8000f08 <_printf_i+0x164>
 8000fba:	2301      	movs	r3, #1
 8000fbc:	4632      	mov	r2, r6
 8000fbe:	4649      	mov	r1, r9
 8000fc0:	4640      	mov	r0, r8
 8000fc2:	47d0      	blx	sl
 8000fc4:	3001      	adds	r0, #1
 8000fc6:	d09d      	beq.n	8000f04 <_printf_i+0x160>
 8000fc8:	3501      	adds	r5, #1
 8000fca:	68e3      	ldr	r3, [r4, #12]
 8000fcc:	9903      	ldr	r1, [sp, #12]
 8000fce:	1a5b      	subs	r3, r3, r1
 8000fd0:	42ab      	cmp	r3, r5
 8000fd2:	dcf2      	bgt.n	8000fba <_printf_i+0x216>
 8000fd4:	e7eb      	b.n	8000fae <_printf_i+0x20a>
 8000fd6:	2500      	movs	r5, #0
 8000fd8:	f104 0619 	add.w	r6, r4, #25
 8000fdc:	e7f5      	b.n	8000fca <_printf_i+0x226>
 8000fde:	bf00      	nop
 8000fe0:	080013da 	.word	0x080013da
 8000fe4:	080013eb 	.word	0x080013eb

08000fe8 <__sflush_r>:
 8000fe8:	898a      	ldrh	r2, [r1, #12]
 8000fea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000fee:	4605      	mov	r5, r0
 8000ff0:	0710      	lsls	r0, r2, #28
 8000ff2:	460c      	mov	r4, r1
 8000ff4:	d458      	bmi.n	80010a8 <__sflush_r+0xc0>
 8000ff6:	684b      	ldr	r3, [r1, #4]
 8000ff8:	2b00      	cmp	r3, #0
 8000ffa:	dc05      	bgt.n	8001008 <__sflush_r+0x20>
 8000ffc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000ffe:	2b00      	cmp	r3, #0
 8001000:	dc02      	bgt.n	8001008 <__sflush_r+0x20>
 8001002:	2000      	movs	r0, #0
 8001004:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001008:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800100a:	2e00      	cmp	r6, #0
 800100c:	d0f9      	beq.n	8001002 <__sflush_r+0x1a>
 800100e:	2300      	movs	r3, #0
 8001010:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001014:	682f      	ldr	r7, [r5, #0]
 8001016:	6a21      	ldr	r1, [r4, #32]
 8001018:	602b      	str	r3, [r5, #0]
 800101a:	d032      	beq.n	8001082 <__sflush_r+0x9a>
 800101c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800101e:	89a3      	ldrh	r3, [r4, #12]
 8001020:	075a      	lsls	r2, r3, #29
 8001022:	d505      	bpl.n	8001030 <__sflush_r+0x48>
 8001024:	6863      	ldr	r3, [r4, #4]
 8001026:	1ac0      	subs	r0, r0, r3
 8001028:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800102a:	b10b      	cbz	r3, 8001030 <__sflush_r+0x48>
 800102c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800102e:	1ac0      	subs	r0, r0, r3
 8001030:	2300      	movs	r3, #0
 8001032:	4602      	mov	r2, r0
 8001034:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001036:	6a21      	ldr	r1, [r4, #32]
 8001038:	4628      	mov	r0, r5
 800103a:	47b0      	blx	r6
 800103c:	1c43      	adds	r3, r0, #1
 800103e:	89a3      	ldrh	r3, [r4, #12]
 8001040:	d106      	bne.n	8001050 <__sflush_r+0x68>
 8001042:	6829      	ldr	r1, [r5, #0]
 8001044:	291d      	cmp	r1, #29
 8001046:	d82b      	bhi.n	80010a0 <__sflush_r+0xb8>
 8001048:	4a29      	ldr	r2, [pc, #164]	; (80010f0 <__sflush_r+0x108>)
 800104a:	410a      	asrs	r2, r1
 800104c:	07d6      	lsls	r6, r2, #31
 800104e:	d427      	bmi.n	80010a0 <__sflush_r+0xb8>
 8001050:	2200      	movs	r2, #0
 8001052:	6062      	str	r2, [r4, #4]
 8001054:	04d9      	lsls	r1, r3, #19
 8001056:	6922      	ldr	r2, [r4, #16]
 8001058:	6022      	str	r2, [r4, #0]
 800105a:	d504      	bpl.n	8001066 <__sflush_r+0x7e>
 800105c:	1c42      	adds	r2, r0, #1
 800105e:	d101      	bne.n	8001064 <__sflush_r+0x7c>
 8001060:	682b      	ldr	r3, [r5, #0]
 8001062:	b903      	cbnz	r3, 8001066 <__sflush_r+0x7e>
 8001064:	6560      	str	r0, [r4, #84]	; 0x54
 8001066:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001068:	602f      	str	r7, [r5, #0]
 800106a:	2900      	cmp	r1, #0
 800106c:	d0c9      	beq.n	8001002 <__sflush_r+0x1a>
 800106e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001072:	4299      	cmp	r1, r3
 8001074:	d002      	beq.n	800107c <__sflush_r+0x94>
 8001076:	4628      	mov	r0, r5
 8001078:	f7ff fbea 	bl	8000850 <_free_r>
 800107c:	2000      	movs	r0, #0
 800107e:	6360      	str	r0, [r4, #52]	; 0x34
 8001080:	e7c0      	b.n	8001004 <__sflush_r+0x1c>
 8001082:	2301      	movs	r3, #1
 8001084:	4628      	mov	r0, r5
 8001086:	47b0      	blx	r6
 8001088:	1c41      	adds	r1, r0, #1
 800108a:	d1c8      	bne.n	800101e <__sflush_r+0x36>
 800108c:	682b      	ldr	r3, [r5, #0]
 800108e:	2b00      	cmp	r3, #0
 8001090:	d0c5      	beq.n	800101e <__sflush_r+0x36>
 8001092:	2b1d      	cmp	r3, #29
 8001094:	d001      	beq.n	800109a <__sflush_r+0xb2>
 8001096:	2b16      	cmp	r3, #22
 8001098:	d101      	bne.n	800109e <__sflush_r+0xb6>
 800109a:	602f      	str	r7, [r5, #0]
 800109c:	e7b1      	b.n	8001002 <__sflush_r+0x1a>
 800109e:	89a3      	ldrh	r3, [r4, #12]
 80010a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010a4:	81a3      	strh	r3, [r4, #12]
 80010a6:	e7ad      	b.n	8001004 <__sflush_r+0x1c>
 80010a8:	690f      	ldr	r7, [r1, #16]
 80010aa:	2f00      	cmp	r7, #0
 80010ac:	d0a9      	beq.n	8001002 <__sflush_r+0x1a>
 80010ae:	0793      	lsls	r3, r2, #30
 80010b0:	680e      	ldr	r6, [r1, #0]
 80010b2:	bf08      	it	eq
 80010b4:	694b      	ldreq	r3, [r1, #20]
 80010b6:	600f      	str	r7, [r1, #0]
 80010b8:	bf18      	it	ne
 80010ba:	2300      	movne	r3, #0
 80010bc:	eba6 0807 	sub.w	r8, r6, r7
 80010c0:	608b      	str	r3, [r1, #8]
 80010c2:	f1b8 0f00 	cmp.w	r8, #0
 80010c6:	dd9c      	ble.n	8001002 <__sflush_r+0x1a>
 80010c8:	6a21      	ldr	r1, [r4, #32]
 80010ca:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80010cc:	4643      	mov	r3, r8
 80010ce:	463a      	mov	r2, r7
 80010d0:	4628      	mov	r0, r5
 80010d2:	47b0      	blx	r6
 80010d4:	2800      	cmp	r0, #0
 80010d6:	dc06      	bgt.n	80010e6 <__sflush_r+0xfe>
 80010d8:	89a3      	ldrh	r3, [r4, #12]
 80010da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010de:	81a3      	strh	r3, [r4, #12]
 80010e0:	f04f 30ff 	mov.w	r0, #4294967295
 80010e4:	e78e      	b.n	8001004 <__sflush_r+0x1c>
 80010e6:	4407      	add	r7, r0
 80010e8:	eba8 0800 	sub.w	r8, r8, r0
 80010ec:	e7e9      	b.n	80010c2 <__sflush_r+0xda>
 80010ee:	bf00      	nop
 80010f0:	dfbffffe 	.word	0xdfbffffe

080010f4 <_fflush_r>:
 80010f4:	b538      	push	{r3, r4, r5, lr}
 80010f6:	690b      	ldr	r3, [r1, #16]
 80010f8:	4605      	mov	r5, r0
 80010fa:	460c      	mov	r4, r1
 80010fc:	b913      	cbnz	r3, 8001104 <_fflush_r+0x10>
 80010fe:	2500      	movs	r5, #0
 8001100:	4628      	mov	r0, r5
 8001102:	bd38      	pop	{r3, r4, r5, pc}
 8001104:	b118      	cbz	r0, 800110e <_fflush_r+0x1a>
 8001106:	6a03      	ldr	r3, [r0, #32]
 8001108:	b90b      	cbnz	r3, 800110e <_fflush_r+0x1a>
 800110a:	f7ff fa99 	bl	8000640 <__sinit>
 800110e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001112:	2b00      	cmp	r3, #0
 8001114:	d0f3      	beq.n	80010fe <_fflush_r+0xa>
 8001116:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001118:	07d0      	lsls	r0, r2, #31
 800111a:	d404      	bmi.n	8001126 <_fflush_r+0x32>
 800111c:	0599      	lsls	r1, r3, #22
 800111e:	d402      	bmi.n	8001126 <_fflush_r+0x32>
 8001120:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001122:	f7ff fb92 	bl	800084a <__retarget_lock_acquire_recursive>
 8001126:	4628      	mov	r0, r5
 8001128:	4621      	mov	r1, r4
 800112a:	f7ff ff5d 	bl	8000fe8 <__sflush_r>
 800112e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001130:	07da      	lsls	r2, r3, #31
 8001132:	4605      	mov	r5, r0
 8001134:	d4e4      	bmi.n	8001100 <_fflush_r+0xc>
 8001136:	89a3      	ldrh	r3, [r4, #12]
 8001138:	059b      	lsls	r3, r3, #22
 800113a:	d4e1      	bmi.n	8001100 <_fflush_r+0xc>
 800113c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800113e:	f7ff fb85 	bl	800084c <__retarget_lock_release_recursive>
 8001142:	e7dd      	b.n	8001100 <_fflush_r+0xc>

08001144 <__swbuf_r>:
 8001144:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001146:	460e      	mov	r6, r1
 8001148:	4614      	mov	r4, r2
 800114a:	4605      	mov	r5, r0
 800114c:	b118      	cbz	r0, 8001156 <__swbuf_r+0x12>
 800114e:	6a03      	ldr	r3, [r0, #32]
 8001150:	b90b      	cbnz	r3, 8001156 <__swbuf_r+0x12>
 8001152:	f7ff fa75 	bl	8000640 <__sinit>
 8001156:	69a3      	ldr	r3, [r4, #24]
 8001158:	60a3      	str	r3, [r4, #8]
 800115a:	89a3      	ldrh	r3, [r4, #12]
 800115c:	071a      	lsls	r2, r3, #28
 800115e:	d525      	bpl.n	80011ac <__swbuf_r+0x68>
 8001160:	6923      	ldr	r3, [r4, #16]
 8001162:	b31b      	cbz	r3, 80011ac <__swbuf_r+0x68>
 8001164:	6823      	ldr	r3, [r4, #0]
 8001166:	6922      	ldr	r2, [r4, #16]
 8001168:	1a98      	subs	r0, r3, r2
 800116a:	6963      	ldr	r3, [r4, #20]
 800116c:	b2f6      	uxtb	r6, r6
 800116e:	4283      	cmp	r3, r0
 8001170:	4637      	mov	r7, r6
 8001172:	dc04      	bgt.n	800117e <__swbuf_r+0x3a>
 8001174:	4621      	mov	r1, r4
 8001176:	4628      	mov	r0, r5
 8001178:	f7ff ffbc 	bl	80010f4 <_fflush_r>
 800117c:	b9e0      	cbnz	r0, 80011b8 <__swbuf_r+0x74>
 800117e:	68a3      	ldr	r3, [r4, #8]
 8001180:	3b01      	subs	r3, #1
 8001182:	60a3      	str	r3, [r4, #8]
 8001184:	6823      	ldr	r3, [r4, #0]
 8001186:	1c5a      	adds	r2, r3, #1
 8001188:	6022      	str	r2, [r4, #0]
 800118a:	701e      	strb	r6, [r3, #0]
 800118c:	6962      	ldr	r2, [r4, #20]
 800118e:	1c43      	adds	r3, r0, #1
 8001190:	429a      	cmp	r2, r3
 8001192:	d004      	beq.n	800119e <__swbuf_r+0x5a>
 8001194:	89a3      	ldrh	r3, [r4, #12]
 8001196:	07db      	lsls	r3, r3, #31
 8001198:	d506      	bpl.n	80011a8 <__swbuf_r+0x64>
 800119a:	2e0a      	cmp	r6, #10
 800119c:	d104      	bne.n	80011a8 <__swbuf_r+0x64>
 800119e:	4621      	mov	r1, r4
 80011a0:	4628      	mov	r0, r5
 80011a2:	f7ff ffa7 	bl	80010f4 <_fflush_r>
 80011a6:	b938      	cbnz	r0, 80011b8 <__swbuf_r+0x74>
 80011a8:	4638      	mov	r0, r7
 80011aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011ac:	4621      	mov	r1, r4
 80011ae:	4628      	mov	r0, r5
 80011b0:	f000 f806 	bl	80011c0 <__swsetup_r>
 80011b4:	2800      	cmp	r0, #0
 80011b6:	d0d5      	beq.n	8001164 <__swbuf_r+0x20>
 80011b8:	f04f 37ff 	mov.w	r7, #4294967295
 80011bc:	e7f4      	b.n	80011a8 <__swbuf_r+0x64>
	...

080011c0 <__swsetup_r>:
 80011c0:	b538      	push	{r3, r4, r5, lr}
 80011c2:	4b2a      	ldr	r3, [pc, #168]	; (800126c <__swsetup_r+0xac>)
 80011c4:	4605      	mov	r5, r0
 80011c6:	6818      	ldr	r0, [r3, #0]
 80011c8:	460c      	mov	r4, r1
 80011ca:	b118      	cbz	r0, 80011d4 <__swsetup_r+0x14>
 80011cc:	6a03      	ldr	r3, [r0, #32]
 80011ce:	b90b      	cbnz	r3, 80011d4 <__swsetup_r+0x14>
 80011d0:	f7ff fa36 	bl	8000640 <__sinit>
 80011d4:	89a3      	ldrh	r3, [r4, #12]
 80011d6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011da:	0718      	lsls	r0, r3, #28
 80011dc:	d422      	bmi.n	8001224 <__swsetup_r+0x64>
 80011de:	06d9      	lsls	r1, r3, #27
 80011e0:	d407      	bmi.n	80011f2 <__swsetup_r+0x32>
 80011e2:	2309      	movs	r3, #9
 80011e4:	602b      	str	r3, [r5, #0]
 80011e6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80011ea:	81a3      	strh	r3, [r4, #12]
 80011ec:	f04f 30ff 	mov.w	r0, #4294967295
 80011f0:	e034      	b.n	800125c <__swsetup_r+0x9c>
 80011f2:	0758      	lsls	r0, r3, #29
 80011f4:	d512      	bpl.n	800121c <__swsetup_r+0x5c>
 80011f6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80011f8:	b141      	cbz	r1, 800120c <__swsetup_r+0x4c>
 80011fa:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011fe:	4299      	cmp	r1, r3
 8001200:	d002      	beq.n	8001208 <__swsetup_r+0x48>
 8001202:	4628      	mov	r0, r5
 8001204:	f7ff fb24 	bl	8000850 <_free_r>
 8001208:	2300      	movs	r3, #0
 800120a:	6363      	str	r3, [r4, #52]	; 0x34
 800120c:	89a3      	ldrh	r3, [r4, #12]
 800120e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001212:	81a3      	strh	r3, [r4, #12]
 8001214:	2300      	movs	r3, #0
 8001216:	6063      	str	r3, [r4, #4]
 8001218:	6923      	ldr	r3, [r4, #16]
 800121a:	6023      	str	r3, [r4, #0]
 800121c:	89a3      	ldrh	r3, [r4, #12]
 800121e:	f043 0308 	orr.w	r3, r3, #8
 8001222:	81a3      	strh	r3, [r4, #12]
 8001224:	6923      	ldr	r3, [r4, #16]
 8001226:	b94b      	cbnz	r3, 800123c <__swsetup_r+0x7c>
 8001228:	89a3      	ldrh	r3, [r4, #12]
 800122a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800122e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001232:	d003      	beq.n	800123c <__swsetup_r+0x7c>
 8001234:	4621      	mov	r1, r4
 8001236:	4628      	mov	r0, r5
 8001238:	f000 f850 	bl	80012dc <__smakebuf_r>
 800123c:	89a0      	ldrh	r0, [r4, #12]
 800123e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001242:	f010 0301 	ands.w	r3, r0, #1
 8001246:	d00a      	beq.n	800125e <__swsetup_r+0x9e>
 8001248:	2300      	movs	r3, #0
 800124a:	60a3      	str	r3, [r4, #8]
 800124c:	6963      	ldr	r3, [r4, #20]
 800124e:	425b      	negs	r3, r3
 8001250:	61a3      	str	r3, [r4, #24]
 8001252:	6923      	ldr	r3, [r4, #16]
 8001254:	b943      	cbnz	r3, 8001268 <__swsetup_r+0xa8>
 8001256:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800125a:	d1c4      	bne.n	80011e6 <__swsetup_r+0x26>
 800125c:	bd38      	pop	{r3, r4, r5, pc}
 800125e:	0781      	lsls	r1, r0, #30
 8001260:	bf58      	it	pl
 8001262:	6963      	ldrpl	r3, [r4, #20]
 8001264:	60a3      	str	r3, [r4, #8]
 8001266:	e7f4      	b.n	8001252 <__swsetup_r+0x92>
 8001268:	2000      	movs	r0, #0
 800126a:	e7f7      	b.n	800125c <__swsetup_r+0x9c>
 800126c:	20000070 	.word	0x20000070

08001270 <_sbrk_r>:
 8001270:	b538      	push	{r3, r4, r5, lr}
 8001272:	4d06      	ldr	r5, [pc, #24]	; (800128c <_sbrk_r+0x1c>)
 8001274:	2300      	movs	r3, #0
 8001276:	4604      	mov	r4, r0
 8001278:	4608      	mov	r0, r1
 800127a:	602b      	str	r3, [r5, #0]
 800127c:	f7ff f8f4 	bl	8000468 <_sbrk>
 8001280:	1c43      	adds	r3, r0, #1
 8001282:	d102      	bne.n	800128a <_sbrk_r+0x1a>
 8001284:	682b      	ldr	r3, [r5, #0]
 8001286:	b103      	cbz	r3, 800128a <_sbrk_r+0x1a>
 8001288:	6023      	str	r3, [r4, #0]
 800128a:	bd38      	pop	{r3, r4, r5, pc}
 800128c:	200001d8 	.word	0x200001d8

08001290 <__swhatbuf_r>:
 8001290:	b570      	push	{r4, r5, r6, lr}
 8001292:	460c      	mov	r4, r1
 8001294:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001298:	2900      	cmp	r1, #0
 800129a:	b096      	sub	sp, #88	; 0x58
 800129c:	4615      	mov	r5, r2
 800129e:	461e      	mov	r6, r3
 80012a0:	da0d      	bge.n	80012be <__swhatbuf_r+0x2e>
 80012a2:	89a3      	ldrh	r3, [r4, #12]
 80012a4:	f013 0f80 	tst.w	r3, #128	; 0x80
 80012a8:	f04f 0100 	mov.w	r1, #0
 80012ac:	bf0c      	ite	eq
 80012ae:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80012b2:	2340      	movne	r3, #64	; 0x40
 80012b4:	2000      	movs	r0, #0
 80012b6:	6031      	str	r1, [r6, #0]
 80012b8:	602b      	str	r3, [r5, #0]
 80012ba:	b016      	add	sp, #88	; 0x58
 80012bc:	bd70      	pop	{r4, r5, r6, pc}
 80012be:	466a      	mov	r2, sp
 80012c0:	f000 f848 	bl	8001354 <_fstat_r>
 80012c4:	2800      	cmp	r0, #0
 80012c6:	dbec      	blt.n	80012a2 <__swhatbuf_r+0x12>
 80012c8:	9901      	ldr	r1, [sp, #4]
 80012ca:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80012ce:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80012d2:	4259      	negs	r1, r3
 80012d4:	4159      	adcs	r1, r3
 80012d6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012da:	e7eb      	b.n	80012b4 <__swhatbuf_r+0x24>

080012dc <__smakebuf_r>:
 80012dc:	898b      	ldrh	r3, [r1, #12]
 80012de:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80012e0:	079d      	lsls	r5, r3, #30
 80012e2:	4606      	mov	r6, r0
 80012e4:	460c      	mov	r4, r1
 80012e6:	d507      	bpl.n	80012f8 <__smakebuf_r+0x1c>
 80012e8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80012ec:	6023      	str	r3, [r4, #0]
 80012ee:	6123      	str	r3, [r4, #16]
 80012f0:	2301      	movs	r3, #1
 80012f2:	6163      	str	r3, [r4, #20]
 80012f4:	b002      	add	sp, #8
 80012f6:	bd70      	pop	{r4, r5, r6, pc}
 80012f8:	ab01      	add	r3, sp, #4
 80012fa:	466a      	mov	r2, sp
 80012fc:	f7ff ffc8 	bl	8001290 <__swhatbuf_r>
 8001300:	9900      	ldr	r1, [sp, #0]
 8001302:	4605      	mov	r5, r0
 8001304:	4630      	mov	r0, r6
 8001306:	f7ff fb0f 	bl	8000928 <_malloc_r>
 800130a:	b948      	cbnz	r0, 8001320 <__smakebuf_r+0x44>
 800130c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001310:	059a      	lsls	r2, r3, #22
 8001312:	d4ef      	bmi.n	80012f4 <__smakebuf_r+0x18>
 8001314:	f023 0303 	bic.w	r3, r3, #3
 8001318:	f043 0302 	orr.w	r3, r3, #2
 800131c:	81a3      	strh	r3, [r4, #12]
 800131e:	e7e3      	b.n	80012e8 <__smakebuf_r+0xc>
 8001320:	89a3      	ldrh	r3, [r4, #12]
 8001322:	6020      	str	r0, [r4, #0]
 8001324:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001328:	81a3      	strh	r3, [r4, #12]
 800132a:	9b00      	ldr	r3, [sp, #0]
 800132c:	6163      	str	r3, [r4, #20]
 800132e:	9b01      	ldr	r3, [sp, #4]
 8001330:	6120      	str	r0, [r4, #16]
 8001332:	b15b      	cbz	r3, 800134c <__smakebuf_r+0x70>
 8001334:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001338:	4630      	mov	r0, r6
 800133a:	f000 f81d 	bl	8001378 <_isatty_r>
 800133e:	b128      	cbz	r0, 800134c <__smakebuf_r+0x70>
 8001340:	89a3      	ldrh	r3, [r4, #12]
 8001342:	f023 0303 	bic.w	r3, r3, #3
 8001346:	f043 0301 	orr.w	r3, r3, #1
 800134a:	81a3      	strh	r3, [r4, #12]
 800134c:	89a3      	ldrh	r3, [r4, #12]
 800134e:	431d      	orrs	r5, r3
 8001350:	81a5      	strh	r5, [r4, #12]
 8001352:	e7cf      	b.n	80012f4 <__smakebuf_r+0x18>

08001354 <_fstat_r>:
 8001354:	b538      	push	{r3, r4, r5, lr}
 8001356:	4d07      	ldr	r5, [pc, #28]	; (8001374 <_fstat_r+0x20>)
 8001358:	2300      	movs	r3, #0
 800135a:	4604      	mov	r4, r0
 800135c:	4608      	mov	r0, r1
 800135e:	4611      	mov	r1, r2
 8001360:	602b      	str	r3, [r5, #0]
 8001362:	f7ff f858 	bl	8000416 <_fstat>
 8001366:	1c43      	adds	r3, r0, #1
 8001368:	d102      	bne.n	8001370 <_fstat_r+0x1c>
 800136a:	682b      	ldr	r3, [r5, #0]
 800136c:	b103      	cbz	r3, 8001370 <_fstat_r+0x1c>
 800136e:	6023      	str	r3, [r4, #0]
 8001370:	bd38      	pop	{r3, r4, r5, pc}
 8001372:	bf00      	nop
 8001374:	200001d8 	.word	0x200001d8

08001378 <_isatty_r>:
 8001378:	b538      	push	{r3, r4, r5, lr}
 800137a:	4d06      	ldr	r5, [pc, #24]	; (8001394 <_isatty_r+0x1c>)
 800137c:	2300      	movs	r3, #0
 800137e:	4604      	mov	r4, r0
 8001380:	4608      	mov	r0, r1
 8001382:	602b      	str	r3, [r5, #0]
 8001384:	f7ff f857 	bl	8000436 <_isatty>
 8001388:	1c43      	adds	r3, r0, #1
 800138a:	d102      	bne.n	8001392 <_isatty_r+0x1a>
 800138c:	682b      	ldr	r3, [r5, #0]
 800138e:	b103      	cbz	r3, 8001392 <_isatty_r+0x1a>
 8001390:	6023      	str	r3, [r4, #0]
 8001392:	bd38      	pop	{r3, r4, r5, pc}
 8001394:	200001d8 	.word	0x200001d8

08001398 <_init>:
 8001398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800139a:	bf00      	nop
 800139c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800139e:	bc08      	pop	{r3}
 80013a0:	469e      	mov	lr, r3
 80013a2:	4770      	bx	lr

080013a4 <_fini>:
 80013a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013a6:	bf00      	nop
 80013a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013aa:	bc08      	pop	{r3}
 80013ac:	469e      	mov	lr, r3
 80013ae:	4770      	bx	lr
