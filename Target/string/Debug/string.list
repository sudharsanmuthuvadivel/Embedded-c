
string.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000112c  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000005c  080012bc  080012bc  000112bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001318  08001318  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001318  08001318  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001318  08001318  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001318  08001318  00011318  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800131c  0800131c  0001131c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001320  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002005c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0002005c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0002005c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000905  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000321  00000000  00000000  000209d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000110  00000000  00000000  00020cf8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000b8  00000000  00000000  00020e08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00002c89  00000000  00000000  00020ec0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00001414  00000000  00000000  00023b49  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0000970a  00000000  00000000  00024f5d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000ae8  00000000  00000000  0002e668  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000052  00000000  00000000  0002f150  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080012a4 	.word	0x080012a4

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	080012a4 	.word	0x080012a4

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <main>:

#include <stdint.h>
#include <stdio.h>

int main(void)
{
 8000270:	b5b0      	push	{r4, r5, r7, lr}
 8000272:	b086      	sub	sp, #24
 8000274:	af00      	add	r7, sp, #0
	char mgs1[] = "Hello how are you";
 8000276:	4b06      	ldr	r3, [pc, #24]	; (8000290 <main+0x20>)
 8000278:	1d3c      	adds	r4, r7, #4
 800027a:	461d      	mov	r5, r3
 800027c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800027e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000280:	682b      	ldr	r3, [r5, #0]
 8000282:	8023      	strh	r3, [r4, #0]
	printf("message is : %s \n",mgs1);
 8000284:	1d3b      	adds	r3, r7, #4
 8000286:	4619      	mov	r1, r3
 8000288:	4802      	ldr	r0, [pc, #8]	; (8000294 <main+0x24>)
 800028a:	f000 f995 	bl	80005b8 <iprintf>
    /* Loop forever */
	for(;;);
 800028e:	e7fe      	b.n	800028e <main+0x1e>
 8000290:	080012d0 	.word	0x080012d0
 8000294:	080012bc 	.word	0x080012bc

08000298 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000298:	b580      	push	{r7, lr}
 800029a:	b086      	sub	sp, #24
 800029c:	af00      	add	r7, sp, #0
 800029e:	60f8      	str	r0, [r7, #12]
 80002a0:	60b9      	str	r1, [r7, #8]
 80002a2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002a4:	2300      	movs	r3, #0
 80002a6:	617b      	str	r3, [r7, #20]
 80002a8:	e00a      	b.n	80002c0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002aa:	f3af 8000 	nop.w
 80002ae:	4601      	mov	r1, r0
 80002b0:	68bb      	ldr	r3, [r7, #8]
 80002b2:	1c5a      	adds	r2, r3, #1
 80002b4:	60ba      	str	r2, [r7, #8]
 80002b6:	b2ca      	uxtb	r2, r1
 80002b8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002ba:	697b      	ldr	r3, [r7, #20]
 80002bc:	3301      	adds	r3, #1
 80002be:	617b      	str	r3, [r7, #20]
 80002c0:	697a      	ldr	r2, [r7, #20]
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	429a      	cmp	r2, r3
 80002c6:	dbf0      	blt.n	80002aa <_read+0x12>
  }

  return len;
 80002c8:	687b      	ldr	r3, [r7, #4]
}
 80002ca:	4618      	mov	r0, r3
 80002cc:	3718      	adds	r7, #24
 80002ce:	46bd      	mov	sp, r7
 80002d0:	bd80      	pop	{r7, pc}

080002d2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002d2:	b580      	push	{r7, lr}
 80002d4:	b086      	sub	sp, #24
 80002d6:	af00      	add	r7, sp, #0
 80002d8:	60f8      	str	r0, [r7, #12]
 80002da:	60b9      	str	r1, [r7, #8]
 80002dc:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002de:	2300      	movs	r3, #0
 80002e0:	617b      	str	r3, [r7, #20]
 80002e2:	e009      	b.n	80002f8 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80002e4:	68bb      	ldr	r3, [r7, #8]
 80002e6:	1c5a      	adds	r2, r3, #1
 80002e8:	60ba      	str	r2, [r7, #8]
 80002ea:	781b      	ldrb	r3, [r3, #0]
 80002ec:	4618      	mov	r0, r3
 80002ee:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002f2:	697b      	ldr	r3, [r7, #20]
 80002f4:	3301      	adds	r3, #1
 80002f6:	617b      	str	r3, [r7, #20]
 80002f8:	697a      	ldr	r2, [r7, #20]
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	429a      	cmp	r2, r3
 80002fe:	dbf1      	blt.n	80002e4 <_write+0x12>
  }
  return len;
 8000300:	687b      	ldr	r3, [r7, #4]
}
 8000302:	4618      	mov	r0, r3
 8000304:	3718      	adds	r7, #24
 8000306:	46bd      	mov	sp, r7
 8000308:	bd80      	pop	{r7, pc}

0800030a <_close>:

int _close(int file)
{
 800030a:	b480      	push	{r7}
 800030c:	b083      	sub	sp, #12
 800030e:	af00      	add	r7, sp, #0
 8000310:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000312:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000316:	4618      	mov	r0, r3
 8000318:	370c      	adds	r7, #12
 800031a:	46bd      	mov	sp, r7
 800031c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000320:	4770      	bx	lr

08000322 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000322:	b480      	push	{r7}
 8000324:	b083      	sub	sp, #12
 8000326:	af00      	add	r7, sp, #0
 8000328:	6078      	str	r0, [r7, #4]
 800032a:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800032c:	683b      	ldr	r3, [r7, #0]
 800032e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000332:	605a      	str	r2, [r3, #4]
  return 0;
 8000334:	2300      	movs	r3, #0
}
 8000336:	4618      	mov	r0, r3
 8000338:	370c      	adds	r7, #12
 800033a:	46bd      	mov	sp, r7
 800033c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000340:	4770      	bx	lr

08000342 <_isatty>:

int _isatty(int file)
{
 8000342:	b480      	push	{r7}
 8000344:	b083      	sub	sp, #12
 8000346:	af00      	add	r7, sp, #0
 8000348:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800034a:	2301      	movs	r3, #1
}
 800034c:	4618      	mov	r0, r3
 800034e:	370c      	adds	r7, #12
 8000350:	46bd      	mov	sp, r7
 8000352:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000356:	4770      	bx	lr

08000358 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000358:	b480      	push	{r7}
 800035a:	b085      	sub	sp, #20
 800035c:	af00      	add	r7, sp, #0
 800035e:	60f8      	str	r0, [r7, #12]
 8000360:	60b9      	str	r1, [r7, #8]
 8000362:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000364:	2300      	movs	r3, #0
}
 8000366:	4618      	mov	r0, r3
 8000368:	3714      	adds	r7, #20
 800036a:	46bd      	mov	sp, r7
 800036c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000370:	4770      	bx	lr
	...

08000374 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000374:	b580      	push	{r7, lr}
 8000376:	b086      	sub	sp, #24
 8000378:	af00      	add	r7, sp, #0
 800037a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800037c:	4a14      	ldr	r2, [pc, #80]	; (80003d0 <_sbrk+0x5c>)
 800037e:	4b15      	ldr	r3, [pc, #84]	; (80003d4 <_sbrk+0x60>)
 8000380:	1ad3      	subs	r3, r2, r3
 8000382:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000384:	697b      	ldr	r3, [r7, #20]
 8000386:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000388:	4b13      	ldr	r3, [pc, #76]	; (80003d8 <_sbrk+0x64>)
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	2b00      	cmp	r3, #0
 800038e:	d102      	bne.n	8000396 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000390:	4b11      	ldr	r3, [pc, #68]	; (80003d8 <_sbrk+0x64>)
 8000392:	4a12      	ldr	r2, [pc, #72]	; (80003dc <_sbrk+0x68>)
 8000394:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000396:	4b10      	ldr	r3, [pc, #64]	; (80003d8 <_sbrk+0x64>)
 8000398:	681a      	ldr	r2, [r3, #0]
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	4413      	add	r3, r2
 800039e:	693a      	ldr	r2, [r7, #16]
 80003a0:	429a      	cmp	r2, r3
 80003a2:	d207      	bcs.n	80003b4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003a4:	f000 f9ac 	bl	8000700 <__errno>
 80003a8:	4603      	mov	r3, r0
 80003aa:	220c      	movs	r2, #12
 80003ac:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003ae:	f04f 33ff 	mov.w	r3, #4294967295
 80003b2:	e009      	b.n	80003c8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003b4:	4b08      	ldr	r3, [pc, #32]	; (80003d8 <_sbrk+0x64>)
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003ba:	4b07      	ldr	r3, [pc, #28]	; (80003d8 <_sbrk+0x64>)
 80003bc:	681a      	ldr	r2, [r3, #0]
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	4413      	add	r3, r2
 80003c2:	4a05      	ldr	r2, [pc, #20]	; (80003d8 <_sbrk+0x64>)
 80003c4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003c6:	68fb      	ldr	r3, [r7, #12]
}
 80003c8:	4618      	mov	r0, r3
 80003ca:	3718      	adds	r7, #24
 80003cc:	46bd      	mov	sp, r7
 80003ce:	bd80      	pop	{r7, pc}
 80003d0:	20020000 	.word	0x20020000
 80003d4:	00000400 	.word	0x00000400
 80003d8:	20000078 	.word	0x20000078
 80003dc:	200001c8 	.word	0x200001c8

080003e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003e0:	480d      	ldr	r0, [pc, #52]	; (8000418 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003e2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003e4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003e8:	480c      	ldr	r0, [pc, #48]	; (800041c <LoopForever+0x6>)
  ldr r1, =_edata
 80003ea:	490d      	ldr	r1, [pc, #52]	; (8000420 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003ec:	4a0d      	ldr	r2, [pc, #52]	; (8000424 <LoopForever+0xe>)
  movs r3, #0
 80003ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003f0:	e002      	b.n	80003f8 <LoopCopyDataInit>

080003f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003f6:	3304      	adds	r3, #4

080003f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003fc:	d3f9      	bcc.n	80003f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003fe:	4a0a      	ldr	r2, [pc, #40]	; (8000428 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000400:	4c0a      	ldr	r4, [pc, #40]	; (800042c <LoopForever+0x16>)
  movs r3, #0
 8000402:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000404:	e001      	b.n	800040a <LoopFillZerobss>

08000406 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000406:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000408:	3204      	adds	r2, #4

0800040a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800040a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800040c:	d3fb      	bcc.n	8000406 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800040e:	f000 f97d 	bl	800070c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000412:	f7ff ff2d 	bl	8000270 <main>

08000416 <LoopForever>:

LoopForever:
  b LoopForever
 8000416:	e7fe      	b.n	8000416 <LoopForever>
  ldr   r0, =_estack
 8000418:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800041c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000420:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000424:	08001320 	.word	0x08001320
  ldr r2, =_sbss
 8000428:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 800042c:	200001c8 	.word	0x200001c8

08000430 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000430:	e7fe      	b.n	8000430 <ADC_IRQHandler>
	...

08000434 <std>:
 8000434:	2300      	movs	r3, #0
 8000436:	b510      	push	{r4, lr}
 8000438:	4604      	mov	r4, r0
 800043a:	e9c0 3300 	strd	r3, r3, [r0]
 800043e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000442:	6083      	str	r3, [r0, #8]
 8000444:	8181      	strh	r1, [r0, #12]
 8000446:	6643      	str	r3, [r0, #100]	; 0x64
 8000448:	81c2      	strh	r2, [r0, #14]
 800044a:	6183      	str	r3, [r0, #24]
 800044c:	4619      	mov	r1, r3
 800044e:	2208      	movs	r2, #8
 8000450:	305c      	adds	r0, #92	; 0x5c
 8000452:	f000 f906 	bl	8000662 <memset>
 8000456:	4b0d      	ldr	r3, [pc, #52]	; (800048c <std+0x58>)
 8000458:	6263      	str	r3, [r4, #36]	; 0x24
 800045a:	4b0d      	ldr	r3, [pc, #52]	; (8000490 <std+0x5c>)
 800045c:	62a3      	str	r3, [r4, #40]	; 0x28
 800045e:	4b0d      	ldr	r3, [pc, #52]	; (8000494 <std+0x60>)
 8000460:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000462:	4b0d      	ldr	r3, [pc, #52]	; (8000498 <std+0x64>)
 8000464:	6323      	str	r3, [r4, #48]	; 0x30
 8000466:	4b0d      	ldr	r3, [pc, #52]	; (800049c <std+0x68>)
 8000468:	6224      	str	r4, [r4, #32]
 800046a:	429c      	cmp	r4, r3
 800046c:	d006      	beq.n	800047c <std+0x48>
 800046e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8000472:	4294      	cmp	r4, r2
 8000474:	d002      	beq.n	800047c <std+0x48>
 8000476:	33d0      	adds	r3, #208	; 0xd0
 8000478:	429c      	cmp	r4, r3
 800047a:	d105      	bne.n	8000488 <std+0x54>
 800047c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000480:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000484:	f000 b966 	b.w	8000754 <__retarget_lock_init_recursive>
 8000488:	bd10      	pop	{r4, pc}
 800048a:	bf00      	nop
 800048c:	080005dd 	.word	0x080005dd
 8000490:	080005ff 	.word	0x080005ff
 8000494:	08000637 	.word	0x08000637
 8000498:	0800065b 	.word	0x0800065b
 800049c:	2000007c 	.word	0x2000007c

080004a0 <stdio_exit_handler>:
 80004a0:	4a02      	ldr	r2, [pc, #8]	; (80004ac <stdio_exit_handler+0xc>)
 80004a2:	4903      	ldr	r1, [pc, #12]	; (80004b0 <stdio_exit_handler+0x10>)
 80004a4:	4803      	ldr	r0, [pc, #12]	; (80004b4 <stdio_exit_handler+0x14>)
 80004a6:	f000 b869 	b.w	800057c <_fwalk_sglue>
 80004aa:	bf00      	nop
 80004ac:	20000000 	.word	0x20000000
 80004b0:	08001001 	.word	0x08001001
 80004b4:	2000000c 	.word	0x2000000c

080004b8 <cleanup_stdio>:
 80004b8:	6841      	ldr	r1, [r0, #4]
 80004ba:	4b0c      	ldr	r3, [pc, #48]	; (80004ec <cleanup_stdio+0x34>)
 80004bc:	4299      	cmp	r1, r3
 80004be:	b510      	push	{r4, lr}
 80004c0:	4604      	mov	r4, r0
 80004c2:	d001      	beq.n	80004c8 <cleanup_stdio+0x10>
 80004c4:	f000 fd9c 	bl	8001000 <_fflush_r>
 80004c8:	68a1      	ldr	r1, [r4, #8]
 80004ca:	4b09      	ldr	r3, [pc, #36]	; (80004f0 <cleanup_stdio+0x38>)
 80004cc:	4299      	cmp	r1, r3
 80004ce:	d002      	beq.n	80004d6 <cleanup_stdio+0x1e>
 80004d0:	4620      	mov	r0, r4
 80004d2:	f000 fd95 	bl	8001000 <_fflush_r>
 80004d6:	68e1      	ldr	r1, [r4, #12]
 80004d8:	4b06      	ldr	r3, [pc, #24]	; (80004f4 <cleanup_stdio+0x3c>)
 80004da:	4299      	cmp	r1, r3
 80004dc:	d004      	beq.n	80004e8 <cleanup_stdio+0x30>
 80004de:	4620      	mov	r0, r4
 80004e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004e4:	f000 bd8c 	b.w	8001000 <_fflush_r>
 80004e8:	bd10      	pop	{r4, pc}
 80004ea:	bf00      	nop
 80004ec:	2000007c 	.word	0x2000007c
 80004f0:	200000e4 	.word	0x200000e4
 80004f4:	2000014c 	.word	0x2000014c

080004f8 <global_stdio_init.part.0>:
 80004f8:	b510      	push	{r4, lr}
 80004fa:	4b0b      	ldr	r3, [pc, #44]	; (8000528 <global_stdio_init.part.0+0x30>)
 80004fc:	4c0b      	ldr	r4, [pc, #44]	; (800052c <global_stdio_init.part.0+0x34>)
 80004fe:	4a0c      	ldr	r2, [pc, #48]	; (8000530 <global_stdio_init.part.0+0x38>)
 8000500:	601a      	str	r2, [r3, #0]
 8000502:	4620      	mov	r0, r4
 8000504:	2200      	movs	r2, #0
 8000506:	2104      	movs	r1, #4
 8000508:	f7ff ff94 	bl	8000434 <std>
 800050c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000510:	2201      	movs	r2, #1
 8000512:	2109      	movs	r1, #9
 8000514:	f7ff ff8e 	bl	8000434 <std>
 8000518:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800051c:	2202      	movs	r2, #2
 800051e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000522:	2112      	movs	r1, #18
 8000524:	f7ff bf86 	b.w	8000434 <std>
 8000528:	200001b4 	.word	0x200001b4
 800052c:	2000007c 	.word	0x2000007c
 8000530:	080004a1 	.word	0x080004a1

08000534 <__sfp_lock_acquire>:
 8000534:	4801      	ldr	r0, [pc, #4]	; (800053c <__sfp_lock_acquire+0x8>)
 8000536:	f000 b90e 	b.w	8000756 <__retarget_lock_acquire_recursive>
 800053a:	bf00      	nop
 800053c:	200001bd 	.word	0x200001bd

08000540 <__sfp_lock_release>:
 8000540:	4801      	ldr	r0, [pc, #4]	; (8000548 <__sfp_lock_release+0x8>)
 8000542:	f000 b909 	b.w	8000758 <__retarget_lock_release_recursive>
 8000546:	bf00      	nop
 8000548:	200001bd 	.word	0x200001bd

0800054c <__sinit>:
 800054c:	b510      	push	{r4, lr}
 800054e:	4604      	mov	r4, r0
 8000550:	f7ff fff0 	bl	8000534 <__sfp_lock_acquire>
 8000554:	6a23      	ldr	r3, [r4, #32]
 8000556:	b11b      	cbz	r3, 8000560 <__sinit+0x14>
 8000558:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800055c:	f7ff bff0 	b.w	8000540 <__sfp_lock_release>
 8000560:	4b04      	ldr	r3, [pc, #16]	; (8000574 <__sinit+0x28>)
 8000562:	6223      	str	r3, [r4, #32]
 8000564:	4b04      	ldr	r3, [pc, #16]	; (8000578 <__sinit+0x2c>)
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	2b00      	cmp	r3, #0
 800056a:	d1f5      	bne.n	8000558 <__sinit+0xc>
 800056c:	f7ff ffc4 	bl	80004f8 <global_stdio_init.part.0>
 8000570:	e7f2      	b.n	8000558 <__sinit+0xc>
 8000572:	bf00      	nop
 8000574:	080004b9 	.word	0x080004b9
 8000578:	200001b4 	.word	0x200001b4

0800057c <_fwalk_sglue>:
 800057c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000580:	4607      	mov	r7, r0
 8000582:	4688      	mov	r8, r1
 8000584:	4614      	mov	r4, r2
 8000586:	2600      	movs	r6, #0
 8000588:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800058c:	f1b9 0901 	subs.w	r9, r9, #1
 8000590:	d505      	bpl.n	800059e <_fwalk_sglue+0x22>
 8000592:	6824      	ldr	r4, [r4, #0]
 8000594:	2c00      	cmp	r4, #0
 8000596:	d1f7      	bne.n	8000588 <_fwalk_sglue+0xc>
 8000598:	4630      	mov	r0, r6
 800059a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800059e:	89ab      	ldrh	r3, [r5, #12]
 80005a0:	2b01      	cmp	r3, #1
 80005a2:	d907      	bls.n	80005b4 <_fwalk_sglue+0x38>
 80005a4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005a8:	3301      	adds	r3, #1
 80005aa:	d003      	beq.n	80005b4 <_fwalk_sglue+0x38>
 80005ac:	4629      	mov	r1, r5
 80005ae:	4638      	mov	r0, r7
 80005b0:	47c0      	blx	r8
 80005b2:	4306      	orrs	r6, r0
 80005b4:	3568      	adds	r5, #104	; 0x68
 80005b6:	e7e9      	b.n	800058c <_fwalk_sglue+0x10>

080005b8 <iprintf>:
 80005b8:	b40f      	push	{r0, r1, r2, r3}
 80005ba:	b507      	push	{r0, r1, r2, lr}
 80005bc:	4906      	ldr	r1, [pc, #24]	; (80005d8 <iprintf+0x20>)
 80005be:	ab04      	add	r3, sp, #16
 80005c0:	6808      	ldr	r0, [r1, #0]
 80005c2:	f853 2b04 	ldr.w	r2, [r3], #4
 80005c6:	6881      	ldr	r1, [r0, #8]
 80005c8:	9301      	str	r3, [sp, #4]
 80005ca:	f000 f9e9 	bl	80009a0 <_vfiprintf_r>
 80005ce:	b003      	add	sp, #12
 80005d0:	f85d eb04 	ldr.w	lr, [sp], #4
 80005d4:	b004      	add	sp, #16
 80005d6:	4770      	bx	lr
 80005d8:	20000058 	.word	0x20000058

080005dc <__sread>:
 80005dc:	b510      	push	{r4, lr}
 80005de:	460c      	mov	r4, r1
 80005e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005e4:	f000 f868 	bl	80006b8 <_read_r>
 80005e8:	2800      	cmp	r0, #0
 80005ea:	bfab      	itete	ge
 80005ec:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80005ee:	89a3      	ldrhlt	r3, [r4, #12]
 80005f0:	181b      	addge	r3, r3, r0
 80005f2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80005f6:	bfac      	ite	ge
 80005f8:	6563      	strge	r3, [r4, #84]	; 0x54
 80005fa:	81a3      	strhlt	r3, [r4, #12]
 80005fc:	bd10      	pop	{r4, pc}

080005fe <__swrite>:
 80005fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000602:	461f      	mov	r7, r3
 8000604:	898b      	ldrh	r3, [r1, #12]
 8000606:	05db      	lsls	r3, r3, #23
 8000608:	4605      	mov	r5, r0
 800060a:	460c      	mov	r4, r1
 800060c:	4616      	mov	r6, r2
 800060e:	d505      	bpl.n	800061c <__swrite+0x1e>
 8000610:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000614:	2302      	movs	r3, #2
 8000616:	2200      	movs	r2, #0
 8000618:	f000 f83c 	bl	8000694 <_lseek_r>
 800061c:	89a3      	ldrh	r3, [r4, #12]
 800061e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000622:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000626:	81a3      	strh	r3, [r4, #12]
 8000628:	4632      	mov	r2, r6
 800062a:	463b      	mov	r3, r7
 800062c:	4628      	mov	r0, r5
 800062e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000632:	f000 b853 	b.w	80006dc <_write_r>

08000636 <__sseek>:
 8000636:	b510      	push	{r4, lr}
 8000638:	460c      	mov	r4, r1
 800063a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800063e:	f000 f829 	bl	8000694 <_lseek_r>
 8000642:	1c43      	adds	r3, r0, #1
 8000644:	89a3      	ldrh	r3, [r4, #12]
 8000646:	bf15      	itete	ne
 8000648:	6560      	strne	r0, [r4, #84]	; 0x54
 800064a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800064e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000652:	81a3      	strheq	r3, [r4, #12]
 8000654:	bf18      	it	ne
 8000656:	81a3      	strhne	r3, [r4, #12]
 8000658:	bd10      	pop	{r4, pc}

0800065a <__sclose>:
 800065a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800065e:	f000 b809 	b.w	8000674 <_close_r>

08000662 <memset>:
 8000662:	4402      	add	r2, r0
 8000664:	4603      	mov	r3, r0
 8000666:	4293      	cmp	r3, r2
 8000668:	d100      	bne.n	800066c <memset+0xa>
 800066a:	4770      	bx	lr
 800066c:	f803 1b01 	strb.w	r1, [r3], #1
 8000670:	e7f9      	b.n	8000666 <memset+0x4>
	...

08000674 <_close_r>:
 8000674:	b538      	push	{r3, r4, r5, lr}
 8000676:	4d06      	ldr	r5, [pc, #24]	; (8000690 <_close_r+0x1c>)
 8000678:	2300      	movs	r3, #0
 800067a:	4604      	mov	r4, r0
 800067c:	4608      	mov	r0, r1
 800067e:	602b      	str	r3, [r5, #0]
 8000680:	f7ff fe43 	bl	800030a <_close>
 8000684:	1c43      	adds	r3, r0, #1
 8000686:	d102      	bne.n	800068e <_close_r+0x1a>
 8000688:	682b      	ldr	r3, [r5, #0]
 800068a:	b103      	cbz	r3, 800068e <_close_r+0x1a>
 800068c:	6023      	str	r3, [r4, #0]
 800068e:	bd38      	pop	{r3, r4, r5, pc}
 8000690:	200001b8 	.word	0x200001b8

08000694 <_lseek_r>:
 8000694:	b538      	push	{r3, r4, r5, lr}
 8000696:	4d07      	ldr	r5, [pc, #28]	; (80006b4 <_lseek_r+0x20>)
 8000698:	4604      	mov	r4, r0
 800069a:	4608      	mov	r0, r1
 800069c:	4611      	mov	r1, r2
 800069e:	2200      	movs	r2, #0
 80006a0:	602a      	str	r2, [r5, #0]
 80006a2:	461a      	mov	r2, r3
 80006a4:	f7ff fe58 	bl	8000358 <_lseek>
 80006a8:	1c43      	adds	r3, r0, #1
 80006aa:	d102      	bne.n	80006b2 <_lseek_r+0x1e>
 80006ac:	682b      	ldr	r3, [r5, #0]
 80006ae:	b103      	cbz	r3, 80006b2 <_lseek_r+0x1e>
 80006b0:	6023      	str	r3, [r4, #0]
 80006b2:	bd38      	pop	{r3, r4, r5, pc}
 80006b4:	200001b8 	.word	0x200001b8

080006b8 <_read_r>:
 80006b8:	b538      	push	{r3, r4, r5, lr}
 80006ba:	4d07      	ldr	r5, [pc, #28]	; (80006d8 <_read_r+0x20>)
 80006bc:	4604      	mov	r4, r0
 80006be:	4608      	mov	r0, r1
 80006c0:	4611      	mov	r1, r2
 80006c2:	2200      	movs	r2, #0
 80006c4:	602a      	str	r2, [r5, #0]
 80006c6:	461a      	mov	r2, r3
 80006c8:	f7ff fde6 	bl	8000298 <_read>
 80006cc:	1c43      	adds	r3, r0, #1
 80006ce:	d102      	bne.n	80006d6 <_read_r+0x1e>
 80006d0:	682b      	ldr	r3, [r5, #0]
 80006d2:	b103      	cbz	r3, 80006d6 <_read_r+0x1e>
 80006d4:	6023      	str	r3, [r4, #0]
 80006d6:	bd38      	pop	{r3, r4, r5, pc}
 80006d8:	200001b8 	.word	0x200001b8

080006dc <_write_r>:
 80006dc:	b538      	push	{r3, r4, r5, lr}
 80006de:	4d07      	ldr	r5, [pc, #28]	; (80006fc <_write_r+0x20>)
 80006e0:	4604      	mov	r4, r0
 80006e2:	4608      	mov	r0, r1
 80006e4:	4611      	mov	r1, r2
 80006e6:	2200      	movs	r2, #0
 80006e8:	602a      	str	r2, [r5, #0]
 80006ea:	461a      	mov	r2, r3
 80006ec:	f7ff fdf1 	bl	80002d2 <_write>
 80006f0:	1c43      	adds	r3, r0, #1
 80006f2:	d102      	bne.n	80006fa <_write_r+0x1e>
 80006f4:	682b      	ldr	r3, [r5, #0]
 80006f6:	b103      	cbz	r3, 80006fa <_write_r+0x1e>
 80006f8:	6023      	str	r3, [r4, #0]
 80006fa:	bd38      	pop	{r3, r4, r5, pc}
 80006fc:	200001b8 	.word	0x200001b8

08000700 <__errno>:
 8000700:	4b01      	ldr	r3, [pc, #4]	; (8000708 <__errno+0x8>)
 8000702:	6818      	ldr	r0, [r3, #0]
 8000704:	4770      	bx	lr
 8000706:	bf00      	nop
 8000708:	20000058 	.word	0x20000058

0800070c <__libc_init_array>:
 800070c:	b570      	push	{r4, r5, r6, lr}
 800070e:	4d0d      	ldr	r5, [pc, #52]	; (8000744 <__libc_init_array+0x38>)
 8000710:	4c0d      	ldr	r4, [pc, #52]	; (8000748 <__libc_init_array+0x3c>)
 8000712:	1b64      	subs	r4, r4, r5
 8000714:	10a4      	asrs	r4, r4, #2
 8000716:	2600      	movs	r6, #0
 8000718:	42a6      	cmp	r6, r4
 800071a:	d109      	bne.n	8000730 <__libc_init_array+0x24>
 800071c:	4d0b      	ldr	r5, [pc, #44]	; (800074c <__libc_init_array+0x40>)
 800071e:	4c0c      	ldr	r4, [pc, #48]	; (8000750 <__libc_init_array+0x44>)
 8000720:	f000 fdc0 	bl	80012a4 <_init>
 8000724:	1b64      	subs	r4, r4, r5
 8000726:	10a4      	asrs	r4, r4, #2
 8000728:	2600      	movs	r6, #0
 800072a:	42a6      	cmp	r6, r4
 800072c:	d105      	bne.n	800073a <__libc_init_array+0x2e>
 800072e:	bd70      	pop	{r4, r5, r6, pc}
 8000730:	f855 3b04 	ldr.w	r3, [r5], #4
 8000734:	4798      	blx	r3
 8000736:	3601      	adds	r6, #1
 8000738:	e7ee      	b.n	8000718 <__libc_init_array+0xc>
 800073a:	f855 3b04 	ldr.w	r3, [r5], #4
 800073e:	4798      	blx	r3
 8000740:	3601      	adds	r6, #1
 8000742:	e7f2      	b.n	800072a <__libc_init_array+0x1e>
 8000744:	08001318 	.word	0x08001318
 8000748:	08001318 	.word	0x08001318
 800074c:	08001318 	.word	0x08001318
 8000750:	0800131c 	.word	0x0800131c

08000754 <__retarget_lock_init_recursive>:
 8000754:	4770      	bx	lr

08000756 <__retarget_lock_acquire_recursive>:
 8000756:	4770      	bx	lr

08000758 <__retarget_lock_release_recursive>:
 8000758:	4770      	bx	lr
	...

0800075c <_free_r>:
 800075c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800075e:	2900      	cmp	r1, #0
 8000760:	d044      	beq.n	80007ec <_free_r+0x90>
 8000762:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000766:	9001      	str	r0, [sp, #4]
 8000768:	2b00      	cmp	r3, #0
 800076a:	f1a1 0404 	sub.w	r4, r1, #4
 800076e:	bfb8      	it	lt
 8000770:	18e4      	addlt	r4, r4, r3
 8000772:	f000 f8df 	bl	8000934 <__malloc_lock>
 8000776:	4a1e      	ldr	r2, [pc, #120]	; (80007f0 <_free_r+0x94>)
 8000778:	9801      	ldr	r0, [sp, #4]
 800077a:	6813      	ldr	r3, [r2, #0]
 800077c:	b933      	cbnz	r3, 800078c <_free_r+0x30>
 800077e:	6063      	str	r3, [r4, #4]
 8000780:	6014      	str	r4, [r2, #0]
 8000782:	b003      	add	sp, #12
 8000784:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000788:	f000 b8da 	b.w	8000940 <__malloc_unlock>
 800078c:	42a3      	cmp	r3, r4
 800078e:	d908      	bls.n	80007a2 <_free_r+0x46>
 8000790:	6825      	ldr	r5, [r4, #0]
 8000792:	1961      	adds	r1, r4, r5
 8000794:	428b      	cmp	r3, r1
 8000796:	bf01      	itttt	eq
 8000798:	6819      	ldreq	r1, [r3, #0]
 800079a:	685b      	ldreq	r3, [r3, #4]
 800079c:	1949      	addeq	r1, r1, r5
 800079e:	6021      	streq	r1, [r4, #0]
 80007a0:	e7ed      	b.n	800077e <_free_r+0x22>
 80007a2:	461a      	mov	r2, r3
 80007a4:	685b      	ldr	r3, [r3, #4]
 80007a6:	b10b      	cbz	r3, 80007ac <_free_r+0x50>
 80007a8:	42a3      	cmp	r3, r4
 80007aa:	d9fa      	bls.n	80007a2 <_free_r+0x46>
 80007ac:	6811      	ldr	r1, [r2, #0]
 80007ae:	1855      	adds	r5, r2, r1
 80007b0:	42a5      	cmp	r5, r4
 80007b2:	d10b      	bne.n	80007cc <_free_r+0x70>
 80007b4:	6824      	ldr	r4, [r4, #0]
 80007b6:	4421      	add	r1, r4
 80007b8:	1854      	adds	r4, r2, r1
 80007ba:	42a3      	cmp	r3, r4
 80007bc:	6011      	str	r1, [r2, #0]
 80007be:	d1e0      	bne.n	8000782 <_free_r+0x26>
 80007c0:	681c      	ldr	r4, [r3, #0]
 80007c2:	685b      	ldr	r3, [r3, #4]
 80007c4:	6053      	str	r3, [r2, #4]
 80007c6:	440c      	add	r4, r1
 80007c8:	6014      	str	r4, [r2, #0]
 80007ca:	e7da      	b.n	8000782 <_free_r+0x26>
 80007cc:	d902      	bls.n	80007d4 <_free_r+0x78>
 80007ce:	230c      	movs	r3, #12
 80007d0:	6003      	str	r3, [r0, #0]
 80007d2:	e7d6      	b.n	8000782 <_free_r+0x26>
 80007d4:	6825      	ldr	r5, [r4, #0]
 80007d6:	1961      	adds	r1, r4, r5
 80007d8:	428b      	cmp	r3, r1
 80007da:	bf04      	itt	eq
 80007dc:	6819      	ldreq	r1, [r3, #0]
 80007de:	685b      	ldreq	r3, [r3, #4]
 80007e0:	6063      	str	r3, [r4, #4]
 80007e2:	bf04      	itt	eq
 80007e4:	1949      	addeq	r1, r1, r5
 80007e6:	6021      	streq	r1, [r4, #0]
 80007e8:	6054      	str	r4, [r2, #4]
 80007ea:	e7ca      	b.n	8000782 <_free_r+0x26>
 80007ec:	b003      	add	sp, #12
 80007ee:	bd30      	pop	{r4, r5, pc}
 80007f0:	200001c0 	.word	0x200001c0

080007f4 <sbrk_aligned>:
 80007f4:	b570      	push	{r4, r5, r6, lr}
 80007f6:	4e0e      	ldr	r6, [pc, #56]	; (8000830 <sbrk_aligned+0x3c>)
 80007f8:	460c      	mov	r4, r1
 80007fa:	6831      	ldr	r1, [r6, #0]
 80007fc:	4605      	mov	r5, r0
 80007fe:	b911      	cbnz	r1, 8000806 <sbrk_aligned+0x12>
 8000800:	f000 fcbc 	bl	800117c <_sbrk_r>
 8000804:	6030      	str	r0, [r6, #0]
 8000806:	4621      	mov	r1, r4
 8000808:	4628      	mov	r0, r5
 800080a:	f000 fcb7 	bl	800117c <_sbrk_r>
 800080e:	1c43      	adds	r3, r0, #1
 8000810:	d00a      	beq.n	8000828 <sbrk_aligned+0x34>
 8000812:	1cc4      	adds	r4, r0, #3
 8000814:	f024 0403 	bic.w	r4, r4, #3
 8000818:	42a0      	cmp	r0, r4
 800081a:	d007      	beq.n	800082c <sbrk_aligned+0x38>
 800081c:	1a21      	subs	r1, r4, r0
 800081e:	4628      	mov	r0, r5
 8000820:	f000 fcac 	bl	800117c <_sbrk_r>
 8000824:	3001      	adds	r0, #1
 8000826:	d101      	bne.n	800082c <sbrk_aligned+0x38>
 8000828:	f04f 34ff 	mov.w	r4, #4294967295
 800082c:	4620      	mov	r0, r4
 800082e:	bd70      	pop	{r4, r5, r6, pc}
 8000830:	200001c4 	.word	0x200001c4

08000834 <_malloc_r>:
 8000834:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000838:	1ccd      	adds	r5, r1, #3
 800083a:	f025 0503 	bic.w	r5, r5, #3
 800083e:	3508      	adds	r5, #8
 8000840:	2d0c      	cmp	r5, #12
 8000842:	bf38      	it	cc
 8000844:	250c      	movcc	r5, #12
 8000846:	2d00      	cmp	r5, #0
 8000848:	4607      	mov	r7, r0
 800084a:	db01      	blt.n	8000850 <_malloc_r+0x1c>
 800084c:	42a9      	cmp	r1, r5
 800084e:	d905      	bls.n	800085c <_malloc_r+0x28>
 8000850:	230c      	movs	r3, #12
 8000852:	603b      	str	r3, [r7, #0]
 8000854:	2600      	movs	r6, #0
 8000856:	4630      	mov	r0, r6
 8000858:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800085c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000930 <_malloc_r+0xfc>
 8000860:	f000 f868 	bl	8000934 <__malloc_lock>
 8000864:	f8d8 3000 	ldr.w	r3, [r8]
 8000868:	461c      	mov	r4, r3
 800086a:	bb5c      	cbnz	r4, 80008c4 <_malloc_r+0x90>
 800086c:	4629      	mov	r1, r5
 800086e:	4638      	mov	r0, r7
 8000870:	f7ff ffc0 	bl	80007f4 <sbrk_aligned>
 8000874:	1c43      	adds	r3, r0, #1
 8000876:	4604      	mov	r4, r0
 8000878:	d155      	bne.n	8000926 <_malloc_r+0xf2>
 800087a:	f8d8 4000 	ldr.w	r4, [r8]
 800087e:	4626      	mov	r6, r4
 8000880:	2e00      	cmp	r6, #0
 8000882:	d145      	bne.n	8000910 <_malloc_r+0xdc>
 8000884:	2c00      	cmp	r4, #0
 8000886:	d048      	beq.n	800091a <_malloc_r+0xe6>
 8000888:	6823      	ldr	r3, [r4, #0]
 800088a:	4631      	mov	r1, r6
 800088c:	4638      	mov	r0, r7
 800088e:	eb04 0903 	add.w	r9, r4, r3
 8000892:	f000 fc73 	bl	800117c <_sbrk_r>
 8000896:	4581      	cmp	r9, r0
 8000898:	d13f      	bne.n	800091a <_malloc_r+0xe6>
 800089a:	6821      	ldr	r1, [r4, #0]
 800089c:	1a6d      	subs	r5, r5, r1
 800089e:	4629      	mov	r1, r5
 80008a0:	4638      	mov	r0, r7
 80008a2:	f7ff ffa7 	bl	80007f4 <sbrk_aligned>
 80008a6:	3001      	adds	r0, #1
 80008a8:	d037      	beq.n	800091a <_malloc_r+0xe6>
 80008aa:	6823      	ldr	r3, [r4, #0]
 80008ac:	442b      	add	r3, r5
 80008ae:	6023      	str	r3, [r4, #0]
 80008b0:	f8d8 3000 	ldr.w	r3, [r8]
 80008b4:	2b00      	cmp	r3, #0
 80008b6:	d038      	beq.n	800092a <_malloc_r+0xf6>
 80008b8:	685a      	ldr	r2, [r3, #4]
 80008ba:	42a2      	cmp	r2, r4
 80008bc:	d12b      	bne.n	8000916 <_malloc_r+0xe2>
 80008be:	2200      	movs	r2, #0
 80008c0:	605a      	str	r2, [r3, #4]
 80008c2:	e00f      	b.n	80008e4 <_malloc_r+0xb0>
 80008c4:	6822      	ldr	r2, [r4, #0]
 80008c6:	1b52      	subs	r2, r2, r5
 80008c8:	d41f      	bmi.n	800090a <_malloc_r+0xd6>
 80008ca:	2a0b      	cmp	r2, #11
 80008cc:	d917      	bls.n	80008fe <_malloc_r+0xca>
 80008ce:	1961      	adds	r1, r4, r5
 80008d0:	42a3      	cmp	r3, r4
 80008d2:	6025      	str	r5, [r4, #0]
 80008d4:	bf18      	it	ne
 80008d6:	6059      	strne	r1, [r3, #4]
 80008d8:	6863      	ldr	r3, [r4, #4]
 80008da:	bf08      	it	eq
 80008dc:	f8c8 1000 	streq.w	r1, [r8]
 80008e0:	5162      	str	r2, [r4, r5]
 80008e2:	604b      	str	r3, [r1, #4]
 80008e4:	4638      	mov	r0, r7
 80008e6:	f104 060b 	add.w	r6, r4, #11
 80008ea:	f000 f829 	bl	8000940 <__malloc_unlock>
 80008ee:	f026 0607 	bic.w	r6, r6, #7
 80008f2:	1d23      	adds	r3, r4, #4
 80008f4:	1af2      	subs	r2, r6, r3
 80008f6:	d0ae      	beq.n	8000856 <_malloc_r+0x22>
 80008f8:	1b9b      	subs	r3, r3, r6
 80008fa:	50a3      	str	r3, [r4, r2]
 80008fc:	e7ab      	b.n	8000856 <_malloc_r+0x22>
 80008fe:	42a3      	cmp	r3, r4
 8000900:	6862      	ldr	r2, [r4, #4]
 8000902:	d1dd      	bne.n	80008c0 <_malloc_r+0x8c>
 8000904:	f8c8 2000 	str.w	r2, [r8]
 8000908:	e7ec      	b.n	80008e4 <_malloc_r+0xb0>
 800090a:	4623      	mov	r3, r4
 800090c:	6864      	ldr	r4, [r4, #4]
 800090e:	e7ac      	b.n	800086a <_malloc_r+0x36>
 8000910:	4634      	mov	r4, r6
 8000912:	6876      	ldr	r6, [r6, #4]
 8000914:	e7b4      	b.n	8000880 <_malloc_r+0x4c>
 8000916:	4613      	mov	r3, r2
 8000918:	e7cc      	b.n	80008b4 <_malloc_r+0x80>
 800091a:	230c      	movs	r3, #12
 800091c:	603b      	str	r3, [r7, #0]
 800091e:	4638      	mov	r0, r7
 8000920:	f000 f80e 	bl	8000940 <__malloc_unlock>
 8000924:	e797      	b.n	8000856 <_malloc_r+0x22>
 8000926:	6025      	str	r5, [r4, #0]
 8000928:	e7dc      	b.n	80008e4 <_malloc_r+0xb0>
 800092a:	605b      	str	r3, [r3, #4]
 800092c:	deff      	udf	#255	; 0xff
 800092e:	bf00      	nop
 8000930:	200001c0 	.word	0x200001c0

08000934 <__malloc_lock>:
 8000934:	4801      	ldr	r0, [pc, #4]	; (800093c <__malloc_lock+0x8>)
 8000936:	f7ff bf0e 	b.w	8000756 <__retarget_lock_acquire_recursive>
 800093a:	bf00      	nop
 800093c:	200001bc 	.word	0x200001bc

08000940 <__malloc_unlock>:
 8000940:	4801      	ldr	r0, [pc, #4]	; (8000948 <__malloc_unlock+0x8>)
 8000942:	f7ff bf09 	b.w	8000758 <__retarget_lock_release_recursive>
 8000946:	bf00      	nop
 8000948:	200001bc 	.word	0x200001bc

0800094c <__sfputc_r>:
 800094c:	6893      	ldr	r3, [r2, #8]
 800094e:	3b01      	subs	r3, #1
 8000950:	2b00      	cmp	r3, #0
 8000952:	b410      	push	{r4}
 8000954:	6093      	str	r3, [r2, #8]
 8000956:	da08      	bge.n	800096a <__sfputc_r+0x1e>
 8000958:	6994      	ldr	r4, [r2, #24]
 800095a:	42a3      	cmp	r3, r4
 800095c:	db01      	blt.n	8000962 <__sfputc_r+0x16>
 800095e:	290a      	cmp	r1, #10
 8000960:	d103      	bne.n	800096a <__sfputc_r+0x1e>
 8000962:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000966:	f000 bb73 	b.w	8001050 <__swbuf_r>
 800096a:	6813      	ldr	r3, [r2, #0]
 800096c:	1c58      	adds	r0, r3, #1
 800096e:	6010      	str	r0, [r2, #0]
 8000970:	7019      	strb	r1, [r3, #0]
 8000972:	4608      	mov	r0, r1
 8000974:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000978:	4770      	bx	lr

0800097a <__sfputs_r>:
 800097a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800097c:	4606      	mov	r6, r0
 800097e:	460f      	mov	r7, r1
 8000980:	4614      	mov	r4, r2
 8000982:	18d5      	adds	r5, r2, r3
 8000984:	42ac      	cmp	r4, r5
 8000986:	d101      	bne.n	800098c <__sfputs_r+0x12>
 8000988:	2000      	movs	r0, #0
 800098a:	e007      	b.n	800099c <__sfputs_r+0x22>
 800098c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000990:	463a      	mov	r2, r7
 8000992:	4630      	mov	r0, r6
 8000994:	f7ff ffda 	bl	800094c <__sfputc_r>
 8000998:	1c43      	adds	r3, r0, #1
 800099a:	d1f3      	bne.n	8000984 <__sfputs_r+0xa>
 800099c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080009a0 <_vfiprintf_r>:
 80009a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009a4:	460d      	mov	r5, r1
 80009a6:	b09d      	sub	sp, #116	; 0x74
 80009a8:	4614      	mov	r4, r2
 80009aa:	4698      	mov	r8, r3
 80009ac:	4606      	mov	r6, r0
 80009ae:	b118      	cbz	r0, 80009b8 <_vfiprintf_r+0x18>
 80009b0:	6a03      	ldr	r3, [r0, #32]
 80009b2:	b90b      	cbnz	r3, 80009b8 <_vfiprintf_r+0x18>
 80009b4:	f7ff fdca 	bl	800054c <__sinit>
 80009b8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009ba:	07d9      	lsls	r1, r3, #31
 80009bc:	d405      	bmi.n	80009ca <_vfiprintf_r+0x2a>
 80009be:	89ab      	ldrh	r3, [r5, #12]
 80009c0:	059a      	lsls	r2, r3, #22
 80009c2:	d402      	bmi.n	80009ca <_vfiprintf_r+0x2a>
 80009c4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009c6:	f7ff fec6 	bl	8000756 <__retarget_lock_acquire_recursive>
 80009ca:	89ab      	ldrh	r3, [r5, #12]
 80009cc:	071b      	lsls	r3, r3, #28
 80009ce:	d501      	bpl.n	80009d4 <_vfiprintf_r+0x34>
 80009d0:	692b      	ldr	r3, [r5, #16]
 80009d2:	b99b      	cbnz	r3, 80009fc <_vfiprintf_r+0x5c>
 80009d4:	4629      	mov	r1, r5
 80009d6:	4630      	mov	r0, r6
 80009d8:	f000 fb78 	bl	80010cc <__swsetup_r>
 80009dc:	b170      	cbz	r0, 80009fc <_vfiprintf_r+0x5c>
 80009de:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009e0:	07dc      	lsls	r4, r3, #31
 80009e2:	d504      	bpl.n	80009ee <_vfiprintf_r+0x4e>
 80009e4:	f04f 30ff 	mov.w	r0, #4294967295
 80009e8:	b01d      	add	sp, #116	; 0x74
 80009ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80009ee:	89ab      	ldrh	r3, [r5, #12]
 80009f0:	0598      	lsls	r0, r3, #22
 80009f2:	d4f7      	bmi.n	80009e4 <_vfiprintf_r+0x44>
 80009f4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009f6:	f7ff feaf 	bl	8000758 <__retarget_lock_release_recursive>
 80009fa:	e7f3      	b.n	80009e4 <_vfiprintf_r+0x44>
 80009fc:	2300      	movs	r3, #0
 80009fe:	9309      	str	r3, [sp, #36]	; 0x24
 8000a00:	2320      	movs	r3, #32
 8000a02:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a06:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a0a:	2330      	movs	r3, #48	; 0x30
 8000a0c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000bc0 <_vfiprintf_r+0x220>
 8000a10:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000a14:	f04f 0901 	mov.w	r9, #1
 8000a18:	4623      	mov	r3, r4
 8000a1a:	469a      	mov	sl, r3
 8000a1c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a20:	b10a      	cbz	r2, 8000a26 <_vfiprintf_r+0x86>
 8000a22:	2a25      	cmp	r2, #37	; 0x25
 8000a24:	d1f9      	bne.n	8000a1a <_vfiprintf_r+0x7a>
 8000a26:	ebba 0b04 	subs.w	fp, sl, r4
 8000a2a:	d00b      	beq.n	8000a44 <_vfiprintf_r+0xa4>
 8000a2c:	465b      	mov	r3, fp
 8000a2e:	4622      	mov	r2, r4
 8000a30:	4629      	mov	r1, r5
 8000a32:	4630      	mov	r0, r6
 8000a34:	f7ff ffa1 	bl	800097a <__sfputs_r>
 8000a38:	3001      	adds	r0, #1
 8000a3a:	f000 80a9 	beq.w	8000b90 <_vfiprintf_r+0x1f0>
 8000a3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000a40:	445a      	add	r2, fp
 8000a42:	9209      	str	r2, [sp, #36]	; 0x24
 8000a44:	f89a 3000 	ldrb.w	r3, [sl]
 8000a48:	2b00      	cmp	r3, #0
 8000a4a:	f000 80a1 	beq.w	8000b90 <_vfiprintf_r+0x1f0>
 8000a4e:	2300      	movs	r3, #0
 8000a50:	f04f 32ff 	mov.w	r2, #4294967295
 8000a54:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a58:	f10a 0a01 	add.w	sl, sl, #1
 8000a5c:	9304      	str	r3, [sp, #16]
 8000a5e:	9307      	str	r3, [sp, #28]
 8000a60:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a64:	931a      	str	r3, [sp, #104]	; 0x68
 8000a66:	4654      	mov	r4, sl
 8000a68:	2205      	movs	r2, #5
 8000a6a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a6e:	4854      	ldr	r0, [pc, #336]	; (8000bc0 <_vfiprintf_r+0x220>)
 8000a70:	f7ff fbae 	bl	80001d0 <memchr>
 8000a74:	9a04      	ldr	r2, [sp, #16]
 8000a76:	b9d8      	cbnz	r0, 8000ab0 <_vfiprintf_r+0x110>
 8000a78:	06d1      	lsls	r1, r2, #27
 8000a7a:	bf44      	itt	mi
 8000a7c:	2320      	movmi	r3, #32
 8000a7e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a82:	0713      	lsls	r3, r2, #28
 8000a84:	bf44      	itt	mi
 8000a86:	232b      	movmi	r3, #43	; 0x2b
 8000a88:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a8c:	f89a 3000 	ldrb.w	r3, [sl]
 8000a90:	2b2a      	cmp	r3, #42	; 0x2a
 8000a92:	d015      	beq.n	8000ac0 <_vfiprintf_r+0x120>
 8000a94:	9a07      	ldr	r2, [sp, #28]
 8000a96:	4654      	mov	r4, sl
 8000a98:	2000      	movs	r0, #0
 8000a9a:	f04f 0c0a 	mov.w	ip, #10
 8000a9e:	4621      	mov	r1, r4
 8000aa0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000aa4:	3b30      	subs	r3, #48	; 0x30
 8000aa6:	2b09      	cmp	r3, #9
 8000aa8:	d94d      	bls.n	8000b46 <_vfiprintf_r+0x1a6>
 8000aaa:	b1b0      	cbz	r0, 8000ada <_vfiprintf_r+0x13a>
 8000aac:	9207      	str	r2, [sp, #28]
 8000aae:	e014      	b.n	8000ada <_vfiprintf_r+0x13a>
 8000ab0:	eba0 0308 	sub.w	r3, r0, r8
 8000ab4:	fa09 f303 	lsl.w	r3, r9, r3
 8000ab8:	4313      	orrs	r3, r2
 8000aba:	9304      	str	r3, [sp, #16]
 8000abc:	46a2      	mov	sl, r4
 8000abe:	e7d2      	b.n	8000a66 <_vfiprintf_r+0xc6>
 8000ac0:	9b03      	ldr	r3, [sp, #12]
 8000ac2:	1d19      	adds	r1, r3, #4
 8000ac4:	681b      	ldr	r3, [r3, #0]
 8000ac6:	9103      	str	r1, [sp, #12]
 8000ac8:	2b00      	cmp	r3, #0
 8000aca:	bfbb      	ittet	lt
 8000acc:	425b      	neglt	r3, r3
 8000ace:	f042 0202 	orrlt.w	r2, r2, #2
 8000ad2:	9307      	strge	r3, [sp, #28]
 8000ad4:	9307      	strlt	r3, [sp, #28]
 8000ad6:	bfb8      	it	lt
 8000ad8:	9204      	strlt	r2, [sp, #16]
 8000ada:	7823      	ldrb	r3, [r4, #0]
 8000adc:	2b2e      	cmp	r3, #46	; 0x2e
 8000ade:	d10c      	bne.n	8000afa <_vfiprintf_r+0x15a>
 8000ae0:	7863      	ldrb	r3, [r4, #1]
 8000ae2:	2b2a      	cmp	r3, #42	; 0x2a
 8000ae4:	d134      	bne.n	8000b50 <_vfiprintf_r+0x1b0>
 8000ae6:	9b03      	ldr	r3, [sp, #12]
 8000ae8:	1d1a      	adds	r2, r3, #4
 8000aea:	681b      	ldr	r3, [r3, #0]
 8000aec:	9203      	str	r2, [sp, #12]
 8000aee:	2b00      	cmp	r3, #0
 8000af0:	bfb8      	it	lt
 8000af2:	f04f 33ff 	movlt.w	r3, #4294967295
 8000af6:	3402      	adds	r4, #2
 8000af8:	9305      	str	r3, [sp, #20]
 8000afa:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000bd0 <_vfiprintf_r+0x230>
 8000afe:	7821      	ldrb	r1, [r4, #0]
 8000b00:	2203      	movs	r2, #3
 8000b02:	4650      	mov	r0, sl
 8000b04:	f7ff fb64 	bl	80001d0 <memchr>
 8000b08:	b138      	cbz	r0, 8000b1a <_vfiprintf_r+0x17a>
 8000b0a:	9b04      	ldr	r3, [sp, #16]
 8000b0c:	eba0 000a 	sub.w	r0, r0, sl
 8000b10:	2240      	movs	r2, #64	; 0x40
 8000b12:	4082      	lsls	r2, r0
 8000b14:	4313      	orrs	r3, r2
 8000b16:	3401      	adds	r4, #1
 8000b18:	9304      	str	r3, [sp, #16]
 8000b1a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b1e:	4829      	ldr	r0, [pc, #164]	; (8000bc4 <_vfiprintf_r+0x224>)
 8000b20:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b24:	2206      	movs	r2, #6
 8000b26:	f7ff fb53 	bl	80001d0 <memchr>
 8000b2a:	2800      	cmp	r0, #0
 8000b2c:	d03f      	beq.n	8000bae <_vfiprintf_r+0x20e>
 8000b2e:	4b26      	ldr	r3, [pc, #152]	; (8000bc8 <_vfiprintf_r+0x228>)
 8000b30:	bb1b      	cbnz	r3, 8000b7a <_vfiprintf_r+0x1da>
 8000b32:	9b03      	ldr	r3, [sp, #12]
 8000b34:	3307      	adds	r3, #7
 8000b36:	f023 0307 	bic.w	r3, r3, #7
 8000b3a:	3308      	adds	r3, #8
 8000b3c:	9303      	str	r3, [sp, #12]
 8000b3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b40:	443b      	add	r3, r7
 8000b42:	9309      	str	r3, [sp, #36]	; 0x24
 8000b44:	e768      	b.n	8000a18 <_vfiprintf_r+0x78>
 8000b46:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b4a:	460c      	mov	r4, r1
 8000b4c:	2001      	movs	r0, #1
 8000b4e:	e7a6      	b.n	8000a9e <_vfiprintf_r+0xfe>
 8000b50:	2300      	movs	r3, #0
 8000b52:	3401      	adds	r4, #1
 8000b54:	9305      	str	r3, [sp, #20]
 8000b56:	4619      	mov	r1, r3
 8000b58:	f04f 0c0a 	mov.w	ip, #10
 8000b5c:	4620      	mov	r0, r4
 8000b5e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b62:	3a30      	subs	r2, #48	; 0x30
 8000b64:	2a09      	cmp	r2, #9
 8000b66:	d903      	bls.n	8000b70 <_vfiprintf_r+0x1d0>
 8000b68:	2b00      	cmp	r3, #0
 8000b6a:	d0c6      	beq.n	8000afa <_vfiprintf_r+0x15a>
 8000b6c:	9105      	str	r1, [sp, #20]
 8000b6e:	e7c4      	b.n	8000afa <_vfiprintf_r+0x15a>
 8000b70:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b74:	4604      	mov	r4, r0
 8000b76:	2301      	movs	r3, #1
 8000b78:	e7f0      	b.n	8000b5c <_vfiprintf_r+0x1bc>
 8000b7a:	ab03      	add	r3, sp, #12
 8000b7c:	9300      	str	r3, [sp, #0]
 8000b7e:	462a      	mov	r2, r5
 8000b80:	4b12      	ldr	r3, [pc, #72]	; (8000bcc <_vfiprintf_r+0x22c>)
 8000b82:	a904      	add	r1, sp, #16
 8000b84:	4630      	mov	r0, r6
 8000b86:	f3af 8000 	nop.w
 8000b8a:	4607      	mov	r7, r0
 8000b8c:	1c78      	adds	r0, r7, #1
 8000b8e:	d1d6      	bne.n	8000b3e <_vfiprintf_r+0x19e>
 8000b90:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b92:	07d9      	lsls	r1, r3, #31
 8000b94:	d405      	bmi.n	8000ba2 <_vfiprintf_r+0x202>
 8000b96:	89ab      	ldrh	r3, [r5, #12]
 8000b98:	059a      	lsls	r2, r3, #22
 8000b9a:	d402      	bmi.n	8000ba2 <_vfiprintf_r+0x202>
 8000b9c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b9e:	f7ff fddb 	bl	8000758 <__retarget_lock_release_recursive>
 8000ba2:	89ab      	ldrh	r3, [r5, #12]
 8000ba4:	065b      	lsls	r3, r3, #25
 8000ba6:	f53f af1d 	bmi.w	80009e4 <_vfiprintf_r+0x44>
 8000baa:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000bac:	e71c      	b.n	80009e8 <_vfiprintf_r+0x48>
 8000bae:	ab03      	add	r3, sp, #12
 8000bb0:	9300      	str	r3, [sp, #0]
 8000bb2:	462a      	mov	r2, r5
 8000bb4:	4b05      	ldr	r3, [pc, #20]	; (8000bcc <_vfiprintf_r+0x22c>)
 8000bb6:	a904      	add	r1, sp, #16
 8000bb8:	4630      	mov	r0, r6
 8000bba:	f000 f879 	bl	8000cb0 <_printf_i>
 8000bbe:	e7e4      	b.n	8000b8a <_vfiprintf_r+0x1ea>
 8000bc0:	080012e2 	.word	0x080012e2
 8000bc4:	080012ec 	.word	0x080012ec
 8000bc8:	00000000 	.word	0x00000000
 8000bcc:	0800097b 	.word	0x0800097b
 8000bd0:	080012e8 	.word	0x080012e8

08000bd4 <_printf_common>:
 8000bd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bd8:	4616      	mov	r6, r2
 8000bda:	4699      	mov	r9, r3
 8000bdc:	688a      	ldr	r2, [r1, #8]
 8000bde:	690b      	ldr	r3, [r1, #16]
 8000be0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000be4:	4293      	cmp	r3, r2
 8000be6:	bfb8      	it	lt
 8000be8:	4613      	movlt	r3, r2
 8000bea:	6033      	str	r3, [r6, #0]
 8000bec:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000bf0:	4607      	mov	r7, r0
 8000bf2:	460c      	mov	r4, r1
 8000bf4:	b10a      	cbz	r2, 8000bfa <_printf_common+0x26>
 8000bf6:	3301      	adds	r3, #1
 8000bf8:	6033      	str	r3, [r6, #0]
 8000bfa:	6823      	ldr	r3, [r4, #0]
 8000bfc:	0699      	lsls	r1, r3, #26
 8000bfe:	bf42      	ittt	mi
 8000c00:	6833      	ldrmi	r3, [r6, #0]
 8000c02:	3302      	addmi	r3, #2
 8000c04:	6033      	strmi	r3, [r6, #0]
 8000c06:	6825      	ldr	r5, [r4, #0]
 8000c08:	f015 0506 	ands.w	r5, r5, #6
 8000c0c:	d106      	bne.n	8000c1c <_printf_common+0x48>
 8000c0e:	f104 0a19 	add.w	sl, r4, #25
 8000c12:	68e3      	ldr	r3, [r4, #12]
 8000c14:	6832      	ldr	r2, [r6, #0]
 8000c16:	1a9b      	subs	r3, r3, r2
 8000c18:	42ab      	cmp	r3, r5
 8000c1a:	dc26      	bgt.n	8000c6a <_printf_common+0x96>
 8000c1c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000c20:	1e13      	subs	r3, r2, #0
 8000c22:	6822      	ldr	r2, [r4, #0]
 8000c24:	bf18      	it	ne
 8000c26:	2301      	movne	r3, #1
 8000c28:	0692      	lsls	r2, r2, #26
 8000c2a:	d42b      	bmi.n	8000c84 <_printf_common+0xb0>
 8000c2c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c30:	4649      	mov	r1, r9
 8000c32:	4638      	mov	r0, r7
 8000c34:	47c0      	blx	r8
 8000c36:	3001      	adds	r0, #1
 8000c38:	d01e      	beq.n	8000c78 <_printf_common+0xa4>
 8000c3a:	6823      	ldr	r3, [r4, #0]
 8000c3c:	6922      	ldr	r2, [r4, #16]
 8000c3e:	f003 0306 	and.w	r3, r3, #6
 8000c42:	2b04      	cmp	r3, #4
 8000c44:	bf02      	ittt	eq
 8000c46:	68e5      	ldreq	r5, [r4, #12]
 8000c48:	6833      	ldreq	r3, [r6, #0]
 8000c4a:	1aed      	subeq	r5, r5, r3
 8000c4c:	68a3      	ldr	r3, [r4, #8]
 8000c4e:	bf0c      	ite	eq
 8000c50:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c54:	2500      	movne	r5, #0
 8000c56:	4293      	cmp	r3, r2
 8000c58:	bfc4      	itt	gt
 8000c5a:	1a9b      	subgt	r3, r3, r2
 8000c5c:	18ed      	addgt	r5, r5, r3
 8000c5e:	2600      	movs	r6, #0
 8000c60:	341a      	adds	r4, #26
 8000c62:	42b5      	cmp	r5, r6
 8000c64:	d11a      	bne.n	8000c9c <_printf_common+0xc8>
 8000c66:	2000      	movs	r0, #0
 8000c68:	e008      	b.n	8000c7c <_printf_common+0xa8>
 8000c6a:	2301      	movs	r3, #1
 8000c6c:	4652      	mov	r2, sl
 8000c6e:	4649      	mov	r1, r9
 8000c70:	4638      	mov	r0, r7
 8000c72:	47c0      	blx	r8
 8000c74:	3001      	adds	r0, #1
 8000c76:	d103      	bne.n	8000c80 <_printf_common+0xac>
 8000c78:	f04f 30ff 	mov.w	r0, #4294967295
 8000c7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c80:	3501      	adds	r5, #1
 8000c82:	e7c6      	b.n	8000c12 <_printf_common+0x3e>
 8000c84:	18e1      	adds	r1, r4, r3
 8000c86:	1c5a      	adds	r2, r3, #1
 8000c88:	2030      	movs	r0, #48	; 0x30
 8000c8a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c8e:	4422      	add	r2, r4
 8000c90:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c94:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c98:	3302      	adds	r3, #2
 8000c9a:	e7c7      	b.n	8000c2c <_printf_common+0x58>
 8000c9c:	2301      	movs	r3, #1
 8000c9e:	4622      	mov	r2, r4
 8000ca0:	4649      	mov	r1, r9
 8000ca2:	4638      	mov	r0, r7
 8000ca4:	47c0      	blx	r8
 8000ca6:	3001      	adds	r0, #1
 8000ca8:	d0e6      	beq.n	8000c78 <_printf_common+0xa4>
 8000caa:	3601      	adds	r6, #1
 8000cac:	e7d9      	b.n	8000c62 <_printf_common+0x8e>
	...

08000cb0 <_printf_i>:
 8000cb0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000cb4:	7e0f      	ldrb	r7, [r1, #24]
 8000cb6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000cb8:	2f78      	cmp	r7, #120	; 0x78
 8000cba:	4691      	mov	r9, r2
 8000cbc:	4680      	mov	r8, r0
 8000cbe:	460c      	mov	r4, r1
 8000cc0:	469a      	mov	sl, r3
 8000cc2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000cc6:	d807      	bhi.n	8000cd8 <_printf_i+0x28>
 8000cc8:	2f62      	cmp	r7, #98	; 0x62
 8000cca:	d80a      	bhi.n	8000ce2 <_printf_i+0x32>
 8000ccc:	2f00      	cmp	r7, #0
 8000cce:	f000 80d4 	beq.w	8000e7a <_printf_i+0x1ca>
 8000cd2:	2f58      	cmp	r7, #88	; 0x58
 8000cd4:	f000 80c0 	beq.w	8000e58 <_printf_i+0x1a8>
 8000cd8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000cdc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000ce0:	e03a      	b.n	8000d58 <_printf_i+0xa8>
 8000ce2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000ce6:	2b15      	cmp	r3, #21
 8000ce8:	d8f6      	bhi.n	8000cd8 <_printf_i+0x28>
 8000cea:	a101      	add	r1, pc, #4	; (adr r1, 8000cf0 <_printf_i+0x40>)
 8000cec:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000cf0:	08000d49 	.word	0x08000d49
 8000cf4:	08000d5d 	.word	0x08000d5d
 8000cf8:	08000cd9 	.word	0x08000cd9
 8000cfc:	08000cd9 	.word	0x08000cd9
 8000d00:	08000cd9 	.word	0x08000cd9
 8000d04:	08000cd9 	.word	0x08000cd9
 8000d08:	08000d5d 	.word	0x08000d5d
 8000d0c:	08000cd9 	.word	0x08000cd9
 8000d10:	08000cd9 	.word	0x08000cd9
 8000d14:	08000cd9 	.word	0x08000cd9
 8000d18:	08000cd9 	.word	0x08000cd9
 8000d1c:	08000e61 	.word	0x08000e61
 8000d20:	08000d89 	.word	0x08000d89
 8000d24:	08000e1b 	.word	0x08000e1b
 8000d28:	08000cd9 	.word	0x08000cd9
 8000d2c:	08000cd9 	.word	0x08000cd9
 8000d30:	08000e83 	.word	0x08000e83
 8000d34:	08000cd9 	.word	0x08000cd9
 8000d38:	08000d89 	.word	0x08000d89
 8000d3c:	08000cd9 	.word	0x08000cd9
 8000d40:	08000cd9 	.word	0x08000cd9
 8000d44:	08000e23 	.word	0x08000e23
 8000d48:	682b      	ldr	r3, [r5, #0]
 8000d4a:	1d1a      	adds	r2, r3, #4
 8000d4c:	681b      	ldr	r3, [r3, #0]
 8000d4e:	602a      	str	r2, [r5, #0]
 8000d50:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d54:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d58:	2301      	movs	r3, #1
 8000d5a:	e09f      	b.n	8000e9c <_printf_i+0x1ec>
 8000d5c:	6820      	ldr	r0, [r4, #0]
 8000d5e:	682b      	ldr	r3, [r5, #0]
 8000d60:	0607      	lsls	r7, r0, #24
 8000d62:	f103 0104 	add.w	r1, r3, #4
 8000d66:	6029      	str	r1, [r5, #0]
 8000d68:	d501      	bpl.n	8000d6e <_printf_i+0xbe>
 8000d6a:	681e      	ldr	r6, [r3, #0]
 8000d6c:	e003      	b.n	8000d76 <_printf_i+0xc6>
 8000d6e:	0646      	lsls	r6, r0, #25
 8000d70:	d5fb      	bpl.n	8000d6a <_printf_i+0xba>
 8000d72:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000d76:	2e00      	cmp	r6, #0
 8000d78:	da03      	bge.n	8000d82 <_printf_i+0xd2>
 8000d7a:	232d      	movs	r3, #45	; 0x2d
 8000d7c:	4276      	negs	r6, r6
 8000d7e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d82:	485a      	ldr	r0, [pc, #360]	; (8000eec <_printf_i+0x23c>)
 8000d84:	230a      	movs	r3, #10
 8000d86:	e012      	b.n	8000dae <_printf_i+0xfe>
 8000d88:	682b      	ldr	r3, [r5, #0]
 8000d8a:	6820      	ldr	r0, [r4, #0]
 8000d8c:	1d19      	adds	r1, r3, #4
 8000d8e:	6029      	str	r1, [r5, #0]
 8000d90:	0605      	lsls	r5, r0, #24
 8000d92:	d501      	bpl.n	8000d98 <_printf_i+0xe8>
 8000d94:	681e      	ldr	r6, [r3, #0]
 8000d96:	e002      	b.n	8000d9e <_printf_i+0xee>
 8000d98:	0641      	lsls	r1, r0, #25
 8000d9a:	d5fb      	bpl.n	8000d94 <_printf_i+0xe4>
 8000d9c:	881e      	ldrh	r6, [r3, #0]
 8000d9e:	4853      	ldr	r0, [pc, #332]	; (8000eec <_printf_i+0x23c>)
 8000da0:	2f6f      	cmp	r7, #111	; 0x6f
 8000da2:	bf0c      	ite	eq
 8000da4:	2308      	moveq	r3, #8
 8000da6:	230a      	movne	r3, #10
 8000da8:	2100      	movs	r1, #0
 8000daa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000dae:	6865      	ldr	r5, [r4, #4]
 8000db0:	60a5      	str	r5, [r4, #8]
 8000db2:	2d00      	cmp	r5, #0
 8000db4:	bfa2      	ittt	ge
 8000db6:	6821      	ldrge	r1, [r4, #0]
 8000db8:	f021 0104 	bicge.w	r1, r1, #4
 8000dbc:	6021      	strge	r1, [r4, #0]
 8000dbe:	b90e      	cbnz	r6, 8000dc4 <_printf_i+0x114>
 8000dc0:	2d00      	cmp	r5, #0
 8000dc2:	d04b      	beq.n	8000e5c <_printf_i+0x1ac>
 8000dc4:	4615      	mov	r5, r2
 8000dc6:	fbb6 f1f3 	udiv	r1, r6, r3
 8000dca:	fb03 6711 	mls	r7, r3, r1, r6
 8000dce:	5dc7      	ldrb	r7, [r0, r7]
 8000dd0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000dd4:	4637      	mov	r7, r6
 8000dd6:	42bb      	cmp	r3, r7
 8000dd8:	460e      	mov	r6, r1
 8000dda:	d9f4      	bls.n	8000dc6 <_printf_i+0x116>
 8000ddc:	2b08      	cmp	r3, #8
 8000dde:	d10b      	bne.n	8000df8 <_printf_i+0x148>
 8000de0:	6823      	ldr	r3, [r4, #0]
 8000de2:	07de      	lsls	r6, r3, #31
 8000de4:	d508      	bpl.n	8000df8 <_printf_i+0x148>
 8000de6:	6923      	ldr	r3, [r4, #16]
 8000de8:	6861      	ldr	r1, [r4, #4]
 8000dea:	4299      	cmp	r1, r3
 8000dec:	bfde      	ittt	le
 8000dee:	2330      	movle	r3, #48	; 0x30
 8000df0:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000df4:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000df8:	1b52      	subs	r2, r2, r5
 8000dfa:	6122      	str	r2, [r4, #16]
 8000dfc:	f8cd a000 	str.w	sl, [sp]
 8000e00:	464b      	mov	r3, r9
 8000e02:	aa03      	add	r2, sp, #12
 8000e04:	4621      	mov	r1, r4
 8000e06:	4640      	mov	r0, r8
 8000e08:	f7ff fee4 	bl	8000bd4 <_printf_common>
 8000e0c:	3001      	adds	r0, #1
 8000e0e:	d14a      	bne.n	8000ea6 <_printf_i+0x1f6>
 8000e10:	f04f 30ff 	mov.w	r0, #4294967295
 8000e14:	b004      	add	sp, #16
 8000e16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e1a:	6823      	ldr	r3, [r4, #0]
 8000e1c:	f043 0320 	orr.w	r3, r3, #32
 8000e20:	6023      	str	r3, [r4, #0]
 8000e22:	4833      	ldr	r0, [pc, #204]	; (8000ef0 <_printf_i+0x240>)
 8000e24:	2778      	movs	r7, #120	; 0x78
 8000e26:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000e2a:	6823      	ldr	r3, [r4, #0]
 8000e2c:	6829      	ldr	r1, [r5, #0]
 8000e2e:	061f      	lsls	r7, r3, #24
 8000e30:	f851 6b04 	ldr.w	r6, [r1], #4
 8000e34:	d402      	bmi.n	8000e3c <_printf_i+0x18c>
 8000e36:	065f      	lsls	r7, r3, #25
 8000e38:	bf48      	it	mi
 8000e3a:	b2b6      	uxthmi	r6, r6
 8000e3c:	07df      	lsls	r7, r3, #31
 8000e3e:	bf48      	it	mi
 8000e40:	f043 0320 	orrmi.w	r3, r3, #32
 8000e44:	6029      	str	r1, [r5, #0]
 8000e46:	bf48      	it	mi
 8000e48:	6023      	strmi	r3, [r4, #0]
 8000e4a:	b91e      	cbnz	r6, 8000e54 <_printf_i+0x1a4>
 8000e4c:	6823      	ldr	r3, [r4, #0]
 8000e4e:	f023 0320 	bic.w	r3, r3, #32
 8000e52:	6023      	str	r3, [r4, #0]
 8000e54:	2310      	movs	r3, #16
 8000e56:	e7a7      	b.n	8000da8 <_printf_i+0xf8>
 8000e58:	4824      	ldr	r0, [pc, #144]	; (8000eec <_printf_i+0x23c>)
 8000e5a:	e7e4      	b.n	8000e26 <_printf_i+0x176>
 8000e5c:	4615      	mov	r5, r2
 8000e5e:	e7bd      	b.n	8000ddc <_printf_i+0x12c>
 8000e60:	682b      	ldr	r3, [r5, #0]
 8000e62:	6826      	ldr	r6, [r4, #0]
 8000e64:	6961      	ldr	r1, [r4, #20]
 8000e66:	1d18      	adds	r0, r3, #4
 8000e68:	6028      	str	r0, [r5, #0]
 8000e6a:	0635      	lsls	r5, r6, #24
 8000e6c:	681b      	ldr	r3, [r3, #0]
 8000e6e:	d501      	bpl.n	8000e74 <_printf_i+0x1c4>
 8000e70:	6019      	str	r1, [r3, #0]
 8000e72:	e002      	b.n	8000e7a <_printf_i+0x1ca>
 8000e74:	0670      	lsls	r0, r6, #25
 8000e76:	d5fb      	bpl.n	8000e70 <_printf_i+0x1c0>
 8000e78:	8019      	strh	r1, [r3, #0]
 8000e7a:	2300      	movs	r3, #0
 8000e7c:	6123      	str	r3, [r4, #16]
 8000e7e:	4615      	mov	r5, r2
 8000e80:	e7bc      	b.n	8000dfc <_printf_i+0x14c>
 8000e82:	682b      	ldr	r3, [r5, #0]
 8000e84:	1d1a      	adds	r2, r3, #4
 8000e86:	602a      	str	r2, [r5, #0]
 8000e88:	681d      	ldr	r5, [r3, #0]
 8000e8a:	6862      	ldr	r2, [r4, #4]
 8000e8c:	2100      	movs	r1, #0
 8000e8e:	4628      	mov	r0, r5
 8000e90:	f7ff f99e 	bl	80001d0 <memchr>
 8000e94:	b108      	cbz	r0, 8000e9a <_printf_i+0x1ea>
 8000e96:	1b40      	subs	r0, r0, r5
 8000e98:	6060      	str	r0, [r4, #4]
 8000e9a:	6863      	ldr	r3, [r4, #4]
 8000e9c:	6123      	str	r3, [r4, #16]
 8000e9e:	2300      	movs	r3, #0
 8000ea0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ea4:	e7aa      	b.n	8000dfc <_printf_i+0x14c>
 8000ea6:	6923      	ldr	r3, [r4, #16]
 8000ea8:	462a      	mov	r2, r5
 8000eaa:	4649      	mov	r1, r9
 8000eac:	4640      	mov	r0, r8
 8000eae:	47d0      	blx	sl
 8000eb0:	3001      	adds	r0, #1
 8000eb2:	d0ad      	beq.n	8000e10 <_printf_i+0x160>
 8000eb4:	6823      	ldr	r3, [r4, #0]
 8000eb6:	079b      	lsls	r3, r3, #30
 8000eb8:	d413      	bmi.n	8000ee2 <_printf_i+0x232>
 8000eba:	68e0      	ldr	r0, [r4, #12]
 8000ebc:	9b03      	ldr	r3, [sp, #12]
 8000ebe:	4298      	cmp	r0, r3
 8000ec0:	bfb8      	it	lt
 8000ec2:	4618      	movlt	r0, r3
 8000ec4:	e7a6      	b.n	8000e14 <_printf_i+0x164>
 8000ec6:	2301      	movs	r3, #1
 8000ec8:	4632      	mov	r2, r6
 8000eca:	4649      	mov	r1, r9
 8000ecc:	4640      	mov	r0, r8
 8000ece:	47d0      	blx	sl
 8000ed0:	3001      	adds	r0, #1
 8000ed2:	d09d      	beq.n	8000e10 <_printf_i+0x160>
 8000ed4:	3501      	adds	r5, #1
 8000ed6:	68e3      	ldr	r3, [r4, #12]
 8000ed8:	9903      	ldr	r1, [sp, #12]
 8000eda:	1a5b      	subs	r3, r3, r1
 8000edc:	42ab      	cmp	r3, r5
 8000ede:	dcf2      	bgt.n	8000ec6 <_printf_i+0x216>
 8000ee0:	e7eb      	b.n	8000eba <_printf_i+0x20a>
 8000ee2:	2500      	movs	r5, #0
 8000ee4:	f104 0619 	add.w	r6, r4, #25
 8000ee8:	e7f5      	b.n	8000ed6 <_printf_i+0x226>
 8000eea:	bf00      	nop
 8000eec:	080012f3 	.word	0x080012f3
 8000ef0:	08001304 	.word	0x08001304

08000ef4 <__sflush_r>:
 8000ef4:	898a      	ldrh	r2, [r1, #12]
 8000ef6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000efa:	4605      	mov	r5, r0
 8000efc:	0710      	lsls	r0, r2, #28
 8000efe:	460c      	mov	r4, r1
 8000f00:	d458      	bmi.n	8000fb4 <__sflush_r+0xc0>
 8000f02:	684b      	ldr	r3, [r1, #4]
 8000f04:	2b00      	cmp	r3, #0
 8000f06:	dc05      	bgt.n	8000f14 <__sflush_r+0x20>
 8000f08:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000f0a:	2b00      	cmp	r3, #0
 8000f0c:	dc02      	bgt.n	8000f14 <__sflush_r+0x20>
 8000f0e:	2000      	movs	r0, #0
 8000f10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f14:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f16:	2e00      	cmp	r6, #0
 8000f18:	d0f9      	beq.n	8000f0e <__sflush_r+0x1a>
 8000f1a:	2300      	movs	r3, #0
 8000f1c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000f20:	682f      	ldr	r7, [r5, #0]
 8000f22:	6a21      	ldr	r1, [r4, #32]
 8000f24:	602b      	str	r3, [r5, #0]
 8000f26:	d032      	beq.n	8000f8e <__sflush_r+0x9a>
 8000f28:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000f2a:	89a3      	ldrh	r3, [r4, #12]
 8000f2c:	075a      	lsls	r2, r3, #29
 8000f2e:	d505      	bpl.n	8000f3c <__sflush_r+0x48>
 8000f30:	6863      	ldr	r3, [r4, #4]
 8000f32:	1ac0      	subs	r0, r0, r3
 8000f34:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000f36:	b10b      	cbz	r3, 8000f3c <__sflush_r+0x48>
 8000f38:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000f3a:	1ac0      	subs	r0, r0, r3
 8000f3c:	2300      	movs	r3, #0
 8000f3e:	4602      	mov	r2, r0
 8000f40:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f42:	6a21      	ldr	r1, [r4, #32]
 8000f44:	4628      	mov	r0, r5
 8000f46:	47b0      	blx	r6
 8000f48:	1c43      	adds	r3, r0, #1
 8000f4a:	89a3      	ldrh	r3, [r4, #12]
 8000f4c:	d106      	bne.n	8000f5c <__sflush_r+0x68>
 8000f4e:	6829      	ldr	r1, [r5, #0]
 8000f50:	291d      	cmp	r1, #29
 8000f52:	d82b      	bhi.n	8000fac <__sflush_r+0xb8>
 8000f54:	4a29      	ldr	r2, [pc, #164]	; (8000ffc <__sflush_r+0x108>)
 8000f56:	410a      	asrs	r2, r1
 8000f58:	07d6      	lsls	r6, r2, #31
 8000f5a:	d427      	bmi.n	8000fac <__sflush_r+0xb8>
 8000f5c:	2200      	movs	r2, #0
 8000f5e:	6062      	str	r2, [r4, #4]
 8000f60:	04d9      	lsls	r1, r3, #19
 8000f62:	6922      	ldr	r2, [r4, #16]
 8000f64:	6022      	str	r2, [r4, #0]
 8000f66:	d504      	bpl.n	8000f72 <__sflush_r+0x7e>
 8000f68:	1c42      	adds	r2, r0, #1
 8000f6a:	d101      	bne.n	8000f70 <__sflush_r+0x7c>
 8000f6c:	682b      	ldr	r3, [r5, #0]
 8000f6e:	b903      	cbnz	r3, 8000f72 <__sflush_r+0x7e>
 8000f70:	6560      	str	r0, [r4, #84]	; 0x54
 8000f72:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f74:	602f      	str	r7, [r5, #0]
 8000f76:	2900      	cmp	r1, #0
 8000f78:	d0c9      	beq.n	8000f0e <__sflush_r+0x1a>
 8000f7a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f7e:	4299      	cmp	r1, r3
 8000f80:	d002      	beq.n	8000f88 <__sflush_r+0x94>
 8000f82:	4628      	mov	r0, r5
 8000f84:	f7ff fbea 	bl	800075c <_free_r>
 8000f88:	2000      	movs	r0, #0
 8000f8a:	6360      	str	r0, [r4, #52]	; 0x34
 8000f8c:	e7c0      	b.n	8000f10 <__sflush_r+0x1c>
 8000f8e:	2301      	movs	r3, #1
 8000f90:	4628      	mov	r0, r5
 8000f92:	47b0      	blx	r6
 8000f94:	1c41      	adds	r1, r0, #1
 8000f96:	d1c8      	bne.n	8000f2a <__sflush_r+0x36>
 8000f98:	682b      	ldr	r3, [r5, #0]
 8000f9a:	2b00      	cmp	r3, #0
 8000f9c:	d0c5      	beq.n	8000f2a <__sflush_r+0x36>
 8000f9e:	2b1d      	cmp	r3, #29
 8000fa0:	d001      	beq.n	8000fa6 <__sflush_r+0xb2>
 8000fa2:	2b16      	cmp	r3, #22
 8000fa4:	d101      	bne.n	8000faa <__sflush_r+0xb6>
 8000fa6:	602f      	str	r7, [r5, #0]
 8000fa8:	e7b1      	b.n	8000f0e <__sflush_r+0x1a>
 8000faa:	89a3      	ldrh	r3, [r4, #12]
 8000fac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fb0:	81a3      	strh	r3, [r4, #12]
 8000fb2:	e7ad      	b.n	8000f10 <__sflush_r+0x1c>
 8000fb4:	690f      	ldr	r7, [r1, #16]
 8000fb6:	2f00      	cmp	r7, #0
 8000fb8:	d0a9      	beq.n	8000f0e <__sflush_r+0x1a>
 8000fba:	0793      	lsls	r3, r2, #30
 8000fbc:	680e      	ldr	r6, [r1, #0]
 8000fbe:	bf08      	it	eq
 8000fc0:	694b      	ldreq	r3, [r1, #20]
 8000fc2:	600f      	str	r7, [r1, #0]
 8000fc4:	bf18      	it	ne
 8000fc6:	2300      	movne	r3, #0
 8000fc8:	eba6 0807 	sub.w	r8, r6, r7
 8000fcc:	608b      	str	r3, [r1, #8]
 8000fce:	f1b8 0f00 	cmp.w	r8, #0
 8000fd2:	dd9c      	ble.n	8000f0e <__sflush_r+0x1a>
 8000fd4:	6a21      	ldr	r1, [r4, #32]
 8000fd6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000fd8:	4643      	mov	r3, r8
 8000fda:	463a      	mov	r2, r7
 8000fdc:	4628      	mov	r0, r5
 8000fde:	47b0      	blx	r6
 8000fe0:	2800      	cmp	r0, #0
 8000fe2:	dc06      	bgt.n	8000ff2 <__sflush_r+0xfe>
 8000fe4:	89a3      	ldrh	r3, [r4, #12]
 8000fe6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fea:	81a3      	strh	r3, [r4, #12]
 8000fec:	f04f 30ff 	mov.w	r0, #4294967295
 8000ff0:	e78e      	b.n	8000f10 <__sflush_r+0x1c>
 8000ff2:	4407      	add	r7, r0
 8000ff4:	eba8 0800 	sub.w	r8, r8, r0
 8000ff8:	e7e9      	b.n	8000fce <__sflush_r+0xda>
 8000ffa:	bf00      	nop
 8000ffc:	dfbffffe 	.word	0xdfbffffe

08001000 <_fflush_r>:
 8001000:	b538      	push	{r3, r4, r5, lr}
 8001002:	690b      	ldr	r3, [r1, #16]
 8001004:	4605      	mov	r5, r0
 8001006:	460c      	mov	r4, r1
 8001008:	b913      	cbnz	r3, 8001010 <_fflush_r+0x10>
 800100a:	2500      	movs	r5, #0
 800100c:	4628      	mov	r0, r5
 800100e:	bd38      	pop	{r3, r4, r5, pc}
 8001010:	b118      	cbz	r0, 800101a <_fflush_r+0x1a>
 8001012:	6a03      	ldr	r3, [r0, #32]
 8001014:	b90b      	cbnz	r3, 800101a <_fflush_r+0x1a>
 8001016:	f7ff fa99 	bl	800054c <__sinit>
 800101a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800101e:	2b00      	cmp	r3, #0
 8001020:	d0f3      	beq.n	800100a <_fflush_r+0xa>
 8001022:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001024:	07d0      	lsls	r0, r2, #31
 8001026:	d404      	bmi.n	8001032 <_fflush_r+0x32>
 8001028:	0599      	lsls	r1, r3, #22
 800102a:	d402      	bmi.n	8001032 <_fflush_r+0x32>
 800102c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800102e:	f7ff fb92 	bl	8000756 <__retarget_lock_acquire_recursive>
 8001032:	4628      	mov	r0, r5
 8001034:	4621      	mov	r1, r4
 8001036:	f7ff ff5d 	bl	8000ef4 <__sflush_r>
 800103a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800103c:	07da      	lsls	r2, r3, #31
 800103e:	4605      	mov	r5, r0
 8001040:	d4e4      	bmi.n	800100c <_fflush_r+0xc>
 8001042:	89a3      	ldrh	r3, [r4, #12]
 8001044:	059b      	lsls	r3, r3, #22
 8001046:	d4e1      	bmi.n	800100c <_fflush_r+0xc>
 8001048:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800104a:	f7ff fb85 	bl	8000758 <__retarget_lock_release_recursive>
 800104e:	e7dd      	b.n	800100c <_fflush_r+0xc>

08001050 <__swbuf_r>:
 8001050:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001052:	460e      	mov	r6, r1
 8001054:	4614      	mov	r4, r2
 8001056:	4605      	mov	r5, r0
 8001058:	b118      	cbz	r0, 8001062 <__swbuf_r+0x12>
 800105a:	6a03      	ldr	r3, [r0, #32]
 800105c:	b90b      	cbnz	r3, 8001062 <__swbuf_r+0x12>
 800105e:	f7ff fa75 	bl	800054c <__sinit>
 8001062:	69a3      	ldr	r3, [r4, #24]
 8001064:	60a3      	str	r3, [r4, #8]
 8001066:	89a3      	ldrh	r3, [r4, #12]
 8001068:	071a      	lsls	r2, r3, #28
 800106a:	d525      	bpl.n	80010b8 <__swbuf_r+0x68>
 800106c:	6923      	ldr	r3, [r4, #16]
 800106e:	b31b      	cbz	r3, 80010b8 <__swbuf_r+0x68>
 8001070:	6823      	ldr	r3, [r4, #0]
 8001072:	6922      	ldr	r2, [r4, #16]
 8001074:	1a98      	subs	r0, r3, r2
 8001076:	6963      	ldr	r3, [r4, #20]
 8001078:	b2f6      	uxtb	r6, r6
 800107a:	4283      	cmp	r3, r0
 800107c:	4637      	mov	r7, r6
 800107e:	dc04      	bgt.n	800108a <__swbuf_r+0x3a>
 8001080:	4621      	mov	r1, r4
 8001082:	4628      	mov	r0, r5
 8001084:	f7ff ffbc 	bl	8001000 <_fflush_r>
 8001088:	b9e0      	cbnz	r0, 80010c4 <__swbuf_r+0x74>
 800108a:	68a3      	ldr	r3, [r4, #8]
 800108c:	3b01      	subs	r3, #1
 800108e:	60a3      	str	r3, [r4, #8]
 8001090:	6823      	ldr	r3, [r4, #0]
 8001092:	1c5a      	adds	r2, r3, #1
 8001094:	6022      	str	r2, [r4, #0]
 8001096:	701e      	strb	r6, [r3, #0]
 8001098:	6962      	ldr	r2, [r4, #20]
 800109a:	1c43      	adds	r3, r0, #1
 800109c:	429a      	cmp	r2, r3
 800109e:	d004      	beq.n	80010aa <__swbuf_r+0x5a>
 80010a0:	89a3      	ldrh	r3, [r4, #12]
 80010a2:	07db      	lsls	r3, r3, #31
 80010a4:	d506      	bpl.n	80010b4 <__swbuf_r+0x64>
 80010a6:	2e0a      	cmp	r6, #10
 80010a8:	d104      	bne.n	80010b4 <__swbuf_r+0x64>
 80010aa:	4621      	mov	r1, r4
 80010ac:	4628      	mov	r0, r5
 80010ae:	f7ff ffa7 	bl	8001000 <_fflush_r>
 80010b2:	b938      	cbnz	r0, 80010c4 <__swbuf_r+0x74>
 80010b4:	4638      	mov	r0, r7
 80010b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010b8:	4621      	mov	r1, r4
 80010ba:	4628      	mov	r0, r5
 80010bc:	f000 f806 	bl	80010cc <__swsetup_r>
 80010c0:	2800      	cmp	r0, #0
 80010c2:	d0d5      	beq.n	8001070 <__swbuf_r+0x20>
 80010c4:	f04f 37ff 	mov.w	r7, #4294967295
 80010c8:	e7f4      	b.n	80010b4 <__swbuf_r+0x64>
	...

080010cc <__swsetup_r>:
 80010cc:	b538      	push	{r3, r4, r5, lr}
 80010ce:	4b2a      	ldr	r3, [pc, #168]	; (8001178 <__swsetup_r+0xac>)
 80010d0:	4605      	mov	r5, r0
 80010d2:	6818      	ldr	r0, [r3, #0]
 80010d4:	460c      	mov	r4, r1
 80010d6:	b118      	cbz	r0, 80010e0 <__swsetup_r+0x14>
 80010d8:	6a03      	ldr	r3, [r0, #32]
 80010da:	b90b      	cbnz	r3, 80010e0 <__swsetup_r+0x14>
 80010dc:	f7ff fa36 	bl	800054c <__sinit>
 80010e0:	89a3      	ldrh	r3, [r4, #12]
 80010e2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80010e6:	0718      	lsls	r0, r3, #28
 80010e8:	d422      	bmi.n	8001130 <__swsetup_r+0x64>
 80010ea:	06d9      	lsls	r1, r3, #27
 80010ec:	d407      	bmi.n	80010fe <__swsetup_r+0x32>
 80010ee:	2309      	movs	r3, #9
 80010f0:	602b      	str	r3, [r5, #0]
 80010f2:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80010f6:	81a3      	strh	r3, [r4, #12]
 80010f8:	f04f 30ff 	mov.w	r0, #4294967295
 80010fc:	e034      	b.n	8001168 <__swsetup_r+0x9c>
 80010fe:	0758      	lsls	r0, r3, #29
 8001100:	d512      	bpl.n	8001128 <__swsetup_r+0x5c>
 8001102:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001104:	b141      	cbz	r1, 8001118 <__swsetup_r+0x4c>
 8001106:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800110a:	4299      	cmp	r1, r3
 800110c:	d002      	beq.n	8001114 <__swsetup_r+0x48>
 800110e:	4628      	mov	r0, r5
 8001110:	f7ff fb24 	bl	800075c <_free_r>
 8001114:	2300      	movs	r3, #0
 8001116:	6363      	str	r3, [r4, #52]	; 0x34
 8001118:	89a3      	ldrh	r3, [r4, #12]
 800111a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800111e:	81a3      	strh	r3, [r4, #12]
 8001120:	2300      	movs	r3, #0
 8001122:	6063      	str	r3, [r4, #4]
 8001124:	6923      	ldr	r3, [r4, #16]
 8001126:	6023      	str	r3, [r4, #0]
 8001128:	89a3      	ldrh	r3, [r4, #12]
 800112a:	f043 0308 	orr.w	r3, r3, #8
 800112e:	81a3      	strh	r3, [r4, #12]
 8001130:	6923      	ldr	r3, [r4, #16]
 8001132:	b94b      	cbnz	r3, 8001148 <__swsetup_r+0x7c>
 8001134:	89a3      	ldrh	r3, [r4, #12]
 8001136:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800113a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800113e:	d003      	beq.n	8001148 <__swsetup_r+0x7c>
 8001140:	4621      	mov	r1, r4
 8001142:	4628      	mov	r0, r5
 8001144:	f000 f850 	bl	80011e8 <__smakebuf_r>
 8001148:	89a0      	ldrh	r0, [r4, #12]
 800114a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800114e:	f010 0301 	ands.w	r3, r0, #1
 8001152:	d00a      	beq.n	800116a <__swsetup_r+0x9e>
 8001154:	2300      	movs	r3, #0
 8001156:	60a3      	str	r3, [r4, #8]
 8001158:	6963      	ldr	r3, [r4, #20]
 800115a:	425b      	negs	r3, r3
 800115c:	61a3      	str	r3, [r4, #24]
 800115e:	6923      	ldr	r3, [r4, #16]
 8001160:	b943      	cbnz	r3, 8001174 <__swsetup_r+0xa8>
 8001162:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001166:	d1c4      	bne.n	80010f2 <__swsetup_r+0x26>
 8001168:	bd38      	pop	{r3, r4, r5, pc}
 800116a:	0781      	lsls	r1, r0, #30
 800116c:	bf58      	it	pl
 800116e:	6963      	ldrpl	r3, [r4, #20]
 8001170:	60a3      	str	r3, [r4, #8]
 8001172:	e7f4      	b.n	800115e <__swsetup_r+0x92>
 8001174:	2000      	movs	r0, #0
 8001176:	e7f7      	b.n	8001168 <__swsetup_r+0x9c>
 8001178:	20000058 	.word	0x20000058

0800117c <_sbrk_r>:
 800117c:	b538      	push	{r3, r4, r5, lr}
 800117e:	4d06      	ldr	r5, [pc, #24]	; (8001198 <_sbrk_r+0x1c>)
 8001180:	2300      	movs	r3, #0
 8001182:	4604      	mov	r4, r0
 8001184:	4608      	mov	r0, r1
 8001186:	602b      	str	r3, [r5, #0]
 8001188:	f7ff f8f4 	bl	8000374 <_sbrk>
 800118c:	1c43      	adds	r3, r0, #1
 800118e:	d102      	bne.n	8001196 <_sbrk_r+0x1a>
 8001190:	682b      	ldr	r3, [r5, #0]
 8001192:	b103      	cbz	r3, 8001196 <_sbrk_r+0x1a>
 8001194:	6023      	str	r3, [r4, #0]
 8001196:	bd38      	pop	{r3, r4, r5, pc}
 8001198:	200001b8 	.word	0x200001b8

0800119c <__swhatbuf_r>:
 800119c:	b570      	push	{r4, r5, r6, lr}
 800119e:	460c      	mov	r4, r1
 80011a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011a4:	2900      	cmp	r1, #0
 80011a6:	b096      	sub	sp, #88	; 0x58
 80011a8:	4615      	mov	r5, r2
 80011aa:	461e      	mov	r6, r3
 80011ac:	da0d      	bge.n	80011ca <__swhatbuf_r+0x2e>
 80011ae:	89a3      	ldrh	r3, [r4, #12]
 80011b0:	f013 0f80 	tst.w	r3, #128	; 0x80
 80011b4:	f04f 0100 	mov.w	r1, #0
 80011b8:	bf0c      	ite	eq
 80011ba:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80011be:	2340      	movne	r3, #64	; 0x40
 80011c0:	2000      	movs	r0, #0
 80011c2:	6031      	str	r1, [r6, #0]
 80011c4:	602b      	str	r3, [r5, #0]
 80011c6:	b016      	add	sp, #88	; 0x58
 80011c8:	bd70      	pop	{r4, r5, r6, pc}
 80011ca:	466a      	mov	r2, sp
 80011cc:	f000 f848 	bl	8001260 <_fstat_r>
 80011d0:	2800      	cmp	r0, #0
 80011d2:	dbec      	blt.n	80011ae <__swhatbuf_r+0x12>
 80011d4:	9901      	ldr	r1, [sp, #4]
 80011d6:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80011da:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80011de:	4259      	negs	r1, r3
 80011e0:	4159      	adcs	r1, r3
 80011e2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80011e6:	e7eb      	b.n	80011c0 <__swhatbuf_r+0x24>

080011e8 <__smakebuf_r>:
 80011e8:	898b      	ldrh	r3, [r1, #12]
 80011ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80011ec:	079d      	lsls	r5, r3, #30
 80011ee:	4606      	mov	r6, r0
 80011f0:	460c      	mov	r4, r1
 80011f2:	d507      	bpl.n	8001204 <__smakebuf_r+0x1c>
 80011f4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80011f8:	6023      	str	r3, [r4, #0]
 80011fa:	6123      	str	r3, [r4, #16]
 80011fc:	2301      	movs	r3, #1
 80011fe:	6163      	str	r3, [r4, #20]
 8001200:	b002      	add	sp, #8
 8001202:	bd70      	pop	{r4, r5, r6, pc}
 8001204:	ab01      	add	r3, sp, #4
 8001206:	466a      	mov	r2, sp
 8001208:	f7ff ffc8 	bl	800119c <__swhatbuf_r>
 800120c:	9900      	ldr	r1, [sp, #0]
 800120e:	4605      	mov	r5, r0
 8001210:	4630      	mov	r0, r6
 8001212:	f7ff fb0f 	bl	8000834 <_malloc_r>
 8001216:	b948      	cbnz	r0, 800122c <__smakebuf_r+0x44>
 8001218:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800121c:	059a      	lsls	r2, r3, #22
 800121e:	d4ef      	bmi.n	8001200 <__smakebuf_r+0x18>
 8001220:	f023 0303 	bic.w	r3, r3, #3
 8001224:	f043 0302 	orr.w	r3, r3, #2
 8001228:	81a3      	strh	r3, [r4, #12]
 800122a:	e7e3      	b.n	80011f4 <__smakebuf_r+0xc>
 800122c:	89a3      	ldrh	r3, [r4, #12]
 800122e:	6020      	str	r0, [r4, #0]
 8001230:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001234:	81a3      	strh	r3, [r4, #12]
 8001236:	9b00      	ldr	r3, [sp, #0]
 8001238:	6163      	str	r3, [r4, #20]
 800123a:	9b01      	ldr	r3, [sp, #4]
 800123c:	6120      	str	r0, [r4, #16]
 800123e:	b15b      	cbz	r3, 8001258 <__smakebuf_r+0x70>
 8001240:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001244:	4630      	mov	r0, r6
 8001246:	f000 f81d 	bl	8001284 <_isatty_r>
 800124a:	b128      	cbz	r0, 8001258 <__smakebuf_r+0x70>
 800124c:	89a3      	ldrh	r3, [r4, #12]
 800124e:	f023 0303 	bic.w	r3, r3, #3
 8001252:	f043 0301 	orr.w	r3, r3, #1
 8001256:	81a3      	strh	r3, [r4, #12]
 8001258:	89a3      	ldrh	r3, [r4, #12]
 800125a:	431d      	orrs	r5, r3
 800125c:	81a5      	strh	r5, [r4, #12]
 800125e:	e7cf      	b.n	8001200 <__smakebuf_r+0x18>

08001260 <_fstat_r>:
 8001260:	b538      	push	{r3, r4, r5, lr}
 8001262:	4d07      	ldr	r5, [pc, #28]	; (8001280 <_fstat_r+0x20>)
 8001264:	2300      	movs	r3, #0
 8001266:	4604      	mov	r4, r0
 8001268:	4608      	mov	r0, r1
 800126a:	4611      	mov	r1, r2
 800126c:	602b      	str	r3, [r5, #0]
 800126e:	f7ff f858 	bl	8000322 <_fstat>
 8001272:	1c43      	adds	r3, r0, #1
 8001274:	d102      	bne.n	800127c <_fstat_r+0x1c>
 8001276:	682b      	ldr	r3, [r5, #0]
 8001278:	b103      	cbz	r3, 800127c <_fstat_r+0x1c>
 800127a:	6023      	str	r3, [r4, #0]
 800127c:	bd38      	pop	{r3, r4, r5, pc}
 800127e:	bf00      	nop
 8001280:	200001b8 	.word	0x200001b8

08001284 <_isatty_r>:
 8001284:	b538      	push	{r3, r4, r5, lr}
 8001286:	4d06      	ldr	r5, [pc, #24]	; (80012a0 <_isatty_r+0x1c>)
 8001288:	2300      	movs	r3, #0
 800128a:	4604      	mov	r4, r0
 800128c:	4608      	mov	r0, r1
 800128e:	602b      	str	r3, [r5, #0]
 8001290:	f7ff f857 	bl	8000342 <_isatty>
 8001294:	1c43      	adds	r3, r0, #1
 8001296:	d102      	bne.n	800129e <_isatty_r+0x1a>
 8001298:	682b      	ldr	r3, [r5, #0]
 800129a:	b103      	cbz	r3, 800129e <_isatty_r+0x1a>
 800129c:	6023      	str	r3, [r4, #0]
 800129e:	bd38      	pop	{r3, r4, r5, pc}
 80012a0:	200001b8 	.word	0x200001b8

080012a4 <_init>:
 80012a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012a6:	bf00      	nop
 80012a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012aa:	bc08      	pop	{r3}
 80012ac:	469e      	mov	lr, r3
 80012ae:	4770      	bx	lr

080012b0 <_fini>:
 80012b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012b2:	bf00      	nop
 80012b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012b6:	bc08      	pop	{r3}
 80012b8:	469e      	mov	lr, r3
 80012ba:	4770      	bx	lr
