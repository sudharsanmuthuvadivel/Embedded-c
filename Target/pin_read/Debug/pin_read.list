
pin_read.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000154  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002dc  080002e4  000102e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002dc  080002dc  000102e4  2**0
                  CONTENTS
  4 .ARM          00000000  080002dc  080002dc  000102e4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002dc  080002e4  000102e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002dc  080002dc  000102dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002e0  080002e0  000102e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000102e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000102e4  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000102e4  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00010314  2**0
                  CONTENTS, READONLY
 14 .debug_info   0000015c  00000000  00000000  00010357  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000000aa  00000000  00000000  000104b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_loclists 0000001b  00000000  00000000  0001055d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_aranges 00000048  00000000  00000000  00010578  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_rnglists 0000002c  00000000  00000000  000105c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_macro  00001aef  00000000  00000000  000105ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line   00000630  00000000  00000000  000120db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    000075fc  00000000  00000000  0001270b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_frame  0000004c  00000000  00000000  00019d08  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000054  00000000  00000000  00019d54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080002c4 	.word	0x080002c4

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080002c4 	.word	0x080002c4

080001c8 <main>:
    uint32_t volatile *pPortDmodreg = (uint32_t*)0x40020c00;
    uint32_t volatile *pPortDoutreg = (uint32_t*)0x40020c14;


    //1.Enable the clock for GPIOD, GPIOA peripheral in the AHB1ENR.
    *pClkctrreg |= (1 << 3);//set 3bit for GPIOD
 80001c8:	4a15      	ldr	r2, [pc, #84]	; (8000220 <main+0x58>)
    *pClkctrreg |= (1 << 0); // set 0th bit for GPIOA.

    //2.configure PA0 for  input mode (GPIOA mode reg).
    *pPortAmodreg &= ~(3 << 0);//clear 0th bit   1100.
 80001ca:	4b16      	ldr	r3, [pc, #88]	; (8000224 <main+0x5c>)
    *pClkctrreg |= (1 << 3);//set 3bit for GPIOD
 80001cc:	f8d2 1830 	ldr.w	r1, [r2, #2096]	; 0x830
 80001d0:	f041 0108 	orr.w	r1, r1, #8
 80001d4:	f8c2 1830 	str.w	r1, [r2, #2096]	; 0x830
    *pClkctrreg |= (1 << 0); // set 0th bit for GPIOA.
 80001d8:	f8d2 1830 	ldr.w	r1, [r2, #2096]	; 0x830
 80001dc:	f041 0101 	orr.w	r1, r1, #1
 80001e0:	f8c2 1830 	str.w	r1, [r2, #2096]	; 0x830
    *pPortAmodreg &= ~(3 << 0);//clear 0th bit   1100.
 80001e4:	681a      	ldr	r2, [r3, #0]
 80001e6:	f022 0203 	bic.w	r2, r2, #3
 80001ea:	601a      	str	r2, [r3, #0]

    //3.configure PD12 as output.(explore GPIOD mode register)
    //a.clear the 24 and 25th bit position(CLEAR).
    *pPortDmodreg &= ~(3 << 24);//3 in binary form 0011
 80001ec:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 80001f0:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80001f4:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
    //b.Make 24th bit as 1 (SET)
    *pPortDmodreg |= (1 << 24);
 80001f8:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 80001fc:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8000200:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00

    while(1){//super loop that will run forever as per pinstatus.
    	//4.Read the pin status of the pin PA0 (GPIOA input data reg).
    	uint8_t pinstatus = (uint8_t) (*pPortAINreg & 0x1);//get only 0th bit status all other are 0.
 8000204:	6d1a      	ldr	r2, [r3, #80]	; 0x50

    	if(pinstatus){
 8000206:	f012 0f01 	tst.w	r2, #1
    		//3.SET 12th bit of the output data reg to make I/O pin-12 as HIGH.
    		*pPortDoutreg |= (1 << 12);//led on (pd12).
 800020a:	f8d3 2c14 	ldr.w	r2, [r3, #3092]	; 0xc14
 800020e:	bf14      	ite	ne
 8000210:	f442 5280 	orrne.w	r2, r2, #4096	; 0x1000
    	}else{
    		*pPortDoutreg &= ~(1 << 12); //led off
 8000214:	f422 5280 	biceq.w	r2, r2, #4096	; 0x1000
 8000218:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800021c:	e7f2      	b.n	8000204 <main+0x3c>
 800021e:	bf00      	nop
 8000220:	40023000 	.word	0x40023000
 8000224:	40020000 	.word	0x40020000

08000228 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000228:	480d      	ldr	r0, [pc, #52]	; (8000260 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800022a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800022c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000230:	480c      	ldr	r0, [pc, #48]	; (8000264 <LoopForever+0x6>)
  ldr r1, =_edata
 8000232:	490d      	ldr	r1, [pc, #52]	; (8000268 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000234:	4a0d      	ldr	r2, [pc, #52]	; (800026c <LoopForever+0xe>)
  movs r3, #0
 8000236:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000238:	e002      	b.n	8000240 <LoopCopyDataInit>

0800023a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800023a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800023c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800023e:	3304      	adds	r3, #4

08000240 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000240:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000242:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000244:	d3f9      	bcc.n	800023a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000246:	4a0a      	ldr	r2, [pc, #40]	; (8000270 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000248:	4c0a      	ldr	r4, [pc, #40]	; (8000274 <LoopForever+0x16>)
  movs r3, #0
 800024a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800024c:	e001      	b.n	8000252 <LoopFillZerobss>

0800024e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800024e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000250:	3204      	adds	r2, #4

08000252 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000252:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000254:	d3fb      	bcc.n	800024e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000256:	f000 f811 	bl	800027c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800025a:	f7ff ffb5 	bl	80001c8 <main>

0800025e <LoopForever>:

LoopForever:
  b LoopForever
 800025e:	e7fe      	b.n	800025e <LoopForever>
  ldr   r0, =_estack
 8000260:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000264:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000268:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800026c:	080002e4 	.word	0x080002e4
  ldr r2, =_sbss
 8000270:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000274:	2000001c 	.word	0x2000001c

08000278 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000278:	e7fe      	b.n	8000278 <ADC_IRQHandler>
	...

0800027c <__libc_init_array>:
 800027c:	b570      	push	{r4, r5, r6, lr}
 800027e:	4d0d      	ldr	r5, [pc, #52]	; (80002b4 <__libc_init_array+0x38>)
 8000280:	4c0d      	ldr	r4, [pc, #52]	; (80002b8 <__libc_init_array+0x3c>)
 8000282:	1b64      	subs	r4, r4, r5
 8000284:	10a4      	asrs	r4, r4, #2
 8000286:	2600      	movs	r6, #0
 8000288:	42a6      	cmp	r6, r4
 800028a:	d109      	bne.n	80002a0 <__libc_init_array+0x24>
 800028c:	4d0b      	ldr	r5, [pc, #44]	; (80002bc <__libc_init_array+0x40>)
 800028e:	4c0c      	ldr	r4, [pc, #48]	; (80002c0 <__libc_init_array+0x44>)
 8000290:	f000 f818 	bl	80002c4 <_init>
 8000294:	1b64      	subs	r4, r4, r5
 8000296:	10a4      	asrs	r4, r4, #2
 8000298:	2600      	movs	r6, #0
 800029a:	42a6      	cmp	r6, r4
 800029c:	d105      	bne.n	80002aa <__libc_init_array+0x2e>
 800029e:	bd70      	pop	{r4, r5, r6, pc}
 80002a0:	f855 3b04 	ldr.w	r3, [r5], #4
 80002a4:	4798      	blx	r3
 80002a6:	3601      	adds	r6, #1
 80002a8:	e7ee      	b.n	8000288 <__libc_init_array+0xc>
 80002aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80002ae:	4798      	blx	r3
 80002b0:	3601      	adds	r6, #1
 80002b2:	e7f2      	b.n	800029a <__libc_init_array+0x1e>
 80002b4:	080002dc 	.word	0x080002dc
 80002b8:	080002dc 	.word	0x080002dc
 80002bc:	080002dc 	.word	0x080002dc
 80002c0:	080002e0 	.word	0x080002e0

080002c4 <_init>:
 80002c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002c6:	bf00      	nop
 80002c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ca:	bc08      	pop	{r3}
 80002cc:	469e      	mov	lr, r3
 80002ce:	4770      	bx	lr

080002d0 <_fini>:
 80002d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002d2:	bf00      	nop
 80002d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002d6:	bc08      	pop	{r3}
 80002d8:	469e      	mov	lr, r3
 80002da:	4770      	bx	lr
