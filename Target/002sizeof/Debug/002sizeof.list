
002sizeof.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001188  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f4  08001318  08001318  00011318  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800140c  0800140c  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  0800140c  0800140c  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800140c  0800140c  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800140c  0800140c  0001140c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001410  08001410  00011410  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001414  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002005c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0002005c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0002005c  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00020086  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000913  00000000  00000000  000200c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000002f9  00000000  00000000  000209dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000118  00000000  00000000  00020cd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000be  00000000  00000000  00020df0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00002b18  00000000  00000000  00020eae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00001419  00000000  00000000  000239c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00009749  00000000  00000000  00024ddf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000b08  00000000  00000000  0002e528  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000055  00000000  00000000  0002f030  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08001300 	.word	0x08001300

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	08001300 	.word	0x08001300

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <main>:
#include <stdio.h>



int main(void)
{
 8000270:	b580      	push	{r7, lr}
 8000272:	af00      	add	r7, sp, #0
    printf("Size of char data type is %u",sizeof(char));
 8000274:	2101      	movs	r1, #1
 8000276:	480c      	ldr	r0, [pc, #48]	; (80002a8 <main+0x38>)
 8000278:	f000 f9d4 	bl	8000624 <iprintf>
    printf("Size of short data type is %u",sizeof(short));
 800027c:	2102      	movs	r1, #2
 800027e:	480b      	ldr	r0, [pc, #44]	; (80002ac <main+0x3c>)
 8000280:	f000 f9d0 	bl	8000624 <iprintf>
    printf("Size of int data type is %u",sizeof(int));
 8000284:	2104      	movs	r1, #4
 8000286:	480a      	ldr	r0, [pc, #40]	; (80002b0 <main+0x40>)
 8000288:	f000 f9cc 	bl	8000624 <iprintf>
    printf("Size of long data type is %u",sizeof(long));
 800028c:	2104      	movs	r1, #4
 800028e:	4809      	ldr	r0, [pc, #36]	; (80002b4 <main+0x44>)
 8000290:	f000 f9c8 	bl	8000624 <iprintf>
    printf("Size of long long data type is %u",sizeof(long long));
 8000294:	2108      	movs	r1, #8
 8000296:	4808      	ldr	r0, [pc, #32]	; (80002b8 <main+0x48>)
 8000298:	f000 f9c4 	bl	8000624 <iprintf>
    printf("Size of double data type is %u",sizeof(double));
 800029c:	2108      	movs	r1, #8
 800029e:	4807      	ldr	r0, [pc, #28]	; (80002bc <main+0x4c>)
 80002a0:	f000 f9c0 	bl	8000624 <iprintf>
    for(;;);
 80002a4:	e7fe      	b.n	80002a4 <main+0x34>
 80002a6:	bf00      	nop
 80002a8:	08001318 	.word	0x08001318
 80002ac:	08001338 	.word	0x08001338
 80002b0:	08001358 	.word	0x08001358
 80002b4:	08001374 	.word	0x08001374
 80002b8:	08001394 	.word	0x08001394
 80002bc:	080013b8 	.word	0x080013b8

080002c0 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002c0:	b480      	push	{r7}
 80002c2:	b083      	sub	sp, #12
 80002c4:	af00      	add	r7, sp, #0
 80002c6:	4603      	mov	r3, r0
 80002c8:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002ca:	4b0e      	ldr	r3, [pc, #56]	; (8000304 <ITM_SendChar+0x44>)
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	4a0d      	ldr	r2, [pc, #52]	; (8000304 <ITM_SendChar+0x44>)
 80002d0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002d4:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002d6:	4b0c      	ldr	r3, [pc, #48]	; (8000308 <ITM_SendChar+0x48>)
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	4a0b      	ldr	r2, [pc, #44]	; (8000308 <ITM_SendChar+0x48>)
 80002dc:	f043 0301 	orr.w	r3, r3, #1
 80002e0:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002e2:	bf00      	nop
 80002e4:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	f003 0301 	and.w	r3, r3, #1
 80002ee:	2b00      	cmp	r3, #0
 80002f0:	d0f8      	beq.n	80002e4 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002f2:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80002f6:	79fb      	ldrb	r3, [r7, #7]
 80002f8:	6013      	str	r3, [r2, #0]
}
 80002fa:	bf00      	nop
 80002fc:	370c      	adds	r7, #12
 80002fe:	46bd      	mov	sp, r7
 8000300:	bc80      	pop	{r7}
 8000302:	4770      	bx	lr
 8000304:	e000edfc 	.word	0xe000edfc
 8000308:	e0000e00 	.word	0xe0000e00

0800030c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800030c:	b580      	push	{r7, lr}
 800030e:	b086      	sub	sp, #24
 8000310:	af00      	add	r7, sp, #0
 8000312:	60f8      	str	r0, [r7, #12]
 8000314:	60b9      	str	r1, [r7, #8]
 8000316:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000318:	2300      	movs	r3, #0
 800031a:	617b      	str	r3, [r7, #20]
 800031c:	e00a      	b.n	8000334 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800031e:	f3af 8000 	nop.w
 8000322:	4601      	mov	r1, r0
 8000324:	68bb      	ldr	r3, [r7, #8]
 8000326:	1c5a      	adds	r2, r3, #1
 8000328:	60ba      	str	r2, [r7, #8]
 800032a:	b2ca      	uxtb	r2, r1
 800032c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800032e:	697b      	ldr	r3, [r7, #20]
 8000330:	3301      	adds	r3, #1
 8000332:	617b      	str	r3, [r7, #20]
 8000334:	697a      	ldr	r2, [r7, #20]
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	429a      	cmp	r2, r3
 800033a:	dbf0      	blt.n	800031e <_read+0x12>
  }

  return len;
 800033c:	687b      	ldr	r3, [r7, #4]
}
 800033e:	4618      	mov	r0, r3
 8000340:	3718      	adds	r7, #24
 8000342:	46bd      	mov	sp, r7
 8000344:	bd80      	pop	{r7, pc}

08000346 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000346:	b580      	push	{r7, lr}
 8000348:	b086      	sub	sp, #24
 800034a:	af00      	add	r7, sp, #0
 800034c:	60f8      	str	r0, [r7, #12]
 800034e:	60b9      	str	r1, [r7, #8]
 8000350:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000352:	2300      	movs	r3, #0
 8000354:	617b      	str	r3, [r7, #20]
 8000356:	e009      	b.n	800036c <_write+0x26>
  {
   // __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000358:	68bb      	ldr	r3, [r7, #8]
 800035a:	1c5a      	adds	r2, r3, #1
 800035c:	60ba      	str	r2, [r7, #8]
 800035e:	781b      	ldrb	r3, [r3, #0]
 8000360:	4618      	mov	r0, r3
 8000362:	f7ff ffad 	bl	80002c0 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000366:	697b      	ldr	r3, [r7, #20]
 8000368:	3301      	adds	r3, #1
 800036a:	617b      	str	r3, [r7, #20]
 800036c:	697a      	ldr	r2, [r7, #20]
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	429a      	cmp	r2, r3
 8000372:	dbf1      	blt.n	8000358 <_write+0x12>

  }
  return len;
 8000374:	687b      	ldr	r3, [r7, #4]
}
 8000376:	4618      	mov	r0, r3
 8000378:	3718      	adds	r7, #24
 800037a:	46bd      	mov	sp, r7
 800037c:	bd80      	pop	{r7, pc}

0800037e <_close>:

int _close(int file)
{
 800037e:	b480      	push	{r7}
 8000380:	b083      	sub	sp, #12
 8000382:	af00      	add	r7, sp, #0
 8000384:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000386:	f04f 33ff 	mov.w	r3, #4294967295
}
 800038a:	4618      	mov	r0, r3
 800038c:	370c      	adds	r7, #12
 800038e:	46bd      	mov	sp, r7
 8000390:	bc80      	pop	{r7}
 8000392:	4770      	bx	lr

08000394 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000394:	b480      	push	{r7}
 8000396:	b083      	sub	sp, #12
 8000398:	af00      	add	r7, sp, #0
 800039a:	6078      	str	r0, [r7, #4]
 800039c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800039e:	683b      	ldr	r3, [r7, #0]
 80003a0:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003a4:	605a      	str	r2, [r3, #4]
  return 0;
 80003a6:	2300      	movs	r3, #0
}
 80003a8:	4618      	mov	r0, r3
 80003aa:	370c      	adds	r7, #12
 80003ac:	46bd      	mov	sp, r7
 80003ae:	bc80      	pop	{r7}
 80003b0:	4770      	bx	lr

080003b2 <_isatty>:

int _isatty(int file)
{
 80003b2:	b480      	push	{r7}
 80003b4:	b083      	sub	sp, #12
 80003b6:	af00      	add	r7, sp, #0
 80003b8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003ba:	2301      	movs	r3, #1
}
 80003bc:	4618      	mov	r0, r3
 80003be:	370c      	adds	r7, #12
 80003c0:	46bd      	mov	sp, r7
 80003c2:	bc80      	pop	{r7}
 80003c4:	4770      	bx	lr

080003c6 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003c6:	b480      	push	{r7}
 80003c8:	b085      	sub	sp, #20
 80003ca:	af00      	add	r7, sp, #0
 80003cc:	60f8      	str	r0, [r7, #12]
 80003ce:	60b9      	str	r1, [r7, #8]
 80003d0:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003d2:	2300      	movs	r3, #0
}
 80003d4:	4618      	mov	r0, r3
 80003d6:	3714      	adds	r7, #20
 80003d8:	46bd      	mov	sp, r7
 80003da:	bc80      	pop	{r7}
 80003dc:	4770      	bx	lr
	...

080003e0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003e0:	b580      	push	{r7, lr}
 80003e2:	b086      	sub	sp, #24
 80003e4:	af00      	add	r7, sp, #0
 80003e6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003e8:	4a14      	ldr	r2, [pc, #80]	; (800043c <_sbrk+0x5c>)
 80003ea:	4b15      	ldr	r3, [pc, #84]	; (8000440 <_sbrk+0x60>)
 80003ec:	1ad3      	subs	r3, r2, r3
 80003ee:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003f0:	697b      	ldr	r3, [r7, #20]
 80003f2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003f4:	4b13      	ldr	r3, [pc, #76]	; (8000444 <_sbrk+0x64>)
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	2b00      	cmp	r3, #0
 80003fa:	d102      	bne.n	8000402 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003fc:	4b11      	ldr	r3, [pc, #68]	; (8000444 <_sbrk+0x64>)
 80003fe:	4a12      	ldr	r2, [pc, #72]	; (8000448 <_sbrk+0x68>)
 8000400:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000402:	4b10      	ldr	r3, [pc, #64]	; (8000444 <_sbrk+0x64>)
 8000404:	681a      	ldr	r2, [r3, #0]
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	4413      	add	r3, r2
 800040a:	693a      	ldr	r2, [r7, #16]
 800040c:	429a      	cmp	r2, r3
 800040e:	d207      	bcs.n	8000420 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000410:	f000 f9ac 	bl	800076c <__errno>
 8000414:	4603      	mov	r3, r0
 8000416:	220c      	movs	r2, #12
 8000418:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800041a:	f04f 33ff 	mov.w	r3, #4294967295
 800041e:	e009      	b.n	8000434 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000420:	4b08      	ldr	r3, [pc, #32]	; (8000444 <_sbrk+0x64>)
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000426:	4b07      	ldr	r3, [pc, #28]	; (8000444 <_sbrk+0x64>)
 8000428:	681a      	ldr	r2, [r3, #0]
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	4413      	add	r3, r2
 800042e:	4a05      	ldr	r2, [pc, #20]	; (8000444 <_sbrk+0x64>)
 8000430:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000432:	68fb      	ldr	r3, [r7, #12]
}
 8000434:	4618      	mov	r0, r3
 8000436:	3718      	adds	r7, #24
 8000438:	46bd      	mov	sp, r7
 800043a:	bd80      	pop	{r7, pc}
 800043c:	20020000 	.word	0x20020000
 8000440:	00000400 	.word	0x00000400
 8000444:	20000078 	.word	0x20000078
 8000448:	200001c8 	.word	0x200001c8

0800044c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800044c:	480d      	ldr	r0, [pc, #52]	; (8000484 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800044e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000450:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000454:	480c      	ldr	r0, [pc, #48]	; (8000488 <LoopForever+0x6>)
  ldr r1, =_edata
 8000456:	490d      	ldr	r1, [pc, #52]	; (800048c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000458:	4a0d      	ldr	r2, [pc, #52]	; (8000490 <LoopForever+0xe>)
  movs r3, #0
 800045a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800045c:	e002      	b.n	8000464 <LoopCopyDataInit>

0800045e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800045e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000460:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000462:	3304      	adds	r3, #4

08000464 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000464:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000466:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000468:	d3f9      	bcc.n	800045e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800046a:	4a0a      	ldr	r2, [pc, #40]	; (8000494 <LoopForever+0x12>)
  ldr r4, =_ebss
 800046c:	4c0a      	ldr	r4, [pc, #40]	; (8000498 <LoopForever+0x16>)
  movs r3, #0
 800046e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000470:	e001      	b.n	8000476 <LoopFillZerobss>

08000472 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000472:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000474:	3204      	adds	r2, #4

08000476 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000476:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000478:	d3fb      	bcc.n	8000472 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800047a:	f000 f97d 	bl	8000778 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800047e:	f7ff fef7 	bl	8000270 <main>

08000482 <LoopForever>:

LoopForever:
  b LoopForever
 8000482:	e7fe      	b.n	8000482 <LoopForever>
  ldr   r0, =_estack
 8000484:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000488:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800048c:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000490:	08001414 	.word	0x08001414
  ldr r2, =_sbss
 8000494:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000498:	200001c8 	.word	0x200001c8

0800049c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800049c:	e7fe      	b.n	800049c <ADC_IRQHandler>
	...

080004a0 <std>:
 80004a0:	2300      	movs	r3, #0
 80004a2:	b510      	push	{r4, lr}
 80004a4:	4604      	mov	r4, r0
 80004a6:	e9c0 3300 	strd	r3, r3, [r0]
 80004aa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004ae:	6083      	str	r3, [r0, #8]
 80004b0:	8181      	strh	r1, [r0, #12]
 80004b2:	6643      	str	r3, [r0, #100]	; 0x64
 80004b4:	81c2      	strh	r2, [r0, #14]
 80004b6:	6183      	str	r3, [r0, #24]
 80004b8:	4619      	mov	r1, r3
 80004ba:	2208      	movs	r2, #8
 80004bc:	305c      	adds	r0, #92	; 0x5c
 80004be:	f000 f906 	bl	80006ce <memset>
 80004c2:	4b0d      	ldr	r3, [pc, #52]	; (80004f8 <std+0x58>)
 80004c4:	6263      	str	r3, [r4, #36]	; 0x24
 80004c6:	4b0d      	ldr	r3, [pc, #52]	; (80004fc <std+0x5c>)
 80004c8:	62a3      	str	r3, [r4, #40]	; 0x28
 80004ca:	4b0d      	ldr	r3, [pc, #52]	; (8000500 <std+0x60>)
 80004cc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80004ce:	4b0d      	ldr	r3, [pc, #52]	; (8000504 <std+0x64>)
 80004d0:	6323      	str	r3, [r4, #48]	; 0x30
 80004d2:	4b0d      	ldr	r3, [pc, #52]	; (8000508 <std+0x68>)
 80004d4:	6224      	str	r4, [r4, #32]
 80004d6:	429c      	cmp	r4, r3
 80004d8:	d006      	beq.n	80004e8 <std+0x48>
 80004da:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80004de:	4294      	cmp	r4, r2
 80004e0:	d002      	beq.n	80004e8 <std+0x48>
 80004e2:	33d0      	adds	r3, #208	; 0xd0
 80004e4:	429c      	cmp	r4, r3
 80004e6:	d105      	bne.n	80004f4 <std+0x54>
 80004e8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80004ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004f0:	f000 b966 	b.w	80007c0 <__retarget_lock_init_recursive>
 80004f4:	bd10      	pop	{r4, pc}
 80004f6:	bf00      	nop
 80004f8:	08000649 	.word	0x08000649
 80004fc:	0800066b 	.word	0x0800066b
 8000500:	080006a3 	.word	0x080006a3
 8000504:	080006c7 	.word	0x080006c7
 8000508:	2000007c 	.word	0x2000007c

0800050c <stdio_exit_handler>:
 800050c:	4a02      	ldr	r2, [pc, #8]	; (8000518 <stdio_exit_handler+0xc>)
 800050e:	4903      	ldr	r1, [pc, #12]	; (800051c <stdio_exit_handler+0x10>)
 8000510:	4803      	ldr	r0, [pc, #12]	; (8000520 <stdio_exit_handler+0x14>)
 8000512:	f000 b869 	b.w	80005e8 <_fwalk_sglue>
 8000516:	bf00      	nop
 8000518:	20000000 	.word	0x20000000
 800051c:	0800105d 	.word	0x0800105d
 8000520:	2000000c 	.word	0x2000000c

08000524 <cleanup_stdio>:
 8000524:	6841      	ldr	r1, [r0, #4]
 8000526:	4b0c      	ldr	r3, [pc, #48]	; (8000558 <cleanup_stdio+0x34>)
 8000528:	4299      	cmp	r1, r3
 800052a:	b510      	push	{r4, lr}
 800052c:	4604      	mov	r4, r0
 800052e:	d001      	beq.n	8000534 <cleanup_stdio+0x10>
 8000530:	f000 fd94 	bl	800105c <_fflush_r>
 8000534:	68a1      	ldr	r1, [r4, #8]
 8000536:	4b09      	ldr	r3, [pc, #36]	; (800055c <cleanup_stdio+0x38>)
 8000538:	4299      	cmp	r1, r3
 800053a:	d002      	beq.n	8000542 <cleanup_stdio+0x1e>
 800053c:	4620      	mov	r0, r4
 800053e:	f000 fd8d 	bl	800105c <_fflush_r>
 8000542:	68e1      	ldr	r1, [r4, #12]
 8000544:	4b06      	ldr	r3, [pc, #24]	; (8000560 <cleanup_stdio+0x3c>)
 8000546:	4299      	cmp	r1, r3
 8000548:	d004      	beq.n	8000554 <cleanup_stdio+0x30>
 800054a:	4620      	mov	r0, r4
 800054c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000550:	f000 bd84 	b.w	800105c <_fflush_r>
 8000554:	bd10      	pop	{r4, pc}
 8000556:	bf00      	nop
 8000558:	2000007c 	.word	0x2000007c
 800055c:	200000e4 	.word	0x200000e4
 8000560:	2000014c 	.word	0x2000014c

08000564 <global_stdio_init.part.0>:
 8000564:	b510      	push	{r4, lr}
 8000566:	4b0b      	ldr	r3, [pc, #44]	; (8000594 <global_stdio_init.part.0+0x30>)
 8000568:	4c0b      	ldr	r4, [pc, #44]	; (8000598 <global_stdio_init.part.0+0x34>)
 800056a:	4a0c      	ldr	r2, [pc, #48]	; (800059c <global_stdio_init.part.0+0x38>)
 800056c:	601a      	str	r2, [r3, #0]
 800056e:	4620      	mov	r0, r4
 8000570:	2200      	movs	r2, #0
 8000572:	2104      	movs	r1, #4
 8000574:	f7ff ff94 	bl	80004a0 <std>
 8000578:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800057c:	2201      	movs	r2, #1
 800057e:	2109      	movs	r1, #9
 8000580:	f7ff ff8e 	bl	80004a0 <std>
 8000584:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000588:	2202      	movs	r2, #2
 800058a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800058e:	2112      	movs	r1, #18
 8000590:	f7ff bf86 	b.w	80004a0 <std>
 8000594:	200001b4 	.word	0x200001b4
 8000598:	2000007c 	.word	0x2000007c
 800059c:	0800050d 	.word	0x0800050d

080005a0 <__sfp_lock_acquire>:
 80005a0:	4801      	ldr	r0, [pc, #4]	; (80005a8 <__sfp_lock_acquire+0x8>)
 80005a2:	f000 b90e 	b.w	80007c2 <__retarget_lock_acquire_recursive>
 80005a6:	bf00      	nop
 80005a8:	200001bd 	.word	0x200001bd

080005ac <__sfp_lock_release>:
 80005ac:	4801      	ldr	r0, [pc, #4]	; (80005b4 <__sfp_lock_release+0x8>)
 80005ae:	f000 b909 	b.w	80007c4 <__retarget_lock_release_recursive>
 80005b2:	bf00      	nop
 80005b4:	200001bd 	.word	0x200001bd

080005b8 <__sinit>:
 80005b8:	b510      	push	{r4, lr}
 80005ba:	4604      	mov	r4, r0
 80005bc:	f7ff fff0 	bl	80005a0 <__sfp_lock_acquire>
 80005c0:	6a23      	ldr	r3, [r4, #32]
 80005c2:	b11b      	cbz	r3, 80005cc <__sinit+0x14>
 80005c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005c8:	f7ff bff0 	b.w	80005ac <__sfp_lock_release>
 80005cc:	4b04      	ldr	r3, [pc, #16]	; (80005e0 <__sinit+0x28>)
 80005ce:	6223      	str	r3, [r4, #32]
 80005d0:	4b04      	ldr	r3, [pc, #16]	; (80005e4 <__sinit+0x2c>)
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	2b00      	cmp	r3, #0
 80005d6:	d1f5      	bne.n	80005c4 <__sinit+0xc>
 80005d8:	f7ff ffc4 	bl	8000564 <global_stdio_init.part.0>
 80005dc:	e7f2      	b.n	80005c4 <__sinit+0xc>
 80005de:	bf00      	nop
 80005e0:	08000525 	.word	0x08000525
 80005e4:	200001b4 	.word	0x200001b4

080005e8 <_fwalk_sglue>:
 80005e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005ec:	4607      	mov	r7, r0
 80005ee:	4688      	mov	r8, r1
 80005f0:	4614      	mov	r4, r2
 80005f2:	2600      	movs	r6, #0
 80005f4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005f8:	f1b9 0901 	subs.w	r9, r9, #1
 80005fc:	d505      	bpl.n	800060a <_fwalk_sglue+0x22>
 80005fe:	6824      	ldr	r4, [r4, #0]
 8000600:	2c00      	cmp	r4, #0
 8000602:	d1f7      	bne.n	80005f4 <_fwalk_sglue+0xc>
 8000604:	4630      	mov	r0, r6
 8000606:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800060a:	89ab      	ldrh	r3, [r5, #12]
 800060c:	2b01      	cmp	r3, #1
 800060e:	d907      	bls.n	8000620 <_fwalk_sglue+0x38>
 8000610:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000614:	3301      	adds	r3, #1
 8000616:	d003      	beq.n	8000620 <_fwalk_sglue+0x38>
 8000618:	4629      	mov	r1, r5
 800061a:	4638      	mov	r0, r7
 800061c:	47c0      	blx	r8
 800061e:	4306      	orrs	r6, r0
 8000620:	3568      	adds	r5, #104	; 0x68
 8000622:	e7e9      	b.n	80005f8 <_fwalk_sglue+0x10>

08000624 <iprintf>:
 8000624:	b40f      	push	{r0, r1, r2, r3}
 8000626:	b507      	push	{r0, r1, r2, lr}
 8000628:	4906      	ldr	r1, [pc, #24]	; (8000644 <iprintf+0x20>)
 800062a:	ab04      	add	r3, sp, #16
 800062c:	6808      	ldr	r0, [r1, #0]
 800062e:	f853 2b04 	ldr.w	r2, [r3], #4
 8000632:	6881      	ldr	r1, [r0, #8]
 8000634:	9301      	str	r3, [sp, #4]
 8000636:	f000 f9e5 	bl	8000a04 <_vfiprintf_r>
 800063a:	b003      	add	sp, #12
 800063c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000640:	b004      	add	sp, #16
 8000642:	4770      	bx	lr
 8000644:	20000058 	.word	0x20000058

08000648 <__sread>:
 8000648:	b510      	push	{r4, lr}
 800064a:	460c      	mov	r4, r1
 800064c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000650:	f000 f868 	bl	8000724 <_read_r>
 8000654:	2800      	cmp	r0, #0
 8000656:	bfab      	itete	ge
 8000658:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800065a:	89a3      	ldrhlt	r3, [r4, #12]
 800065c:	181b      	addge	r3, r3, r0
 800065e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000662:	bfac      	ite	ge
 8000664:	6563      	strge	r3, [r4, #84]	; 0x54
 8000666:	81a3      	strhlt	r3, [r4, #12]
 8000668:	bd10      	pop	{r4, pc}

0800066a <__swrite>:
 800066a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800066e:	461f      	mov	r7, r3
 8000670:	898b      	ldrh	r3, [r1, #12]
 8000672:	05db      	lsls	r3, r3, #23
 8000674:	4605      	mov	r5, r0
 8000676:	460c      	mov	r4, r1
 8000678:	4616      	mov	r6, r2
 800067a:	d505      	bpl.n	8000688 <__swrite+0x1e>
 800067c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000680:	2302      	movs	r3, #2
 8000682:	2200      	movs	r2, #0
 8000684:	f000 f83c 	bl	8000700 <_lseek_r>
 8000688:	89a3      	ldrh	r3, [r4, #12]
 800068a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800068e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000692:	81a3      	strh	r3, [r4, #12]
 8000694:	4632      	mov	r2, r6
 8000696:	463b      	mov	r3, r7
 8000698:	4628      	mov	r0, r5
 800069a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800069e:	f000 b853 	b.w	8000748 <_write_r>

080006a2 <__sseek>:
 80006a2:	b510      	push	{r4, lr}
 80006a4:	460c      	mov	r4, r1
 80006a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006aa:	f000 f829 	bl	8000700 <_lseek_r>
 80006ae:	1c43      	adds	r3, r0, #1
 80006b0:	89a3      	ldrh	r3, [r4, #12]
 80006b2:	bf15      	itete	ne
 80006b4:	6560      	strne	r0, [r4, #84]	; 0x54
 80006b6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80006ba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80006be:	81a3      	strheq	r3, [r4, #12]
 80006c0:	bf18      	it	ne
 80006c2:	81a3      	strhne	r3, [r4, #12]
 80006c4:	bd10      	pop	{r4, pc}

080006c6 <__sclose>:
 80006c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006ca:	f000 b809 	b.w	80006e0 <_close_r>

080006ce <memset>:
 80006ce:	4402      	add	r2, r0
 80006d0:	4603      	mov	r3, r0
 80006d2:	4293      	cmp	r3, r2
 80006d4:	d100      	bne.n	80006d8 <memset+0xa>
 80006d6:	4770      	bx	lr
 80006d8:	f803 1b01 	strb.w	r1, [r3], #1
 80006dc:	e7f9      	b.n	80006d2 <memset+0x4>
	...

080006e0 <_close_r>:
 80006e0:	b538      	push	{r3, r4, r5, lr}
 80006e2:	4d06      	ldr	r5, [pc, #24]	; (80006fc <_close_r+0x1c>)
 80006e4:	2300      	movs	r3, #0
 80006e6:	4604      	mov	r4, r0
 80006e8:	4608      	mov	r0, r1
 80006ea:	602b      	str	r3, [r5, #0]
 80006ec:	f7ff fe47 	bl	800037e <_close>
 80006f0:	1c43      	adds	r3, r0, #1
 80006f2:	d102      	bne.n	80006fa <_close_r+0x1a>
 80006f4:	682b      	ldr	r3, [r5, #0]
 80006f6:	b103      	cbz	r3, 80006fa <_close_r+0x1a>
 80006f8:	6023      	str	r3, [r4, #0]
 80006fa:	bd38      	pop	{r3, r4, r5, pc}
 80006fc:	200001b8 	.word	0x200001b8

08000700 <_lseek_r>:
 8000700:	b538      	push	{r3, r4, r5, lr}
 8000702:	4d07      	ldr	r5, [pc, #28]	; (8000720 <_lseek_r+0x20>)
 8000704:	4604      	mov	r4, r0
 8000706:	4608      	mov	r0, r1
 8000708:	4611      	mov	r1, r2
 800070a:	2200      	movs	r2, #0
 800070c:	602a      	str	r2, [r5, #0]
 800070e:	461a      	mov	r2, r3
 8000710:	f7ff fe59 	bl	80003c6 <_lseek>
 8000714:	1c43      	adds	r3, r0, #1
 8000716:	d102      	bne.n	800071e <_lseek_r+0x1e>
 8000718:	682b      	ldr	r3, [r5, #0]
 800071a:	b103      	cbz	r3, 800071e <_lseek_r+0x1e>
 800071c:	6023      	str	r3, [r4, #0]
 800071e:	bd38      	pop	{r3, r4, r5, pc}
 8000720:	200001b8 	.word	0x200001b8

08000724 <_read_r>:
 8000724:	b538      	push	{r3, r4, r5, lr}
 8000726:	4d07      	ldr	r5, [pc, #28]	; (8000744 <_read_r+0x20>)
 8000728:	4604      	mov	r4, r0
 800072a:	4608      	mov	r0, r1
 800072c:	4611      	mov	r1, r2
 800072e:	2200      	movs	r2, #0
 8000730:	602a      	str	r2, [r5, #0]
 8000732:	461a      	mov	r2, r3
 8000734:	f7ff fdea 	bl	800030c <_read>
 8000738:	1c43      	adds	r3, r0, #1
 800073a:	d102      	bne.n	8000742 <_read_r+0x1e>
 800073c:	682b      	ldr	r3, [r5, #0]
 800073e:	b103      	cbz	r3, 8000742 <_read_r+0x1e>
 8000740:	6023      	str	r3, [r4, #0]
 8000742:	bd38      	pop	{r3, r4, r5, pc}
 8000744:	200001b8 	.word	0x200001b8

08000748 <_write_r>:
 8000748:	b538      	push	{r3, r4, r5, lr}
 800074a:	4d07      	ldr	r5, [pc, #28]	; (8000768 <_write_r+0x20>)
 800074c:	4604      	mov	r4, r0
 800074e:	4608      	mov	r0, r1
 8000750:	4611      	mov	r1, r2
 8000752:	2200      	movs	r2, #0
 8000754:	602a      	str	r2, [r5, #0]
 8000756:	461a      	mov	r2, r3
 8000758:	f7ff fdf5 	bl	8000346 <_write>
 800075c:	1c43      	adds	r3, r0, #1
 800075e:	d102      	bne.n	8000766 <_write_r+0x1e>
 8000760:	682b      	ldr	r3, [r5, #0]
 8000762:	b103      	cbz	r3, 8000766 <_write_r+0x1e>
 8000764:	6023      	str	r3, [r4, #0]
 8000766:	bd38      	pop	{r3, r4, r5, pc}
 8000768:	200001b8 	.word	0x200001b8

0800076c <__errno>:
 800076c:	4b01      	ldr	r3, [pc, #4]	; (8000774 <__errno+0x8>)
 800076e:	6818      	ldr	r0, [r3, #0]
 8000770:	4770      	bx	lr
 8000772:	bf00      	nop
 8000774:	20000058 	.word	0x20000058

08000778 <__libc_init_array>:
 8000778:	b570      	push	{r4, r5, r6, lr}
 800077a:	4d0d      	ldr	r5, [pc, #52]	; (80007b0 <__libc_init_array+0x38>)
 800077c:	4c0d      	ldr	r4, [pc, #52]	; (80007b4 <__libc_init_array+0x3c>)
 800077e:	1b64      	subs	r4, r4, r5
 8000780:	10a4      	asrs	r4, r4, #2
 8000782:	2600      	movs	r6, #0
 8000784:	42a6      	cmp	r6, r4
 8000786:	d109      	bne.n	800079c <__libc_init_array+0x24>
 8000788:	4d0b      	ldr	r5, [pc, #44]	; (80007b8 <__libc_init_array+0x40>)
 800078a:	4c0c      	ldr	r4, [pc, #48]	; (80007bc <__libc_init_array+0x44>)
 800078c:	f000 fdb8 	bl	8001300 <_init>
 8000790:	1b64      	subs	r4, r4, r5
 8000792:	10a4      	asrs	r4, r4, #2
 8000794:	2600      	movs	r6, #0
 8000796:	42a6      	cmp	r6, r4
 8000798:	d105      	bne.n	80007a6 <__libc_init_array+0x2e>
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f855 3b04 	ldr.w	r3, [r5], #4
 80007a0:	4798      	blx	r3
 80007a2:	3601      	adds	r6, #1
 80007a4:	e7ee      	b.n	8000784 <__libc_init_array+0xc>
 80007a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80007aa:	4798      	blx	r3
 80007ac:	3601      	adds	r6, #1
 80007ae:	e7f2      	b.n	8000796 <__libc_init_array+0x1e>
 80007b0:	0800140c 	.word	0x0800140c
 80007b4:	0800140c 	.word	0x0800140c
 80007b8:	0800140c 	.word	0x0800140c
 80007bc:	08001410 	.word	0x08001410

080007c0 <__retarget_lock_init_recursive>:
 80007c0:	4770      	bx	lr

080007c2 <__retarget_lock_acquire_recursive>:
 80007c2:	4770      	bx	lr

080007c4 <__retarget_lock_release_recursive>:
 80007c4:	4770      	bx	lr
	...

080007c8 <_free_r>:
 80007c8:	b538      	push	{r3, r4, r5, lr}
 80007ca:	4605      	mov	r5, r0
 80007cc:	2900      	cmp	r1, #0
 80007ce:	d041      	beq.n	8000854 <_free_r+0x8c>
 80007d0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80007d4:	1f0c      	subs	r4, r1, #4
 80007d6:	2b00      	cmp	r3, #0
 80007d8:	bfb8      	it	lt
 80007da:	18e4      	addlt	r4, r4, r3
 80007dc:	f000 f8de 	bl	800099c <__malloc_lock>
 80007e0:	4a1d      	ldr	r2, [pc, #116]	; (8000858 <_free_r+0x90>)
 80007e2:	6813      	ldr	r3, [r2, #0]
 80007e4:	b933      	cbnz	r3, 80007f4 <_free_r+0x2c>
 80007e6:	6063      	str	r3, [r4, #4]
 80007e8:	6014      	str	r4, [r2, #0]
 80007ea:	4628      	mov	r0, r5
 80007ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007f0:	f000 b8da 	b.w	80009a8 <__malloc_unlock>
 80007f4:	42a3      	cmp	r3, r4
 80007f6:	d908      	bls.n	800080a <_free_r+0x42>
 80007f8:	6820      	ldr	r0, [r4, #0]
 80007fa:	1821      	adds	r1, r4, r0
 80007fc:	428b      	cmp	r3, r1
 80007fe:	bf01      	itttt	eq
 8000800:	6819      	ldreq	r1, [r3, #0]
 8000802:	685b      	ldreq	r3, [r3, #4]
 8000804:	1809      	addeq	r1, r1, r0
 8000806:	6021      	streq	r1, [r4, #0]
 8000808:	e7ed      	b.n	80007e6 <_free_r+0x1e>
 800080a:	461a      	mov	r2, r3
 800080c:	685b      	ldr	r3, [r3, #4]
 800080e:	b10b      	cbz	r3, 8000814 <_free_r+0x4c>
 8000810:	42a3      	cmp	r3, r4
 8000812:	d9fa      	bls.n	800080a <_free_r+0x42>
 8000814:	6811      	ldr	r1, [r2, #0]
 8000816:	1850      	adds	r0, r2, r1
 8000818:	42a0      	cmp	r0, r4
 800081a:	d10b      	bne.n	8000834 <_free_r+0x6c>
 800081c:	6820      	ldr	r0, [r4, #0]
 800081e:	4401      	add	r1, r0
 8000820:	1850      	adds	r0, r2, r1
 8000822:	4283      	cmp	r3, r0
 8000824:	6011      	str	r1, [r2, #0]
 8000826:	d1e0      	bne.n	80007ea <_free_r+0x22>
 8000828:	6818      	ldr	r0, [r3, #0]
 800082a:	685b      	ldr	r3, [r3, #4]
 800082c:	6053      	str	r3, [r2, #4]
 800082e:	4408      	add	r0, r1
 8000830:	6010      	str	r0, [r2, #0]
 8000832:	e7da      	b.n	80007ea <_free_r+0x22>
 8000834:	d902      	bls.n	800083c <_free_r+0x74>
 8000836:	230c      	movs	r3, #12
 8000838:	602b      	str	r3, [r5, #0]
 800083a:	e7d6      	b.n	80007ea <_free_r+0x22>
 800083c:	6820      	ldr	r0, [r4, #0]
 800083e:	1821      	adds	r1, r4, r0
 8000840:	428b      	cmp	r3, r1
 8000842:	bf04      	itt	eq
 8000844:	6819      	ldreq	r1, [r3, #0]
 8000846:	685b      	ldreq	r3, [r3, #4]
 8000848:	6063      	str	r3, [r4, #4]
 800084a:	bf04      	itt	eq
 800084c:	1809      	addeq	r1, r1, r0
 800084e:	6021      	streq	r1, [r4, #0]
 8000850:	6054      	str	r4, [r2, #4]
 8000852:	e7ca      	b.n	80007ea <_free_r+0x22>
 8000854:	bd38      	pop	{r3, r4, r5, pc}
 8000856:	bf00      	nop
 8000858:	200001c0 	.word	0x200001c0

0800085c <sbrk_aligned>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	4e0e      	ldr	r6, [pc, #56]	; (8000898 <sbrk_aligned+0x3c>)
 8000860:	460c      	mov	r4, r1
 8000862:	6831      	ldr	r1, [r6, #0]
 8000864:	4605      	mov	r5, r0
 8000866:	b911      	cbnz	r1, 800086e <sbrk_aligned+0x12>
 8000868:	f000 fcb6 	bl	80011d8 <_sbrk_r>
 800086c:	6030      	str	r0, [r6, #0]
 800086e:	4621      	mov	r1, r4
 8000870:	4628      	mov	r0, r5
 8000872:	f000 fcb1 	bl	80011d8 <_sbrk_r>
 8000876:	1c43      	adds	r3, r0, #1
 8000878:	d00a      	beq.n	8000890 <sbrk_aligned+0x34>
 800087a:	1cc4      	adds	r4, r0, #3
 800087c:	f024 0403 	bic.w	r4, r4, #3
 8000880:	42a0      	cmp	r0, r4
 8000882:	d007      	beq.n	8000894 <sbrk_aligned+0x38>
 8000884:	1a21      	subs	r1, r4, r0
 8000886:	4628      	mov	r0, r5
 8000888:	f000 fca6 	bl	80011d8 <_sbrk_r>
 800088c:	3001      	adds	r0, #1
 800088e:	d101      	bne.n	8000894 <sbrk_aligned+0x38>
 8000890:	f04f 34ff 	mov.w	r4, #4294967295
 8000894:	4620      	mov	r0, r4
 8000896:	bd70      	pop	{r4, r5, r6, pc}
 8000898:	200001c4 	.word	0x200001c4

0800089c <_malloc_r>:
 800089c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008a0:	1ccd      	adds	r5, r1, #3
 80008a2:	f025 0503 	bic.w	r5, r5, #3
 80008a6:	3508      	adds	r5, #8
 80008a8:	2d0c      	cmp	r5, #12
 80008aa:	bf38      	it	cc
 80008ac:	250c      	movcc	r5, #12
 80008ae:	2d00      	cmp	r5, #0
 80008b0:	4607      	mov	r7, r0
 80008b2:	db01      	blt.n	80008b8 <_malloc_r+0x1c>
 80008b4:	42a9      	cmp	r1, r5
 80008b6:	d905      	bls.n	80008c4 <_malloc_r+0x28>
 80008b8:	230c      	movs	r3, #12
 80008ba:	603b      	str	r3, [r7, #0]
 80008bc:	2600      	movs	r6, #0
 80008be:	4630      	mov	r0, r6
 80008c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008c4:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000998 <_malloc_r+0xfc>
 80008c8:	f000 f868 	bl	800099c <__malloc_lock>
 80008cc:	f8d8 3000 	ldr.w	r3, [r8]
 80008d0:	461c      	mov	r4, r3
 80008d2:	bb5c      	cbnz	r4, 800092c <_malloc_r+0x90>
 80008d4:	4629      	mov	r1, r5
 80008d6:	4638      	mov	r0, r7
 80008d8:	f7ff ffc0 	bl	800085c <sbrk_aligned>
 80008dc:	1c43      	adds	r3, r0, #1
 80008de:	4604      	mov	r4, r0
 80008e0:	d155      	bne.n	800098e <_malloc_r+0xf2>
 80008e2:	f8d8 4000 	ldr.w	r4, [r8]
 80008e6:	4626      	mov	r6, r4
 80008e8:	2e00      	cmp	r6, #0
 80008ea:	d145      	bne.n	8000978 <_malloc_r+0xdc>
 80008ec:	2c00      	cmp	r4, #0
 80008ee:	d048      	beq.n	8000982 <_malloc_r+0xe6>
 80008f0:	6823      	ldr	r3, [r4, #0]
 80008f2:	4631      	mov	r1, r6
 80008f4:	4638      	mov	r0, r7
 80008f6:	eb04 0903 	add.w	r9, r4, r3
 80008fa:	f000 fc6d 	bl	80011d8 <_sbrk_r>
 80008fe:	4581      	cmp	r9, r0
 8000900:	d13f      	bne.n	8000982 <_malloc_r+0xe6>
 8000902:	6821      	ldr	r1, [r4, #0]
 8000904:	1a6d      	subs	r5, r5, r1
 8000906:	4629      	mov	r1, r5
 8000908:	4638      	mov	r0, r7
 800090a:	f7ff ffa7 	bl	800085c <sbrk_aligned>
 800090e:	3001      	adds	r0, #1
 8000910:	d037      	beq.n	8000982 <_malloc_r+0xe6>
 8000912:	6823      	ldr	r3, [r4, #0]
 8000914:	442b      	add	r3, r5
 8000916:	6023      	str	r3, [r4, #0]
 8000918:	f8d8 3000 	ldr.w	r3, [r8]
 800091c:	2b00      	cmp	r3, #0
 800091e:	d038      	beq.n	8000992 <_malloc_r+0xf6>
 8000920:	685a      	ldr	r2, [r3, #4]
 8000922:	42a2      	cmp	r2, r4
 8000924:	d12b      	bne.n	800097e <_malloc_r+0xe2>
 8000926:	2200      	movs	r2, #0
 8000928:	605a      	str	r2, [r3, #4]
 800092a:	e00f      	b.n	800094c <_malloc_r+0xb0>
 800092c:	6822      	ldr	r2, [r4, #0]
 800092e:	1b52      	subs	r2, r2, r5
 8000930:	d41f      	bmi.n	8000972 <_malloc_r+0xd6>
 8000932:	2a0b      	cmp	r2, #11
 8000934:	d917      	bls.n	8000966 <_malloc_r+0xca>
 8000936:	1961      	adds	r1, r4, r5
 8000938:	42a3      	cmp	r3, r4
 800093a:	6025      	str	r5, [r4, #0]
 800093c:	bf18      	it	ne
 800093e:	6059      	strne	r1, [r3, #4]
 8000940:	6863      	ldr	r3, [r4, #4]
 8000942:	bf08      	it	eq
 8000944:	f8c8 1000 	streq.w	r1, [r8]
 8000948:	5162      	str	r2, [r4, r5]
 800094a:	604b      	str	r3, [r1, #4]
 800094c:	4638      	mov	r0, r7
 800094e:	f104 060b 	add.w	r6, r4, #11
 8000952:	f000 f829 	bl	80009a8 <__malloc_unlock>
 8000956:	f026 0607 	bic.w	r6, r6, #7
 800095a:	1d23      	adds	r3, r4, #4
 800095c:	1af2      	subs	r2, r6, r3
 800095e:	d0ae      	beq.n	80008be <_malloc_r+0x22>
 8000960:	1b9b      	subs	r3, r3, r6
 8000962:	50a3      	str	r3, [r4, r2]
 8000964:	e7ab      	b.n	80008be <_malloc_r+0x22>
 8000966:	42a3      	cmp	r3, r4
 8000968:	6862      	ldr	r2, [r4, #4]
 800096a:	d1dd      	bne.n	8000928 <_malloc_r+0x8c>
 800096c:	f8c8 2000 	str.w	r2, [r8]
 8000970:	e7ec      	b.n	800094c <_malloc_r+0xb0>
 8000972:	4623      	mov	r3, r4
 8000974:	6864      	ldr	r4, [r4, #4]
 8000976:	e7ac      	b.n	80008d2 <_malloc_r+0x36>
 8000978:	4634      	mov	r4, r6
 800097a:	6876      	ldr	r6, [r6, #4]
 800097c:	e7b4      	b.n	80008e8 <_malloc_r+0x4c>
 800097e:	4613      	mov	r3, r2
 8000980:	e7cc      	b.n	800091c <_malloc_r+0x80>
 8000982:	230c      	movs	r3, #12
 8000984:	603b      	str	r3, [r7, #0]
 8000986:	4638      	mov	r0, r7
 8000988:	f000 f80e 	bl	80009a8 <__malloc_unlock>
 800098c:	e797      	b.n	80008be <_malloc_r+0x22>
 800098e:	6025      	str	r5, [r4, #0]
 8000990:	e7dc      	b.n	800094c <_malloc_r+0xb0>
 8000992:	605b      	str	r3, [r3, #4]
 8000994:	deff      	udf	#255	; 0xff
 8000996:	bf00      	nop
 8000998:	200001c0 	.word	0x200001c0

0800099c <__malloc_lock>:
 800099c:	4801      	ldr	r0, [pc, #4]	; (80009a4 <__malloc_lock+0x8>)
 800099e:	f7ff bf10 	b.w	80007c2 <__retarget_lock_acquire_recursive>
 80009a2:	bf00      	nop
 80009a4:	200001bc 	.word	0x200001bc

080009a8 <__malloc_unlock>:
 80009a8:	4801      	ldr	r0, [pc, #4]	; (80009b0 <__malloc_unlock+0x8>)
 80009aa:	f7ff bf0b 	b.w	80007c4 <__retarget_lock_release_recursive>
 80009ae:	bf00      	nop
 80009b0:	200001bc 	.word	0x200001bc

080009b4 <__sfputc_r>:
 80009b4:	6893      	ldr	r3, [r2, #8]
 80009b6:	3b01      	subs	r3, #1
 80009b8:	2b00      	cmp	r3, #0
 80009ba:	b410      	push	{r4}
 80009bc:	6093      	str	r3, [r2, #8]
 80009be:	da07      	bge.n	80009d0 <__sfputc_r+0x1c>
 80009c0:	6994      	ldr	r4, [r2, #24]
 80009c2:	42a3      	cmp	r3, r4
 80009c4:	db01      	blt.n	80009ca <__sfputc_r+0x16>
 80009c6:	290a      	cmp	r1, #10
 80009c8:	d102      	bne.n	80009d0 <__sfputc_r+0x1c>
 80009ca:	bc10      	pop	{r4}
 80009cc:	f000 bb6e 	b.w	80010ac <__swbuf_r>
 80009d0:	6813      	ldr	r3, [r2, #0]
 80009d2:	1c58      	adds	r0, r3, #1
 80009d4:	6010      	str	r0, [r2, #0]
 80009d6:	7019      	strb	r1, [r3, #0]
 80009d8:	4608      	mov	r0, r1
 80009da:	bc10      	pop	{r4}
 80009dc:	4770      	bx	lr

080009de <__sfputs_r>:
 80009de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009e0:	4606      	mov	r6, r0
 80009e2:	460f      	mov	r7, r1
 80009e4:	4614      	mov	r4, r2
 80009e6:	18d5      	adds	r5, r2, r3
 80009e8:	42ac      	cmp	r4, r5
 80009ea:	d101      	bne.n	80009f0 <__sfputs_r+0x12>
 80009ec:	2000      	movs	r0, #0
 80009ee:	e007      	b.n	8000a00 <__sfputs_r+0x22>
 80009f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009f4:	463a      	mov	r2, r7
 80009f6:	4630      	mov	r0, r6
 80009f8:	f7ff ffdc 	bl	80009b4 <__sfputc_r>
 80009fc:	1c43      	adds	r3, r0, #1
 80009fe:	d1f3      	bne.n	80009e8 <__sfputs_r+0xa>
 8000a00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a04 <_vfiprintf_r>:
 8000a04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a08:	460d      	mov	r5, r1
 8000a0a:	b09d      	sub	sp, #116	; 0x74
 8000a0c:	4614      	mov	r4, r2
 8000a0e:	4698      	mov	r8, r3
 8000a10:	4606      	mov	r6, r0
 8000a12:	b118      	cbz	r0, 8000a1c <_vfiprintf_r+0x18>
 8000a14:	6a03      	ldr	r3, [r0, #32]
 8000a16:	b90b      	cbnz	r3, 8000a1c <_vfiprintf_r+0x18>
 8000a18:	f7ff fdce 	bl	80005b8 <__sinit>
 8000a1c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a1e:	07d9      	lsls	r1, r3, #31
 8000a20:	d405      	bmi.n	8000a2e <_vfiprintf_r+0x2a>
 8000a22:	89ab      	ldrh	r3, [r5, #12]
 8000a24:	059a      	lsls	r2, r3, #22
 8000a26:	d402      	bmi.n	8000a2e <_vfiprintf_r+0x2a>
 8000a28:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a2a:	f7ff feca 	bl	80007c2 <__retarget_lock_acquire_recursive>
 8000a2e:	89ab      	ldrh	r3, [r5, #12]
 8000a30:	071b      	lsls	r3, r3, #28
 8000a32:	d501      	bpl.n	8000a38 <_vfiprintf_r+0x34>
 8000a34:	692b      	ldr	r3, [r5, #16]
 8000a36:	b99b      	cbnz	r3, 8000a60 <_vfiprintf_r+0x5c>
 8000a38:	4629      	mov	r1, r5
 8000a3a:	4630      	mov	r0, r6
 8000a3c:	f000 fb74 	bl	8001128 <__swsetup_r>
 8000a40:	b170      	cbz	r0, 8000a60 <_vfiprintf_r+0x5c>
 8000a42:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a44:	07dc      	lsls	r4, r3, #31
 8000a46:	d504      	bpl.n	8000a52 <_vfiprintf_r+0x4e>
 8000a48:	f04f 30ff 	mov.w	r0, #4294967295
 8000a4c:	b01d      	add	sp, #116	; 0x74
 8000a4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a52:	89ab      	ldrh	r3, [r5, #12]
 8000a54:	0598      	lsls	r0, r3, #22
 8000a56:	d4f7      	bmi.n	8000a48 <_vfiprintf_r+0x44>
 8000a58:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a5a:	f7ff feb3 	bl	80007c4 <__retarget_lock_release_recursive>
 8000a5e:	e7f3      	b.n	8000a48 <_vfiprintf_r+0x44>
 8000a60:	2300      	movs	r3, #0
 8000a62:	9309      	str	r3, [sp, #36]	; 0x24
 8000a64:	2320      	movs	r3, #32
 8000a66:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a6a:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a6e:	2330      	movs	r3, #48	; 0x30
 8000a70:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000c24 <_vfiprintf_r+0x220>
 8000a74:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000a78:	f04f 0901 	mov.w	r9, #1
 8000a7c:	4623      	mov	r3, r4
 8000a7e:	469a      	mov	sl, r3
 8000a80:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a84:	b10a      	cbz	r2, 8000a8a <_vfiprintf_r+0x86>
 8000a86:	2a25      	cmp	r2, #37	; 0x25
 8000a88:	d1f9      	bne.n	8000a7e <_vfiprintf_r+0x7a>
 8000a8a:	ebba 0b04 	subs.w	fp, sl, r4
 8000a8e:	d00b      	beq.n	8000aa8 <_vfiprintf_r+0xa4>
 8000a90:	465b      	mov	r3, fp
 8000a92:	4622      	mov	r2, r4
 8000a94:	4629      	mov	r1, r5
 8000a96:	4630      	mov	r0, r6
 8000a98:	f7ff ffa1 	bl	80009de <__sfputs_r>
 8000a9c:	3001      	adds	r0, #1
 8000a9e:	f000 80a9 	beq.w	8000bf4 <_vfiprintf_r+0x1f0>
 8000aa2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000aa4:	445a      	add	r2, fp
 8000aa6:	9209      	str	r2, [sp, #36]	; 0x24
 8000aa8:	f89a 3000 	ldrb.w	r3, [sl]
 8000aac:	2b00      	cmp	r3, #0
 8000aae:	f000 80a1 	beq.w	8000bf4 <_vfiprintf_r+0x1f0>
 8000ab2:	2300      	movs	r3, #0
 8000ab4:	f04f 32ff 	mov.w	r2, #4294967295
 8000ab8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000abc:	f10a 0a01 	add.w	sl, sl, #1
 8000ac0:	9304      	str	r3, [sp, #16]
 8000ac2:	9307      	str	r3, [sp, #28]
 8000ac4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000ac8:	931a      	str	r3, [sp, #104]	; 0x68
 8000aca:	4654      	mov	r4, sl
 8000acc:	2205      	movs	r2, #5
 8000ace:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ad2:	4854      	ldr	r0, [pc, #336]	; (8000c24 <_vfiprintf_r+0x220>)
 8000ad4:	f7ff fb7c 	bl	80001d0 <memchr>
 8000ad8:	9a04      	ldr	r2, [sp, #16]
 8000ada:	b9d8      	cbnz	r0, 8000b14 <_vfiprintf_r+0x110>
 8000adc:	06d1      	lsls	r1, r2, #27
 8000ade:	bf44      	itt	mi
 8000ae0:	2320      	movmi	r3, #32
 8000ae2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ae6:	0713      	lsls	r3, r2, #28
 8000ae8:	bf44      	itt	mi
 8000aea:	232b      	movmi	r3, #43	; 0x2b
 8000aec:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000af0:	f89a 3000 	ldrb.w	r3, [sl]
 8000af4:	2b2a      	cmp	r3, #42	; 0x2a
 8000af6:	d015      	beq.n	8000b24 <_vfiprintf_r+0x120>
 8000af8:	9a07      	ldr	r2, [sp, #28]
 8000afa:	4654      	mov	r4, sl
 8000afc:	2000      	movs	r0, #0
 8000afe:	f04f 0c0a 	mov.w	ip, #10
 8000b02:	4621      	mov	r1, r4
 8000b04:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b08:	3b30      	subs	r3, #48	; 0x30
 8000b0a:	2b09      	cmp	r3, #9
 8000b0c:	d94d      	bls.n	8000baa <_vfiprintf_r+0x1a6>
 8000b0e:	b1b0      	cbz	r0, 8000b3e <_vfiprintf_r+0x13a>
 8000b10:	9207      	str	r2, [sp, #28]
 8000b12:	e014      	b.n	8000b3e <_vfiprintf_r+0x13a>
 8000b14:	eba0 0308 	sub.w	r3, r0, r8
 8000b18:	fa09 f303 	lsl.w	r3, r9, r3
 8000b1c:	4313      	orrs	r3, r2
 8000b1e:	9304      	str	r3, [sp, #16]
 8000b20:	46a2      	mov	sl, r4
 8000b22:	e7d2      	b.n	8000aca <_vfiprintf_r+0xc6>
 8000b24:	9b03      	ldr	r3, [sp, #12]
 8000b26:	1d19      	adds	r1, r3, #4
 8000b28:	681b      	ldr	r3, [r3, #0]
 8000b2a:	9103      	str	r1, [sp, #12]
 8000b2c:	2b00      	cmp	r3, #0
 8000b2e:	bfbb      	ittet	lt
 8000b30:	425b      	neglt	r3, r3
 8000b32:	f042 0202 	orrlt.w	r2, r2, #2
 8000b36:	9307      	strge	r3, [sp, #28]
 8000b38:	9307      	strlt	r3, [sp, #28]
 8000b3a:	bfb8      	it	lt
 8000b3c:	9204      	strlt	r2, [sp, #16]
 8000b3e:	7823      	ldrb	r3, [r4, #0]
 8000b40:	2b2e      	cmp	r3, #46	; 0x2e
 8000b42:	d10c      	bne.n	8000b5e <_vfiprintf_r+0x15a>
 8000b44:	7863      	ldrb	r3, [r4, #1]
 8000b46:	2b2a      	cmp	r3, #42	; 0x2a
 8000b48:	d134      	bne.n	8000bb4 <_vfiprintf_r+0x1b0>
 8000b4a:	9b03      	ldr	r3, [sp, #12]
 8000b4c:	1d1a      	adds	r2, r3, #4
 8000b4e:	681b      	ldr	r3, [r3, #0]
 8000b50:	9203      	str	r2, [sp, #12]
 8000b52:	2b00      	cmp	r3, #0
 8000b54:	bfb8      	it	lt
 8000b56:	f04f 33ff 	movlt.w	r3, #4294967295
 8000b5a:	3402      	adds	r4, #2
 8000b5c:	9305      	str	r3, [sp, #20]
 8000b5e:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8000c28 <_vfiprintf_r+0x224>
 8000b62:	7821      	ldrb	r1, [r4, #0]
 8000b64:	2203      	movs	r2, #3
 8000b66:	4650      	mov	r0, sl
 8000b68:	f7ff fb32 	bl	80001d0 <memchr>
 8000b6c:	b138      	cbz	r0, 8000b7e <_vfiprintf_r+0x17a>
 8000b6e:	9b04      	ldr	r3, [sp, #16]
 8000b70:	eba0 000a 	sub.w	r0, r0, sl
 8000b74:	2240      	movs	r2, #64	; 0x40
 8000b76:	4082      	lsls	r2, r0
 8000b78:	4313      	orrs	r3, r2
 8000b7a:	3401      	adds	r4, #1
 8000b7c:	9304      	str	r3, [sp, #16]
 8000b7e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b82:	482a      	ldr	r0, [pc, #168]	; (8000c2c <_vfiprintf_r+0x228>)
 8000b84:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b88:	2206      	movs	r2, #6
 8000b8a:	f7ff fb21 	bl	80001d0 <memchr>
 8000b8e:	2800      	cmp	r0, #0
 8000b90:	d03f      	beq.n	8000c12 <_vfiprintf_r+0x20e>
 8000b92:	4b27      	ldr	r3, [pc, #156]	; (8000c30 <_vfiprintf_r+0x22c>)
 8000b94:	bb1b      	cbnz	r3, 8000bde <_vfiprintf_r+0x1da>
 8000b96:	9b03      	ldr	r3, [sp, #12]
 8000b98:	3307      	adds	r3, #7
 8000b9a:	f023 0307 	bic.w	r3, r3, #7
 8000b9e:	3308      	adds	r3, #8
 8000ba0:	9303      	str	r3, [sp, #12]
 8000ba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000ba4:	443b      	add	r3, r7
 8000ba6:	9309      	str	r3, [sp, #36]	; 0x24
 8000ba8:	e768      	b.n	8000a7c <_vfiprintf_r+0x78>
 8000baa:	fb0c 3202 	mla	r2, ip, r2, r3
 8000bae:	460c      	mov	r4, r1
 8000bb0:	2001      	movs	r0, #1
 8000bb2:	e7a6      	b.n	8000b02 <_vfiprintf_r+0xfe>
 8000bb4:	2300      	movs	r3, #0
 8000bb6:	3401      	adds	r4, #1
 8000bb8:	9305      	str	r3, [sp, #20]
 8000bba:	4619      	mov	r1, r3
 8000bbc:	f04f 0c0a 	mov.w	ip, #10
 8000bc0:	4620      	mov	r0, r4
 8000bc2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000bc6:	3a30      	subs	r2, #48	; 0x30
 8000bc8:	2a09      	cmp	r2, #9
 8000bca:	d903      	bls.n	8000bd4 <_vfiprintf_r+0x1d0>
 8000bcc:	2b00      	cmp	r3, #0
 8000bce:	d0c6      	beq.n	8000b5e <_vfiprintf_r+0x15a>
 8000bd0:	9105      	str	r1, [sp, #20]
 8000bd2:	e7c4      	b.n	8000b5e <_vfiprintf_r+0x15a>
 8000bd4:	fb0c 2101 	mla	r1, ip, r1, r2
 8000bd8:	4604      	mov	r4, r0
 8000bda:	2301      	movs	r3, #1
 8000bdc:	e7f0      	b.n	8000bc0 <_vfiprintf_r+0x1bc>
 8000bde:	ab03      	add	r3, sp, #12
 8000be0:	9300      	str	r3, [sp, #0]
 8000be2:	462a      	mov	r2, r5
 8000be4:	4b13      	ldr	r3, [pc, #76]	; (8000c34 <_vfiprintf_r+0x230>)
 8000be6:	a904      	add	r1, sp, #16
 8000be8:	4630      	mov	r0, r6
 8000bea:	f3af 8000 	nop.w
 8000bee:	4607      	mov	r7, r0
 8000bf0:	1c78      	adds	r0, r7, #1
 8000bf2:	d1d6      	bne.n	8000ba2 <_vfiprintf_r+0x19e>
 8000bf4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000bf6:	07d9      	lsls	r1, r3, #31
 8000bf8:	d405      	bmi.n	8000c06 <_vfiprintf_r+0x202>
 8000bfa:	89ab      	ldrh	r3, [r5, #12]
 8000bfc:	059a      	lsls	r2, r3, #22
 8000bfe:	d402      	bmi.n	8000c06 <_vfiprintf_r+0x202>
 8000c00:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c02:	f7ff fddf 	bl	80007c4 <__retarget_lock_release_recursive>
 8000c06:	89ab      	ldrh	r3, [r5, #12]
 8000c08:	065b      	lsls	r3, r3, #25
 8000c0a:	f53f af1d 	bmi.w	8000a48 <_vfiprintf_r+0x44>
 8000c0e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000c10:	e71c      	b.n	8000a4c <_vfiprintf_r+0x48>
 8000c12:	ab03      	add	r3, sp, #12
 8000c14:	9300      	str	r3, [sp, #0]
 8000c16:	462a      	mov	r2, r5
 8000c18:	4b06      	ldr	r3, [pc, #24]	; (8000c34 <_vfiprintf_r+0x230>)
 8000c1a:	a904      	add	r1, sp, #16
 8000c1c:	4630      	mov	r0, r6
 8000c1e:	f000 f879 	bl	8000d14 <_printf_i>
 8000c22:	e7e4      	b.n	8000bee <_vfiprintf_r+0x1ea>
 8000c24:	080013d7 	.word	0x080013d7
 8000c28:	080013dd 	.word	0x080013dd
 8000c2c:	080013e1 	.word	0x080013e1
 8000c30:	00000000 	.word	0x00000000
 8000c34:	080009df 	.word	0x080009df

08000c38 <_printf_common>:
 8000c38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c3c:	4616      	mov	r6, r2
 8000c3e:	4699      	mov	r9, r3
 8000c40:	688a      	ldr	r2, [r1, #8]
 8000c42:	690b      	ldr	r3, [r1, #16]
 8000c44:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c48:	4293      	cmp	r3, r2
 8000c4a:	bfb8      	it	lt
 8000c4c:	4613      	movlt	r3, r2
 8000c4e:	6033      	str	r3, [r6, #0]
 8000c50:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c54:	4607      	mov	r7, r0
 8000c56:	460c      	mov	r4, r1
 8000c58:	b10a      	cbz	r2, 8000c5e <_printf_common+0x26>
 8000c5a:	3301      	adds	r3, #1
 8000c5c:	6033      	str	r3, [r6, #0]
 8000c5e:	6823      	ldr	r3, [r4, #0]
 8000c60:	0699      	lsls	r1, r3, #26
 8000c62:	bf42      	ittt	mi
 8000c64:	6833      	ldrmi	r3, [r6, #0]
 8000c66:	3302      	addmi	r3, #2
 8000c68:	6033      	strmi	r3, [r6, #0]
 8000c6a:	6825      	ldr	r5, [r4, #0]
 8000c6c:	f015 0506 	ands.w	r5, r5, #6
 8000c70:	d106      	bne.n	8000c80 <_printf_common+0x48>
 8000c72:	f104 0a19 	add.w	sl, r4, #25
 8000c76:	68e3      	ldr	r3, [r4, #12]
 8000c78:	6832      	ldr	r2, [r6, #0]
 8000c7a:	1a9b      	subs	r3, r3, r2
 8000c7c:	42ab      	cmp	r3, r5
 8000c7e:	dc26      	bgt.n	8000cce <_printf_common+0x96>
 8000c80:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000c84:	1e13      	subs	r3, r2, #0
 8000c86:	6822      	ldr	r2, [r4, #0]
 8000c88:	bf18      	it	ne
 8000c8a:	2301      	movne	r3, #1
 8000c8c:	0692      	lsls	r2, r2, #26
 8000c8e:	d42b      	bmi.n	8000ce8 <_printf_common+0xb0>
 8000c90:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c94:	4649      	mov	r1, r9
 8000c96:	4638      	mov	r0, r7
 8000c98:	47c0      	blx	r8
 8000c9a:	3001      	adds	r0, #1
 8000c9c:	d01e      	beq.n	8000cdc <_printf_common+0xa4>
 8000c9e:	6823      	ldr	r3, [r4, #0]
 8000ca0:	6922      	ldr	r2, [r4, #16]
 8000ca2:	f003 0306 	and.w	r3, r3, #6
 8000ca6:	2b04      	cmp	r3, #4
 8000ca8:	bf02      	ittt	eq
 8000caa:	68e5      	ldreq	r5, [r4, #12]
 8000cac:	6833      	ldreq	r3, [r6, #0]
 8000cae:	1aed      	subeq	r5, r5, r3
 8000cb0:	68a3      	ldr	r3, [r4, #8]
 8000cb2:	bf0c      	ite	eq
 8000cb4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000cb8:	2500      	movne	r5, #0
 8000cba:	4293      	cmp	r3, r2
 8000cbc:	bfc4      	itt	gt
 8000cbe:	1a9b      	subgt	r3, r3, r2
 8000cc0:	18ed      	addgt	r5, r5, r3
 8000cc2:	2600      	movs	r6, #0
 8000cc4:	341a      	adds	r4, #26
 8000cc6:	42b5      	cmp	r5, r6
 8000cc8:	d11a      	bne.n	8000d00 <_printf_common+0xc8>
 8000cca:	2000      	movs	r0, #0
 8000ccc:	e008      	b.n	8000ce0 <_printf_common+0xa8>
 8000cce:	2301      	movs	r3, #1
 8000cd0:	4652      	mov	r2, sl
 8000cd2:	4649      	mov	r1, r9
 8000cd4:	4638      	mov	r0, r7
 8000cd6:	47c0      	blx	r8
 8000cd8:	3001      	adds	r0, #1
 8000cda:	d103      	bne.n	8000ce4 <_printf_common+0xac>
 8000cdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ce0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ce4:	3501      	adds	r5, #1
 8000ce6:	e7c6      	b.n	8000c76 <_printf_common+0x3e>
 8000ce8:	18e1      	adds	r1, r4, r3
 8000cea:	1c5a      	adds	r2, r3, #1
 8000cec:	2030      	movs	r0, #48	; 0x30
 8000cee:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000cf2:	4422      	add	r2, r4
 8000cf4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000cf8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000cfc:	3302      	adds	r3, #2
 8000cfe:	e7c7      	b.n	8000c90 <_printf_common+0x58>
 8000d00:	2301      	movs	r3, #1
 8000d02:	4622      	mov	r2, r4
 8000d04:	4649      	mov	r1, r9
 8000d06:	4638      	mov	r0, r7
 8000d08:	47c0      	blx	r8
 8000d0a:	3001      	adds	r0, #1
 8000d0c:	d0e6      	beq.n	8000cdc <_printf_common+0xa4>
 8000d0e:	3601      	adds	r6, #1
 8000d10:	e7d9      	b.n	8000cc6 <_printf_common+0x8e>
	...

08000d14 <_printf_i>:
 8000d14:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d18:	7e0f      	ldrb	r7, [r1, #24]
 8000d1a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000d1c:	2f78      	cmp	r7, #120	; 0x78
 8000d1e:	4691      	mov	r9, r2
 8000d20:	4680      	mov	r8, r0
 8000d22:	460c      	mov	r4, r1
 8000d24:	469a      	mov	sl, r3
 8000d26:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000d2a:	d807      	bhi.n	8000d3c <_printf_i+0x28>
 8000d2c:	2f62      	cmp	r7, #98	; 0x62
 8000d2e:	d80a      	bhi.n	8000d46 <_printf_i+0x32>
 8000d30:	2f00      	cmp	r7, #0
 8000d32:	f000 80d4 	beq.w	8000ede <_printf_i+0x1ca>
 8000d36:	2f58      	cmp	r7, #88	; 0x58
 8000d38:	f000 80c0 	beq.w	8000ebc <_printf_i+0x1a8>
 8000d3c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d40:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000d44:	e03a      	b.n	8000dbc <_printf_i+0xa8>
 8000d46:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000d4a:	2b15      	cmp	r3, #21
 8000d4c:	d8f6      	bhi.n	8000d3c <_printf_i+0x28>
 8000d4e:	a101      	add	r1, pc, #4	; (adr r1, 8000d54 <_printf_i+0x40>)
 8000d50:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d54:	08000dad 	.word	0x08000dad
 8000d58:	08000dc1 	.word	0x08000dc1
 8000d5c:	08000d3d 	.word	0x08000d3d
 8000d60:	08000d3d 	.word	0x08000d3d
 8000d64:	08000d3d 	.word	0x08000d3d
 8000d68:	08000d3d 	.word	0x08000d3d
 8000d6c:	08000dc1 	.word	0x08000dc1
 8000d70:	08000d3d 	.word	0x08000d3d
 8000d74:	08000d3d 	.word	0x08000d3d
 8000d78:	08000d3d 	.word	0x08000d3d
 8000d7c:	08000d3d 	.word	0x08000d3d
 8000d80:	08000ec5 	.word	0x08000ec5
 8000d84:	08000ded 	.word	0x08000ded
 8000d88:	08000e7f 	.word	0x08000e7f
 8000d8c:	08000d3d 	.word	0x08000d3d
 8000d90:	08000d3d 	.word	0x08000d3d
 8000d94:	08000ee7 	.word	0x08000ee7
 8000d98:	08000d3d 	.word	0x08000d3d
 8000d9c:	08000ded 	.word	0x08000ded
 8000da0:	08000d3d 	.word	0x08000d3d
 8000da4:	08000d3d 	.word	0x08000d3d
 8000da8:	08000e87 	.word	0x08000e87
 8000dac:	682b      	ldr	r3, [r5, #0]
 8000dae:	1d1a      	adds	r2, r3, #4
 8000db0:	681b      	ldr	r3, [r3, #0]
 8000db2:	602a      	str	r2, [r5, #0]
 8000db4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000db8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000dbc:	2301      	movs	r3, #1
 8000dbe:	e09f      	b.n	8000f00 <_printf_i+0x1ec>
 8000dc0:	6820      	ldr	r0, [r4, #0]
 8000dc2:	682b      	ldr	r3, [r5, #0]
 8000dc4:	0607      	lsls	r7, r0, #24
 8000dc6:	f103 0104 	add.w	r1, r3, #4
 8000dca:	6029      	str	r1, [r5, #0]
 8000dcc:	d501      	bpl.n	8000dd2 <_printf_i+0xbe>
 8000dce:	681e      	ldr	r6, [r3, #0]
 8000dd0:	e003      	b.n	8000dda <_printf_i+0xc6>
 8000dd2:	0646      	lsls	r6, r0, #25
 8000dd4:	d5fb      	bpl.n	8000dce <_printf_i+0xba>
 8000dd6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000dda:	2e00      	cmp	r6, #0
 8000ddc:	da03      	bge.n	8000de6 <_printf_i+0xd2>
 8000dde:	232d      	movs	r3, #45	; 0x2d
 8000de0:	4276      	negs	r6, r6
 8000de2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000de6:	485a      	ldr	r0, [pc, #360]	; (8000f50 <_printf_i+0x23c>)
 8000de8:	230a      	movs	r3, #10
 8000dea:	e012      	b.n	8000e12 <_printf_i+0xfe>
 8000dec:	682b      	ldr	r3, [r5, #0]
 8000dee:	6820      	ldr	r0, [r4, #0]
 8000df0:	1d19      	adds	r1, r3, #4
 8000df2:	6029      	str	r1, [r5, #0]
 8000df4:	0605      	lsls	r5, r0, #24
 8000df6:	d501      	bpl.n	8000dfc <_printf_i+0xe8>
 8000df8:	681e      	ldr	r6, [r3, #0]
 8000dfa:	e002      	b.n	8000e02 <_printf_i+0xee>
 8000dfc:	0641      	lsls	r1, r0, #25
 8000dfe:	d5fb      	bpl.n	8000df8 <_printf_i+0xe4>
 8000e00:	881e      	ldrh	r6, [r3, #0]
 8000e02:	4853      	ldr	r0, [pc, #332]	; (8000f50 <_printf_i+0x23c>)
 8000e04:	2f6f      	cmp	r7, #111	; 0x6f
 8000e06:	bf0c      	ite	eq
 8000e08:	2308      	moveq	r3, #8
 8000e0a:	230a      	movne	r3, #10
 8000e0c:	2100      	movs	r1, #0
 8000e0e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e12:	6865      	ldr	r5, [r4, #4]
 8000e14:	60a5      	str	r5, [r4, #8]
 8000e16:	2d00      	cmp	r5, #0
 8000e18:	bfa2      	ittt	ge
 8000e1a:	6821      	ldrge	r1, [r4, #0]
 8000e1c:	f021 0104 	bicge.w	r1, r1, #4
 8000e20:	6021      	strge	r1, [r4, #0]
 8000e22:	b90e      	cbnz	r6, 8000e28 <_printf_i+0x114>
 8000e24:	2d00      	cmp	r5, #0
 8000e26:	d04b      	beq.n	8000ec0 <_printf_i+0x1ac>
 8000e28:	4615      	mov	r5, r2
 8000e2a:	fbb6 f1f3 	udiv	r1, r6, r3
 8000e2e:	fb03 6711 	mls	r7, r3, r1, r6
 8000e32:	5dc7      	ldrb	r7, [r0, r7]
 8000e34:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000e38:	4637      	mov	r7, r6
 8000e3a:	42bb      	cmp	r3, r7
 8000e3c:	460e      	mov	r6, r1
 8000e3e:	d9f4      	bls.n	8000e2a <_printf_i+0x116>
 8000e40:	2b08      	cmp	r3, #8
 8000e42:	d10b      	bne.n	8000e5c <_printf_i+0x148>
 8000e44:	6823      	ldr	r3, [r4, #0]
 8000e46:	07de      	lsls	r6, r3, #31
 8000e48:	d508      	bpl.n	8000e5c <_printf_i+0x148>
 8000e4a:	6923      	ldr	r3, [r4, #16]
 8000e4c:	6861      	ldr	r1, [r4, #4]
 8000e4e:	4299      	cmp	r1, r3
 8000e50:	bfde      	ittt	le
 8000e52:	2330      	movle	r3, #48	; 0x30
 8000e54:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e58:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000e5c:	1b52      	subs	r2, r2, r5
 8000e5e:	6122      	str	r2, [r4, #16]
 8000e60:	f8cd a000 	str.w	sl, [sp]
 8000e64:	464b      	mov	r3, r9
 8000e66:	aa03      	add	r2, sp, #12
 8000e68:	4621      	mov	r1, r4
 8000e6a:	4640      	mov	r0, r8
 8000e6c:	f7ff fee4 	bl	8000c38 <_printf_common>
 8000e70:	3001      	adds	r0, #1
 8000e72:	d14a      	bne.n	8000f0a <_printf_i+0x1f6>
 8000e74:	f04f 30ff 	mov.w	r0, #4294967295
 8000e78:	b004      	add	sp, #16
 8000e7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e7e:	6823      	ldr	r3, [r4, #0]
 8000e80:	f043 0320 	orr.w	r3, r3, #32
 8000e84:	6023      	str	r3, [r4, #0]
 8000e86:	4833      	ldr	r0, [pc, #204]	; (8000f54 <_printf_i+0x240>)
 8000e88:	2778      	movs	r7, #120	; 0x78
 8000e8a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000e8e:	6823      	ldr	r3, [r4, #0]
 8000e90:	6829      	ldr	r1, [r5, #0]
 8000e92:	061f      	lsls	r7, r3, #24
 8000e94:	f851 6b04 	ldr.w	r6, [r1], #4
 8000e98:	d402      	bmi.n	8000ea0 <_printf_i+0x18c>
 8000e9a:	065f      	lsls	r7, r3, #25
 8000e9c:	bf48      	it	mi
 8000e9e:	b2b6      	uxthmi	r6, r6
 8000ea0:	07df      	lsls	r7, r3, #31
 8000ea2:	bf48      	it	mi
 8000ea4:	f043 0320 	orrmi.w	r3, r3, #32
 8000ea8:	6029      	str	r1, [r5, #0]
 8000eaa:	bf48      	it	mi
 8000eac:	6023      	strmi	r3, [r4, #0]
 8000eae:	b91e      	cbnz	r6, 8000eb8 <_printf_i+0x1a4>
 8000eb0:	6823      	ldr	r3, [r4, #0]
 8000eb2:	f023 0320 	bic.w	r3, r3, #32
 8000eb6:	6023      	str	r3, [r4, #0]
 8000eb8:	2310      	movs	r3, #16
 8000eba:	e7a7      	b.n	8000e0c <_printf_i+0xf8>
 8000ebc:	4824      	ldr	r0, [pc, #144]	; (8000f50 <_printf_i+0x23c>)
 8000ebe:	e7e4      	b.n	8000e8a <_printf_i+0x176>
 8000ec0:	4615      	mov	r5, r2
 8000ec2:	e7bd      	b.n	8000e40 <_printf_i+0x12c>
 8000ec4:	682b      	ldr	r3, [r5, #0]
 8000ec6:	6826      	ldr	r6, [r4, #0]
 8000ec8:	6961      	ldr	r1, [r4, #20]
 8000eca:	1d18      	adds	r0, r3, #4
 8000ecc:	6028      	str	r0, [r5, #0]
 8000ece:	0635      	lsls	r5, r6, #24
 8000ed0:	681b      	ldr	r3, [r3, #0]
 8000ed2:	d501      	bpl.n	8000ed8 <_printf_i+0x1c4>
 8000ed4:	6019      	str	r1, [r3, #0]
 8000ed6:	e002      	b.n	8000ede <_printf_i+0x1ca>
 8000ed8:	0670      	lsls	r0, r6, #25
 8000eda:	d5fb      	bpl.n	8000ed4 <_printf_i+0x1c0>
 8000edc:	8019      	strh	r1, [r3, #0]
 8000ede:	2300      	movs	r3, #0
 8000ee0:	6123      	str	r3, [r4, #16]
 8000ee2:	4615      	mov	r5, r2
 8000ee4:	e7bc      	b.n	8000e60 <_printf_i+0x14c>
 8000ee6:	682b      	ldr	r3, [r5, #0]
 8000ee8:	1d1a      	adds	r2, r3, #4
 8000eea:	602a      	str	r2, [r5, #0]
 8000eec:	681d      	ldr	r5, [r3, #0]
 8000eee:	6862      	ldr	r2, [r4, #4]
 8000ef0:	2100      	movs	r1, #0
 8000ef2:	4628      	mov	r0, r5
 8000ef4:	f7ff f96c 	bl	80001d0 <memchr>
 8000ef8:	b108      	cbz	r0, 8000efe <_printf_i+0x1ea>
 8000efa:	1b40      	subs	r0, r0, r5
 8000efc:	6060      	str	r0, [r4, #4]
 8000efe:	6863      	ldr	r3, [r4, #4]
 8000f00:	6123      	str	r3, [r4, #16]
 8000f02:	2300      	movs	r3, #0
 8000f04:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f08:	e7aa      	b.n	8000e60 <_printf_i+0x14c>
 8000f0a:	6923      	ldr	r3, [r4, #16]
 8000f0c:	462a      	mov	r2, r5
 8000f0e:	4649      	mov	r1, r9
 8000f10:	4640      	mov	r0, r8
 8000f12:	47d0      	blx	sl
 8000f14:	3001      	adds	r0, #1
 8000f16:	d0ad      	beq.n	8000e74 <_printf_i+0x160>
 8000f18:	6823      	ldr	r3, [r4, #0]
 8000f1a:	079b      	lsls	r3, r3, #30
 8000f1c:	d413      	bmi.n	8000f46 <_printf_i+0x232>
 8000f1e:	68e0      	ldr	r0, [r4, #12]
 8000f20:	9b03      	ldr	r3, [sp, #12]
 8000f22:	4298      	cmp	r0, r3
 8000f24:	bfb8      	it	lt
 8000f26:	4618      	movlt	r0, r3
 8000f28:	e7a6      	b.n	8000e78 <_printf_i+0x164>
 8000f2a:	2301      	movs	r3, #1
 8000f2c:	4632      	mov	r2, r6
 8000f2e:	4649      	mov	r1, r9
 8000f30:	4640      	mov	r0, r8
 8000f32:	47d0      	blx	sl
 8000f34:	3001      	adds	r0, #1
 8000f36:	d09d      	beq.n	8000e74 <_printf_i+0x160>
 8000f38:	3501      	adds	r5, #1
 8000f3a:	68e3      	ldr	r3, [r4, #12]
 8000f3c:	9903      	ldr	r1, [sp, #12]
 8000f3e:	1a5b      	subs	r3, r3, r1
 8000f40:	42ab      	cmp	r3, r5
 8000f42:	dcf2      	bgt.n	8000f2a <_printf_i+0x216>
 8000f44:	e7eb      	b.n	8000f1e <_printf_i+0x20a>
 8000f46:	2500      	movs	r5, #0
 8000f48:	f104 0619 	add.w	r6, r4, #25
 8000f4c:	e7f5      	b.n	8000f3a <_printf_i+0x226>
 8000f4e:	bf00      	nop
 8000f50:	080013e8 	.word	0x080013e8
 8000f54:	080013f9 	.word	0x080013f9

08000f58 <__sflush_r>:
 8000f58:	898a      	ldrh	r2, [r1, #12]
 8000f5a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f5c:	4605      	mov	r5, r0
 8000f5e:	0710      	lsls	r0, r2, #28
 8000f60:	460c      	mov	r4, r1
 8000f62:	d457      	bmi.n	8001014 <__sflush_r+0xbc>
 8000f64:	684b      	ldr	r3, [r1, #4]
 8000f66:	2b00      	cmp	r3, #0
 8000f68:	dc04      	bgt.n	8000f74 <__sflush_r+0x1c>
 8000f6a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000f6c:	2b00      	cmp	r3, #0
 8000f6e:	dc01      	bgt.n	8000f74 <__sflush_r+0x1c>
 8000f70:	2000      	movs	r0, #0
 8000f72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f74:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f76:	2e00      	cmp	r6, #0
 8000f78:	d0fa      	beq.n	8000f70 <__sflush_r+0x18>
 8000f7a:	2300      	movs	r3, #0
 8000f7c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000f80:	682f      	ldr	r7, [r5, #0]
 8000f82:	6a21      	ldr	r1, [r4, #32]
 8000f84:	602b      	str	r3, [r5, #0]
 8000f86:	d032      	beq.n	8000fee <__sflush_r+0x96>
 8000f88:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000f8a:	89a3      	ldrh	r3, [r4, #12]
 8000f8c:	075a      	lsls	r2, r3, #29
 8000f8e:	d505      	bpl.n	8000f9c <__sflush_r+0x44>
 8000f90:	6863      	ldr	r3, [r4, #4]
 8000f92:	1ac0      	subs	r0, r0, r3
 8000f94:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000f96:	b10b      	cbz	r3, 8000f9c <__sflush_r+0x44>
 8000f98:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000f9a:	1ac0      	subs	r0, r0, r3
 8000f9c:	2300      	movs	r3, #0
 8000f9e:	4602      	mov	r2, r0
 8000fa0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000fa2:	6a21      	ldr	r1, [r4, #32]
 8000fa4:	4628      	mov	r0, r5
 8000fa6:	47b0      	blx	r6
 8000fa8:	1c43      	adds	r3, r0, #1
 8000faa:	89a3      	ldrh	r3, [r4, #12]
 8000fac:	d106      	bne.n	8000fbc <__sflush_r+0x64>
 8000fae:	6829      	ldr	r1, [r5, #0]
 8000fb0:	291d      	cmp	r1, #29
 8000fb2:	d82b      	bhi.n	800100c <__sflush_r+0xb4>
 8000fb4:	4a28      	ldr	r2, [pc, #160]	; (8001058 <__sflush_r+0x100>)
 8000fb6:	410a      	asrs	r2, r1
 8000fb8:	07d6      	lsls	r6, r2, #31
 8000fba:	d427      	bmi.n	800100c <__sflush_r+0xb4>
 8000fbc:	2200      	movs	r2, #0
 8000fbe:	6062      	str	r2, [r4, #4]
 8000fc0:	04d9      	lsls	r1, r3, #19
 8000fc2:	6922      	ldr	r2, [r4, #16]
 8000fc4:	6022      	str	r2, [r4, #0]
 8000fc6:	d504      	bpl.n	8000fd2 <__sflush_r+0x7a>
 8000fc8:	1c42      	adds	r2, r0, #1
 8000fca:	d101      	bne.n	8000fd0 <__sflush_r+0x78>
 8000fcc:	682b      	ldr	r3, [r5, #0]
 8000fce:	b903      	cbnz	r3, 8000fd2 <__sflush_r+0x7a>
 8000fd0:	6560      	str	r0, [r4, #84]	; 0x54
 8000fd2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000fd4:	602f      	str	r7, [r5, #0]
 8000fd6:	2900      	cmp	r1, #0
 8000fd8:	d0ca      	beq.n	8000f70 <__sflush_r+0x18>
 8000fda:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000fde:	4299      	cmp	r1, r3
 8000fe0:	d002      	beq.n	8000fe8 <__sflush_r+0x90>
 8000fe2:	4628      	mov	r0, r5
 8000fe4:	f7ff fbf0 	bl	80007c8 <_free_r>
 8000fe8:	2000      	movs	r0, #0
 8000fea:	6360      	str	r0, [r4, #52]	; 0x34
 8000fec:	e7c1      	b.n	8000f72 <__sflush_r+0x1a>
 8000fee:	2301      	movs	r3, #1
 8000ff0:	4628      	mov	r0, r5
 8000ff2:	47b0      	blx	r6
 8000ff4:	1c41      	adds	r1, r0, #1
 8000ff6:	d1c8      	bne.n	8000f8a <__sflush_r+0x32>
 8000ff8:	682b      	ldr	r3, [r5, #0]
 8000ffa:	2b00      	cmp	r3, #0
 8000ffc:	d0c5      	beq.n	8000f8a <__sflush_r+0x32>
 8000ffe:	2b1d      	cmp	r3, #29
 8001000:	d001      	beq.n	8001006 <__sflush_r+0xae>
 8001002:	2b16      	cmp	r3, #22
 8001004:	d101      	bne.n	800100a <__sflush_r+0xb2>
 8001006:	602f      	str	r7, [r5, #0]
 8001008:	e7b2      	b.n	8000f70 <__sflush_r+0x18>
 800100a:	89a3      	ldrh	r3, [r4, #12]
 800100c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001010:	81a3      	strh	r3, [r4, #12]
 8001012:	e7ae      	b.n	8000f72 <__sflush_r+0x1a>
 8001014:	690f      	ldr	r7, [r1, #16]
 8001016:	2f00      	cmp	r7, #0
 8001018:	d0aa      	beq.n	8000f70 <__sflush_r+0x18>
 800101a:	0793      	lsls	r3, r2, #30
 800101c:	680e      	ldr	r6, [r1, #0]
 800101e:	bf08      	it	eq
 8001020:	694b      	ldreq	r3, [r1, #20]
 8001022:	600f      	str	r7, [r1, #0]
 8001024:	bf18      	it	ne
 8001026:	2300      	movne	r3, #0
 8001028:	1bf6      	subs	r6, r6, r7
 800102a:	608b      	str	r3, [r1, #8]
 800102c:	2e00      	cmp	r6, #0
 800102e:	dd9f      	ble.n	8000f70 <__sflush_r+0x18>
 8001030:	6a21      	ldr	r1, [r4, #32]
 8001032:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8001036:	4633      	mov	r3, r6
 8001038:	463a      	mov	r2, r7
 800103a:	4628      	mov	r0, r5
 800103c:	47e0      	blx	ip
 800103e:	2800      	cmp	r0, #0
 8001040:	dc06      	bgt.n	8001050 <__sflush_r+0xf8>
 8001042:	89a3      	ldrh	r3, [r4, #12]
 8001044:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001048:	81a3      	strh	r3, [r4, #12]
 800104a:	f04f 30ff 	mov.w	r0, #4294967295
 800104e:	e790      	b.n	8000f72 <__sflush_r+0x1a>
 8001050:	4407      	add	r7, r0
 8001052:	1a36      	subs	r6, r6, r0
 8001054:	e7ea      	b.n	800102c <__sflush_r+0xd4>
 8001056:	bf00      	nop
 8001058:	dfbffffe 	.word	0xdfbffffe

0800105c <_fflush_r>:
 800105c:	b538      	push	{r3, r4, r5, lr}
 800105e:	690b      	ldr	r3, [r1, #16]
 8001060:	4605      	mov	r5, r0
 8001062:	460c      	mov	r4, r1
 8001064:	b913      	cbnz	r3, 800106c <_fflush_r+0x10>
 8001066:	2500      	movs	r5, #0
 8001068:	4628      	mov	r0, r5
 800106a:	bd38      	pop	{r3, r4, r5, pc}
 800106c:	b118      	cbz	r0, 8001076 <_fflush_r+0x1a>
 800106e:	6a03      	ldr	r3, [r0, #32]
 8001070:	b90b      	cbnz	r3, 8001076 <_fflush_r+0x1a>
 8001072:	f7ff faa1 	bl	80005b8 <__sinit>
 8001076:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800107a:	2b00      	cmp	r3, #0
 800107c:	d0f3      	beq.n	8001066 <_fflush_r+0xa>
 800107e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001080:	07d0      	lsls	r0, r2, #31
 8001082:	d404      	bmi.n	800108e <_fflush_r+0x32>
 8001084:	0599      	lsls	r1, r3, #22
 8001086:	d402      	bmi.n	800108e <_fflush_r+0x32>
 8001088:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800108a:	f7ff fb9a 	bl	80007c2 <__retarget_lock_acquire_recursive>
 800108e:	4628      	mov	r0, r5
 8001090:	4621      	mov	r1, r4
 8001092:	f7ff ff61 	bl	8000f58 <__sflush_r>
 8001096:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001098:	07da      	lsls	r2, r3, #31
 800109a:	4605      	mov	r5, r0
 800109c:	d4e4      	bmi.n	8001068 <_fflush_r+0xc>
 800109e:	89a3      	ldrh	r3, [r4, #12]
 80010a0:	059b      	lsls	r3, r3, #22
 80010a2:	d4e1      	bmi.n	8001068 <_fflush_r+0xc>
 80010a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010a6:	f7ff fb8d 	bl	80007c4 <__retarget_lock_release_recursive>
 80010aa:	e7dd      	b.n	8001068 <_fflush_r+0xc>

080010ac <__swbuf_r>:
 80010ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010ae:	460e      	mov	r6, r1
 80010b0:	4614      	mov	r4, r2
 80010b2:	4605      	mov	r5, r0
 80010b4:	b118      	cbz	r0, 80010be <__swbuf_r+0x12>
 80010b6:	6a03      	ldr	r3, [r0, #32]
 80010b8:	b90b      	cbnz	r3, 80010be <__swbuf_r+0x12>
 80010ba:	f7ff fa7d 	bl	80005b8 <__sinit>
 80010be:	69a3      	ldr	r3, [r4, #24]
 80010c0:	60a3      	str	r3, [r4, #8]
 80010c2:	89a3      	ldrh	r3, [r4, #12]
 80010c4:	071a      	lsls	r2, r3, #28
 80010c6:	d525      	bpl.n	8001114 <__swbuf_r+0x68>
 80010c8:	6923      	ldr	r3, [r4, #16]
 80010ca:	b31b      	cbz	r3, 8001114 <__swbuf_r+0x68>
 80010cc:	6823      	ldr	r3, [r4, #0]
 80010ce:	6922      	ldr	r2, [r4, #16]
 80010d0:	1a98      	subs	r0, r3, r2
 80010d2:	6963      	ldr	r3, [r4, #20]
 80010d4:	b2f6      	uxtb	r6, r6
 80010d6:	4283      	cmp	r3, r0
 80010d8:	4637      	mov	r7, r6
 80010da:	dc04      	bgt.n	80010e6 <__swbuf_r+0x3a>
 80010dc:	4621      	mov	r1, r4
 80010de:	4628      	mov	r0, r5
 80010e0:	f7ff ffbc 	bl	800105c <_fflush_r>
 80010e4:	b9e0      	cbnz	r0, 8001120 <__swbuf_r+0x74>
 80010e6:	68a3      	ldr	r3, [r4, #8]
 80010e8:	3b01      	subs	r3, #1
 80010ea:	60a3      	str	r3, [r4, #8]
 80010ec:	6823      	ldr	r3, [r4, #0]
 80010ee:	1c5a      	adds	r2, r3, #1
 80010f0:	6022      	str	r2, [r4, #0]
 80010f2:	701e      	strb	r6, [r3, #0]
 80010f4:	6962      	ldr	r2, [r4, #20]
 80010f6:	1c43      	adds	r3, r0, #1
 80010f8:	429a      	cmp	r2, r3
 80010fa:	d004      	beq.n	8001106 <__swbuf_r+0x5a>
 80010fc:	89a3      	ldrh	r3, [r4, #12]
 80010fe:	07db      	lsls	r3, r3, #31
 8001100:	d506      	bpl.n	8001110 <__swbuf_r+0x64>
 8001102:	2e0a      	cmp	r6, #10
 8001104:	d104      	bne.n	8001110 <__swbuf_r+0x64>
 8001106:	4621      	mov	r1, r4
 8001108:	4628      	mov	r0, r5
 800110a:	f7ff ffa7 	bl	800105c <_fflush_r>
 800110e:	b938      	cbnz	r0, 8001120 <__swbuf_r+0x74>
 8001110:	4638      	mov	r0, r7
 8001112:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001114:	4621      	mov	r1, r4
 8001116:	4628      	mov	r0, r5
 8001118:	f000 f806 	bl	8001128 <__swsetup_r>
 800111c:	2800      	cmp	r0, #0
 800111e:	d0d5      	beq.n	80010cc <__swbuf_r+0x20>
 8001120:	f04f 37ff 	mov.w	r7, #4294967295
 8001124:	e7f4      	b.n	8001110 <__swbuf_r+0x64>
	...

08001128 <__swsetup_r>:
 8001128:	b538      	push	{r3, r4, r5, lr}
 800112a:	4b2a      	ldr	r3, [pc, #168]	; (80011d4 <__swsetup_r+0xac>)
 800112c:	4605      	mov	r5, r0
 800112e:	6818      	ldr	r0, [r3, #0]
 8001130:	460c      	mov	r4, r1
 8001132:	b118      	cbz	r0, 800113c <__swsetup_r+0x14>
 8001134:	6a03      	ldr	r3, [r0, #32]
 8001136:	b90b      	cbnz	r3, 800113c <__swsetup_r+0x14>
 8001138:	f7ff fa3e 	bl	80005b8 <__sinit>
 800113c:	89a3      	ldrh	r3, [r4, #12]
 800113e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001142:	0718      	lsls	r0, r3, #28
 8001144:	d422      	bmi.n	800118c <__swsetup_r+0x64>
 8001146:	06d9      	lsls	r1, r3, #27
 8001148:	d407      	bmi.n	800115a <__swsetup_r+0x32>
 800114a:	2309      	movs	r3, #9
 800114c:	602b      	str	r3, [r5, #0]
 800114e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001152:	81a3      	strh	r3, [r4, #12]
 8001154:	f04f 30ff 	mov.w	r0, #4294967295
 8001158:	e034      	b.n	80011c4 <__swsetup_r+0x9c>
 800115a:	0758      	lsls	r0, r3, #29
 800115c:	d512      	bpl.n	8001184 <__swsetup_r+0x5c>
 800115e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001160:	b141      	cbz	r1, 8001174 <__swsetup_r+0x4c>
 8001162:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001166:	4299      	cmp	r1, r3
 8001168:	d002      	beq.n	8001170 <__swsetup_r+0x48>
 800116a:	4628      	mov	r0, r5
 800116c:	f7ff fb2c 	bl	80007c8 <_free_r>
 8001170:	2300      	movs	r3, #0
 8001172:	6363      	str	r3, [r4, #52]	; 0x34
 8001174:	89a3      	ldrh	r3, [r4, #12]
 8001176:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800117a:	81a3      	strh	r3, [r4, #12]
 800117c:	2300      	movs	r3, #0
 800117e:	6063      	str	r3, [r4, #4]
 8001180:	6923      	ldr	r3, [r4, #16]
 8001182:	6023      	str	r3, [r4, #0]
 8001184:	89a3      	ldrh	r3, [r4, #12]
 8001186:	f043 0308 	orr.w	r3, r3, #8
 800118a:	81a3      	strh	r3, [r4, #12]
 800118c:	6923      	ldr	r3, [r4, #16]
 800118e:	b94b      	cbnz	r3, 80011a4 <__swsetup_r+0x7c>
 8001190:	89a3      	ldrh	r3, [r4, #12]
 8001192:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001196:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800119a:	d003      	beq.n	80011a4 <__swsetup_r+0x7c>
 800119c:	4621      	mov	r1, r4
 800119e:	4628      	mov	r0, r5
 80011a0:	f000 f850 	bl	8001244 <__smakebuf_r>
 80011a4:	89a0      	ldrh	r0, [r4, #12]
 80011a6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011aa:	f010 0301 	ands.w	r3, r0, #1
 80011ae:	d00a      	beq.n	80011c6 <__swsetup_r+0x9e>
 80011b0:	2300      	movs	r3, #0
 80011b2:	60a3      	str	r3, [r4, #8]
 80011b4:	6963      	ldr	r3, [r4, #20]
 80011b6:	425b      	negs	r3, r3
 80011b8:	61a3      	str	r3, [r4, #24]
 80011ba:	6923      	ldr	r3, [r4, #16]
 80011bc:	b943      	cbnz	r3, 80011d0 <__swsetup_r+0xa8>
 80011be:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80011c2:	d1c4      	bne.n	800114e <__swsetup_r+0x26>
 80011c4:	bd38      	pop	{r3, r4, r5, pc}
 80011c6:	0781      	lsls	r1, r0, #30
 80011c8:	bf58      	it	pl
 80011ca:	6963      	ldrpl	r3, [r4, #20]
 80011cc:	60a3      	str	r3, [r4, #8]
 80011ce:	e7f4      	b.n	80011ba <__swsetup_r+0x92>
 80011d0:	2000      	movs	r0, #0
 80011d2:	e7f7      	b.n	80011c4 <__swsetup_r+0x9c>
 80011d4:	20000058 	.word	0x20000058

080011d8 <_sbrk_r>:
 80011d8:	b538      	push	{r3, r4, r5, lr}
 80011da:	4d06      	ldr	r5, [pc, #24]	; (80011f4 <_sbrk_r+0x1c>)
 80011dc:	2300      	movs	r3, #0
 80011de:	4604      	mov	r4, r0
 80011e0:	4608      	mov	r0, r1
 80011e2:	602b      	str	r3, [r5, #0]
 80011e4:	f7ff f8fc 	bl	80003e0 <_sbrk>
 80011e8:	1c43      	adds	r3, r0, #1
 80011ea:	d102      	bne.n	80011f2 <_sbrk_r+0x1a>
 80011ec:	682b      	ldr	r3, [r5, #0]
 80011ee:	b103      	cbz	r3, 80011f2 <_sbrk_r+0x1a>
 80011f0:	6023      	str	r3, [r4, #0]
 80011f2:	bd38      	pop	{r3, r4, r5, pc}
 80011f4:	200001b8 	.word	0x200001b8

080011f8 <__swhatbuf_r>:
 80011f8:	b570      	push	{r4, r5, r6, lr}
 80011fa:	460c      	mov	r4, r1
 80011fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001200:	2900      	cmp	r1, #0
 8001202:	b096      	sub	sp, #88	; 0x58
 8001204:	4615      	mov	r5, r2
 8001206:	461e      	mov	r6, r3
 8001208:	da0d      	bge.n	8001226 <__swhatbuf_r+0x2e>
 800120a:	89a3      	ldrh	r3, [r4, #12]
 800120c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001210:	f04f 0100 	mov.w	r1, #0
 8001214:	bf0c      	ite	eq
 8001216:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800121a:	2340      	movne	r3, #64	; 0x40
 800121c:	2000      	movs	r0, #0
 800121e:	6031      	str	r1, [r6, #0]
 8001220:	602b      	str	r3, [r5, #0]
 8001222:	b016      	add	sp, #88	; 0x58
 8001224:	bd70      	pop	{r4, r5, r6, pc}
 8001226:	466a      	mov	r2, sp
 8001228:	f000 f848 	bl	80012bc <_fstat_r>
 800122c:	2800      	cmp	r0, #0
 800122e:	dbec      	blt.n	800120a <__swhatbuf_r+0x12>
 8001230:	9901      	ldr	r1, [sp, #4]
 8001232:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8001236:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800123a:	4259      	negs	r1, r3
 800123c:	4159      	adcs	r1, r3
 800123e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001242:	e7eb      	b.n	800121c <__swhatbuf_r+0x24>

08001244 <__smakebuf_r>:
 8001244:	898b      	ldrh	r3, [r1, #12]
 8001246:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001248:	079d      	lsls	r5, r3, #30
 800124a:	4606      	mov	r6, r0
 800124c:	460c      	mov	r4, r1
 800124e:	d507      	bpl.n	8001260 <__smakebuf_r+0x1c>
 8001250:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001254:	6023      	str	r3, [r4, #0]
 8001256:	6123      	str	r3, [r4, #16]
 8001258:	2301      	movs	r3, #1
 800125a:	6163      	str	r3, [r4, #20]
 800125c:	b002      	add	sp, #8
 800125e:	bd70      	pop	{r4, r5, r6, pc}
 8001260:	ab01      	add	r3, sp, #4
 8001262:	466a      	mov	r2, sp
 8001264:	f7ff ffc8 	bl	80011f8 <__swhatbuf_r>
 8001268:	9900      	ldr	r1, [sp, #0]
 800126a:	4605      	mov	r5, r0
 800126c:	4630      	mov	r0, r6
 800126e:	f7ff fb15 	bl	800089c <_malloc_r>
 8001272:	b948      	cbnz	r0, 8001288 <__smakebuf_r+0x44>
 8001274:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001278:	059a      	lsls	r2, r3, #22
 800127a:	d4ef      	bmi.n	800125c <__smakebuf_r+0x18>
 800127c:	f023 0303 	bic.w	r3, r3, #3
 8001280:	f043 0302 	orr.w	r3, r3, #2
 8001284:	81a3      	strh	r3, [r4, #12]
 8001286:	e7e3      	b.n	8001250 <__smakebuf_r+0xc>
 8001288:	89a3      	ldrh	r3, [r4, #12]
 800128a:	6020      	str	r0, [r4, #0]
 800128c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001290:	81a3      	strh	r3, [r4, #12]
 8001292:	9b00      	ldr	r3, [sp, #0]
 8001294:	6163      	str	r3, [r4, #20]
 8001296:	9b01      	ldr	r3, [sp, #4]
 8001298:	6120      	str	r0, [r4, #16]
 800129a:	b15b      	cbz	r3, 80012b4 <__smakebuf_r+0x70>
 800129c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012a0:	4630      	mov	r0, r6
 80012a2:	f000 f81d 	bl	80012e0 <_isatty_r>
 80012a6:	b128      	cbz	r0, 80012b4 <__smakebuf_r+0x70>
 80012a8:	89a3      	ldrh	r3, [r4, #12]
 80012aa:	f023 0303 	bic.w	r3, r3, #3
 80012ae:	f043 0301 	orr.w	r3, r3, #1
 80012b2:	81a3      	strh	r3, [r4, #12]
 80012b4:	89a3      	ldrh	r3, [r4, #12]
 80012b6:	431d      	orrs	r5, r3
 80012b8:	81a5      	strh	r5, [r4, #12]
 80012ba:	e7cf      	b.n	800125c <__smakebuf_r+0x18>

080012bc <_fstat_r>:
 80012bc:	b538      	push	{r3, r4, r5, lr}
 80012be:	4d07      	ldr	r5, [pc, #28]	; (80012dc <_fstat_r+0x20>)
 80012c0:	2300      	movs	r3, #0
 80012c2:	4604      	mov	r4, r0
 80012c4:	4608      	mov	r0, r1
 80012c6:	4611      	mov	r1, r2
 80012c8:	602b      	str	r3, [r5, #0]
 80012ca:	f7ff f863 	bl	8000394 <_fstat>
 80012ce:	1c43      	adds	r3, r0, #1
 80012d0:	d102      	bne.n	80012d8 <_fstat_r+0x1c>
 80012d2:	682b      	ldr	r3, [r5, #0]
 80012d4:	b103      	cbz	r3, 80012d8 <_fstat_r+0x1c>
 80012d6:	6023      	str	r3, [r4, #0]
 80012d8:	bd38      	pop	{r3, r4, r5, pc}
 80012da:	bf00      	nop
 80012dc:	200001b8 	.word	0x200001b8

080012e0 <_isatty_r>:
 80012e0:	b538      	push	{r3, r4, r5, lr}
 80012e2:	4d06      	ldr	r5, [pc, #24]	; (80012fc <_isatty_r+0x1c>)
 80012e4:	2300      	movs	r3, #0
 80012e6:	4604      	mov	r4, r0
 80012e8:	4608      	mov	r0, r1
 80012ea:	602b      	str	r3, [r5, #0]
 80012ec:	f7ff f861 	bl	80003b2 <_isatty>
 80012f0:	1c43      	adds	r3, r0, #1
 80012f2:	d102      	bne.n	80012fa <_isatty_r+0x1a>
 80012f4:	682b      	ldr	r3, [r5, #0]
 80012f6:	b103      	cbz	r3, 80012fa <_isatty_r+0x1a>
 80012f8:	6023      	str	r3, [r4, #0]
 80012fa:	bd38      	pop	{r3, r4, r5, pc}
 80012fc:	200001b8 	.word	0x200001b8

08001300 <_init>:
 8001300:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001302:	bf00      	nop
 8001304:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001306:	bc08      	pop	{r3}
 8001308:	469e      	mov	lr, r3
 800130a:	4770      	bx	lr

0800130c <_fini>:
 800130c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800130e:	bf00      	nop
 8001310:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001312:	bc08      	pop	{r3}
 8001314:	469e      	mov	lr, r3
 8001316:	4770      	bx	lr
